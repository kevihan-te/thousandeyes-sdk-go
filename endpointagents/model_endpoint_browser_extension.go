/*
Endpoint Agents API

Manage ThousandEyes Endpoint Agents using this API.   For more information about Endpoint Agents, see [Endpoint Agents](https://docs.thousandeyes.com/product-documentation/global-vantage-points/endpoint-agents).

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointagents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the EndpointBrowserExtension type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointBrowserExtension{}

// EndpointBrowserExtension struct for EndpointBrowserExtension
type EndpointBrowserExtension struct {
	Browser *BrowserType `json:"browser,omitempty"`
	// Name of the browser profile where this extension is stored.
	Profile *string `json:"profile,omitempty"`
	// Endpoint agent browser extension version.
	Version *string `json:"version,omitempty"`
	// Indicates if the extension is disabled or enabled in the web browser.
	Enabled *bool `json:"enabled,omitempty"`
	// Flag indicating if there is communication between the extension and ThousandEyes portal. 
	Active *bool `json:"active,omitempty"`
	// Contains any errors encountered while getting extension status.
	Error *string `json:"error,omitempty"`
}

// NewEndpointBrowserExtension instantiates a new EndpointBrowserExtension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointBrowserExtension() *EndpointBrowserExtension {
	this := EndpointBrowserExtension{}
	return &this
}

// NewEndpointBrowserExtensionWithDefaults instantiates a new EndpointBrowserExtension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointBrowserExtensionWithDefaults() *EndpointBrowserExtension {
	this := EndpointBrowserExtension{}
	return &this
}

// GetBrowser returns the Browser field value if set, zero value otherwise.
func (o *EndpointBrowserExtension) GetBrowser() BrowserType {
	if o == nil || utils.IsNil(o.Browser) {
		var ret BrowserType
		return ret
	}
	return *o.Browser
}

// GetBrowserOk returns a tuple with the Browser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowserExtension) GetBrowserOk() (*BrowserType, bool) {
	if o == nil || utils.IsNil(o.Browser) {
		return nil, false
	}
	return o.Browser, true
}

// HasBrowser returns a boolean if a field has been set.
func (o *EndpointBrowserExtension) HasBrowser() bool {
	if o != nil && !utils.IsNil(o.Browser) {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given BrowserType and assigns it to the Browser field.
func (o *EndpointBrowserExtension) SetBrowser(v BrowserType) {
	o.Browser = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *EndpointBrowserExtension) GetProfile() string {
	if o == nil || utils.IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowserExtension) GetProfileOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *EndpointBrowserExtension) HasProfile() bool {
	if o != nil && !utils.IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *EndpointBrowserExtension) SetProfile(v string) {
	o.Profile = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *EndpointBrowserExtension) GetVersion() string {
	if o == nil || utils.IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowserExtension) GetVersionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *EndpointBrowserExtension) HasVersion() bool {
	if o != nil && !utils.IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *EndpointBrowserExtension) SetVersion(v string) {
	o.Version = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *EndpointBrowserExtension) GetEnabled() bool {
	if o == nil || utils.IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowserExtension) GetEnabledOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *EndpointBrowserExtension) HasEnabled() bool {
	if o != nil && !utils.IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *EndpointBrowserExtension) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *EndpointBrowserExtension) GetActive() bool {
	if o == nil || utils.IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowserExtension) GetActiveOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *EndpointBrowserExtension) HasActive() bool {
	if o != nil && !utils.IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *EndpointBrowserExtension) SetActive(v bool) {
	o.Active = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *EndpointBrowserExtension) GetError() string {
	if o == nil || utils.IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowserExtension) GetErrorOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *EndpointBrowserExtension) HasError() bool {
	if o != nil && !utils.IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *EndpointBrowserExtension) SetError(v string) {
	o.Error = &v
}

func (o EndpointBrowserExtension) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointBrowserExtension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Browser) {
		toSerialize["browser"] = o.Browser
	}
	if !utils.IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !utils.IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !utils.IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !utils.IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !utils.IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableEndpointBrowserExtension struct {
	value *EndpointBrowserExtension
	isSet bool
}

func (v NullableEndpointBrowserExtension) Get() *EndpointBrowserExtension {
	return v.value
}

func (v *NullableEndpointBrowserExtension) Set(val *EndpointBrowserExtension) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointBrowserExtension) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointBrowserExtension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointBrowserExtension(val *EndpointBrowserExtension) *NullableEndpointBrowserExtension {
	return &NullableEndpointBrowserExtension{value: val, isSet: true}
}

func (v NullableEndpointBrowserExtension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointBrowserExtension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


