/*
Endpoint Agents API

Manage ThousandEyes Endpoint Agents using this API.   For more information about Endpoint Agents, see [Endpoint Agents](https://docs.thousandeyes.com/product-documentation/global-vantage-points/endpoint-agents).

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointagents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the AgentTransferRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AgentTransferRequest{}

// AgentTransferRequest struct for AgentTransferRequest
type AgentTransferRequest struct {
	// A unique identifier associated with your account group. You can retrieve your `AccountGroupId` from the `/account-groups` endpoint.
	ToAid *string `json:"toAid,omitempty"`
}

// NewAgentTransferRequest instantiates a new AgentTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentTransferRequest() *AgentTransferRequest {
	this := AgentTransferRequest{}
	return &this
}

// NewAgentTransferRequestWithDefaults instantiates a new AgentTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentTransferRequestWithDefaults() *AgentTransferRequest {
	this := AgentTransferRequest{}
	return &this
}

// GetToAid returns the ToAid field value if set, zero value otherwise.
func (o *AgentTransferRequest) GetToAid() string {
	if o == nil || utils.IsNil(o.ToAid) {
		var ret string
		return ret
	}
	return *o.ToAid
}

// GetToAidOk returns a tuple with the ToAid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTransferRequest) GetToAidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ToAid) {
		return nil, false
	}
	return o.ToAid, true
}

// HasToAid returns a boolean if a field has been set.
func (o *AgentTransferRequest) HasToAid() bool {
	if o != nil && !utils.IsNil(o.ToAid) {
		return true
	}

	return false
}

// SetToAid gets a reference to the given string and assigns it to the ToAid field.
func (o *AgentTransferRequest) SetToAid(v string) {
	o.ToAid = &v
}

func (o AgentTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentTransferRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.ToAid) {
		toSerialize["toAid"] = o.ToAid
	}
	return toSerialize, nil
}

type NullableAgentTransferRequest struct {
	value *AgentTransferRequest
	isSet bool
}

func (v NullableAgentTransferRequest) Get() *AgentTransferRequest {
	return v.value
}

func (v *NullableAgentTransferRequest) Set(val *AgentTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentTransferRequest(val *AgentTransferRequest) *NullableAgentTransferRequest {
	return &NullableAgentTransferRequest{value: val, isSet: true}
}

func (v NullableAgentTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


