/*
Endpoint Agents API

Manage ThousandEyes Endpoint Agents using this API.   For more information about Endpoint Agents, see [Endpoint Agents](https://docs.thousandeyes.com/product-documentation/global-vantage-points/endpoint-agents).

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointagents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"fmt"
)

// checks if the EndpointVpnProfile type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointVpnProfile{}

// EndpointVpnProfile struct for EndpointVpnProfile
type EndpointVpnProfile struct {
	// Interface name associated with `interfaceProfile`.
	InterfaceName *string `json:"interfaceName,omitempty"`
	VpnType *VpnType `json:"vpnType,omitempty"`
	// IP address of the VPN gateway.
	VpnGatewayAddress *string `json:"vpnGatewayAddress,omitempty"`
	// List of private IP addresses assigned to the device, by the VPN server.
	VpnClientAddresses []string `json:"vpnClientAddresses"`
	// List of private networks assigned to the device, by the VPN server.
	VpnClientNetworkRange []string `json:"vpnClientNetworkRange"`
}

type _EndpointVpnProfile EndpointVpnProfile

// NewEndpointVpnProfile instantiates a new EndpointVpnProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointVpnProfile(vpnClientAddresses []string, vpnClientNetworkRange []string) *EndpointVpnProfile {
	this := EndpointVpnProfile{}
	this.VpnClientAddresses = vpnClientAddresses
	this.VpnClientNetworkRange = vpnClientNetworkRange
	return &this
}

// NewEndpointVpnProfileWithDefaults instantiates a new EndpointVpnProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointVpnProfileWithDefaults() *EndpointVpnProfile {
	this := EndpointVpnProfile{}
	return &this
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *EndpointVpnProfile) GetInterfaceName() string {
	if o == nil || utils.IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointVpnProfile) GetInterfaceNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *EndpointVpnProfile) HasInterfaceName() bool {
	if o != nil && !utils.IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *EndpointVpnProfile) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

// GetVpnType returns the VpnType field value if set, zero value otherwise.
func (o *EndpointVpnProfile) GetVpnType() VpnType {
	if o == nil || utils.IsNil(o.VpnType) {
		var ret VpnType
		return ret
	}
	return *o.VpnType
}

// GetVpnTypeOk returns a tuple with the VpnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointVpnProfile) GetVpnTypeOk() (*VpnType, bool) {
	if o == nil || utils.IsNil(o.VpnType) {
		return nil, false
	}
	return o.VpnType, true
}

// HasVpnType returns a boolean if a field has been set.
func (o *EndpointVpnProfile) HasVpnType() bool {
	if o != nil && !utils.IsNil(o.VpnType) {
		return true
	}

	return false
}

// SetVpnType gets a reference to the given VpnType and assigns it to the VpnType field.
func (o *EndpointVpnProfile) SetVpnType(v VpnType) {
	o.VpnType = &v
}

// GetVpnGatewayAddress returns the VpnGatewayAddress field value if set, zero value otherwise.
func (o *EndpointVpnProfile) GetVpnGatewayAddress() string {
	if o == nil || utils.IsNil(o.VpnGatewayAddress) {
		var ret string
		return ret
	}
	return *o.VpnGatewayAddress
}

// GetVpnGatewayAddressOk returns a tuple with the VpnGatewayAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointVpnProfile) GetVpnGatewayAddressOk() (*string, bool) {
	if o == nil || utils.IsNil(o.VpnGatewayAddress) {
		return nil, false
	}
	return o.VpnGatewayAddress, true
}

// HasVpnGatewayAddress returns a boolean if a field has been set.
func (o *EndpointVpnProfile) HasVpnGatewayAddress() bool {
	if o != nil && !utils.IsNil(o.VpnGatewayAddress) {
		return true
	}

	return false
}

// SetVpnGatewayAddress gets a reference to the given string and assigns it to the VpnGatewayAddress field.
func (o *EndpointVpnProfile) SetVpnGatewayAddress(v string) {
	o.VpnGatewayAddress = &v
}

// GetVpnClientAddresses returns the VpnClientAddresses field value
func (o *EndpointVpnProfile) GetVpnClientAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VpnClientAddresses
}

// GetVpnClientAddressesOk returns a tuple with the VpnClientAddresses field value
// and a boolean to check if the value has been set.
func (o *EndpointVpnProfile) GetVpnClientAddressesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpnClientAddresses, true
}

// SetVpnClientAddresses sets field value
func (o *EndpointVpnProfile) SetVpnClientAddresses(v []string) {
	o.VpnClientAddresses = v
}

// GetVpnClientNetworkRange returns the VpnClientNetworkRange field value
func (o *EndpointVpnProfile) GetVpnClientNetworkRange() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VpnClientNetworkRange
}

// GetVpnClientNetworkRangeOk returns a tuple with the VpnClientNetworkRange field value
// and a boolean to check if the value has been set.
func (o *EndpointVpnProfile) GetVpnClientNetworkRangeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpnClientNetworkRange, true
}

// SetVpnClientNetworkRange sets field value
func (o *EndpointVpnProfile) SetVpnClientNetworkRange(v []string) {
	o.VpnClientNetworkRange = v
}

func (o EndpointVpnProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointVpnProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.InterfaceName) {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	if !utils.IsNil(o.VpnType) {
		toSerialize["vpnType"] = o.VpnType
	}
	if !utils.IsNil(o.VpnGatewayAddress) {
		toSerialize["vpnGatewayAddress"] = o.VpnGatewayAddress
	}
	toSerialize["vpnClientAddresses"] = o.VpnClientAddresses
	toSerialize["vpnClientNetworkRange"] = o.VpnClientNetworkRange
	return toSerialize, nil
}

func (o *EndpointVpnProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vpnClientAddresses",
		"vpnClientNetworkRange",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointVpnProfile := _EndpointVpnProfile{}

    err = json.Unmarshal(data, &varEndpointVpnProfile)

	if err != nil {
		return err
	}

	*o = EndpointVpnProfile(varEndpointVpnProfile)

	return err
}

type NullableEndpointVpnProfile struct {
	value *EndpointVpnProfile
	isSet bool
}

func (v NullableEndpointVpnProfile) Get() *EndpointVpnProfile {
	return v.value
}

func (v *NullableEndpointVpnProfile) Set(val *EndpointVpnProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointVpnProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointVpnProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointVpnProfile(val *EndpointVpnProfile) *NullableEndpointVpnProfile {
	return &NullableEndpointVpnProfile{value: val, isSet: true}
}

func (v NullableEndpointVpnProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointVpnProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


