/*
Instant Tests API

The Instant Tests API operations lets you create and run new instant tests. You will need to be a regular user or have the following permissions:   * `API Access`   * `View tests`  The response does not include the immediate test results. Use the Test Results endpoints to get test results after creating and executing an instant test. You can find the URLs for these endpoints in the _links section of the test definition that is returned when you create the instant test. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instanttests

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiRequestHeader type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiRequestHeader{}

// ApiRequestHeader struct for ApiRequestHeader
type ApiRequestHeader struct {
	// Request header key.
	Key *string `json:"key,omitempty"`
	// Request header value. Supports variables `{{variableName}}`.
	Value *string `json:"value,omitempty"`
}

// NewApiRequestHeader instantiates a new ApiRequestHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRequestHeader() *ApiRequestHeader {
	this := ApiRequestHeader{}
	return &this
}

// NewApiRequestHeaderWithDefaults instantiates a new ApiRequestHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRequestHeaderWithDefaults() *ApiRequestHeader {
	this := ApiRequestHeader{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ApiRequestHeader) GetKey() string {
	if o == nil || utils.IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestHeader) GetKeyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ApiRequestHeader) HasKey() bool {
	if o != nil && !utils.IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ApiRequestHeader) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ApiRequestHeader) GetValue() string {
	if o == nil || utils.IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestHeader) GetValueOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ApiRequestHeader) HasValue() bool {
	if o != nil && !utils.IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ApiRequestHeader) SetValue(v string) {
	o.Value = &v
}

func (o ApiRequestHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRequestHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !utils.IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableApiRequestHeader struct {
	value *ApiRequestHeader
	isSet bool
}

func (v NullableApiRequestHeader) Get() *ApiRequestHeader {
	return v.value
}

func (v *NullableApiRequestHeader) Set(val *ApiRequestHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRequestHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRequestHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRequestHeader(val *ApiRequestHeader) *NullableApiRequestHeader {
	return &NullableApiRequestHeader{value: val, isSet: true}
}

func (v NullableApiRequestHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRequestHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


