/*
Instant Tests API

The Instant Tests API operations lets you create and run new instant tests. You will need to be a regular user or have the following permissions:   * `API Access`   * `View tests`  The response does not include the immediate test results. Use the Test Results endpoints to get test results after creating and executing an instant test. You can find the URLs for these endpoints in the _links section of the test definition that is returned when you create the instant test. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instanttests

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the TestCustomHeaders type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TestCustomHeaders{}

// TestCustomHeaders struct for TestCustomHeaders
type TestCustomHeaders struct {
	// Use these HTTP headers for root server request.
	Root *map[string]string `json:"root,omitempty"`
	// Use these HTTP headers for the specified domains.
	Domains *map[string]map[string]string `json:"domains,omitempty"`
	// Use these HTTP headers for all domains.
	All *map[string]string `json:"all,omitempty"`
}

// NewTestCustomHeaders instantiates a new TestCustomHeaders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestCustomHeaders() *TestCustomHeaders {
	this := TestCustomHeaders{}
	return &this
}

// NewTestCustomHeadersWithDefaults instantiates a new TestCustomHeaders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestCustomHeadersWithDefaults() *TestCustomHeaders {
	this := TestCustomHeaders{}
	return &this
}

// GetRoot returns the Root field value if set, zero value otherwise.
func (o *TestCustomHeaders) GetRoot() map[string]string {
	if o == nil || utils.IsNil(o.Root) {
		var ret map[string]string
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestCustomHeaders) GetRootOk() (*map[string]string, bool) {
	if o == nil || utils.IsNil(o.Root) {
		return nil, false
	}
	return o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *TestCustomHeaders) HasRoot() bool {
	if o != nil && !utils.IsNil(o.Root) {
		return true
	}

	return false
}

// SetRoot gets a reference to the given map[string]string and assigns it to the Root field.
func (o *TestCustomHeaders) SetRoot(v map[string]string) {
	o.Root = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *TestCustomHeaders) GetDomains() map[string]map[string]string {
	if o == nil || utils.IsNil(o.Domains) {
		var ret map[string]map[string]string
		return ret
	}
	return *o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestCustomHeaders) GetDomainsOk() (*map[string]map[string]string, bool) {
	if o == nil || utils.IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *TestCustomHeaders) HasDomains() bool {
	if o != nil && !utils.IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given map[string]map[string]string and assigns it to the Domains field.
func (o *TestCustomHeaders) SetDomains(v map[string]map[string]string) {
	o.Domains = &v
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *TestCustomHeaders) GetAll() map[string]string {
	if o == nil || utils.IsNil(o.All) {
		var ret map[string]string
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestCustomHeaders) GetAllOk() (*map[string]string, bool) {
	if o == nil || utils.IsNil(o.All) {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *TestCustomHeaders) HasAll() bool {
	if o != nil && !utils.IsNil(o.All) {
		return true
	}

	return false
}

// SetAll gets a reference to the given map[string]string and assigns it to the All field.
func (o *TestCustomHeaders) SetAll(v map[string]string) {
	o.All = &v
}

func (o TestCustomHeaders) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestCustomHeaders) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Root) {
		toSerialize["root"] = o.Root
	}
	if !utils.IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !utils.IsNil(o.All) {
		toSerialize["all"] = o.All
	}
	return toSerialize, nil
}

type NullableTestCustomHeaders struct {
	value *TestCustomHeaders
	isSet bool
}

func (v NullableTestCustomHeaders) Get() *TestCustomHeaders {
	return v.value
}

func (v *NullableTestCustomHeaders) Set(val *TestCustomHeaders) {
	v.value = val
	v.isSet = true
}

func (v NullableTestCustomHeaders) IsSet() bool {
	return v.isSet
}

func (v *NullableTestCustomHeaders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestCustomHeaders(val *TestCustomHeaders) *NullableTestCustomHeaders {
	return &NullableTestCustomHeaders{value: val, isSet: true}
}

func (v NullableTestCustomHeaders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestCustomHeaders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


