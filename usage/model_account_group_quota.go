/*
Usage API

 These usage endpoints define the following operations:  * **Usage**: Retrieve usage data for the specified time period (default is one month).          * Users must have the `View organization usage` permission to access this endpoint.     * This operation offers visibility across all account groups within the organization.     * Users with `View organization usage` permission in multiple organizations should query the operation with the `aid` query string parameter (see optional parameters) for each organization.  * **Quotas**: Obtain organization and account usage quotas. Additionally, users with the appropriate permissions can create, update, or delete these quotas.          * Users must have the necessary permissions to perform quota-related actions.  Refer to the Usage API operations for detailed usage instructions and optional parameters. 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package usage

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the AccountGroupQuota type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AccountGroupQuota{}

// AccountGroupQuota struct for AccountGroupQuota
type AccountGroupQuota struct {
	// Value of the quota for the given Account Group.
	Value *int64 `json:"value,omitempty"`
	// Unique ID of the account group.
	Aid *string `json:"aid,omitempty"`
}

// NewAccountGroupQuota instantiates a new AccountGroupQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountGroupQuota() *AccountGroupQuota {
	this := AccountGroupQuota{}
	return &this
}

// NewAccountGroupQuotaWithDefaults instantiates a new AccountGroupQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountGroupQuotaWithDefaults() *AccountGroupQuota {
	this := AccountGroupQuota{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AccountGroupQuota) GetValue() int64 {
	if o == nil || utils.IsNil(o.Value) {
		var ret int64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupQuota) GetValueOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AccountGroupQuota) HasValue() bool {
	if o != nil && !utils.IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int64 and assigns it to the Value field.
func (o *AccountGroupQuota) SetValue(v int64) {
	o.Value = &v
}

// GetAid returns the Aid field value if set, zero value otherwise.
func (o *AccountGroupQuota) GetAid() string {
	if o == nil || utils.IsNil(o.Aid) {
		var ret string
		return ret
	}
	return *o.Aid
}

// GetAidOk returns a tuple with the Aid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupQuota) GetAidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Aid) {
		return nil, false
	}
	return o.Aid, true
}

// HasAid returns a boolean if a field has been set.
func (o *AccountGroupQuota) HasAid() bool {
	if o != nil && !utils.IsNil(o.Aid) {
		return true
	}

	return false
}

// SetAid gets a reference to the given string and assigns it to the Aid field.
func (o *AccountGroupQuota) SetAid(v string) {
	o.Aid = &v
}

func (o AccountGroupQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountGroupQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !utils.IsNil(o.Aid) {
		toSerialize["aid"] = o.Aid
	}
	return toSerialize, nil
}

type NullableAccountGroupQuota struct {
	value *AccountGroupQuota
	isSet bool
}

func (v NullableAccountGroupQuota) Get() *AccountGroupQuota {
	return v.value
}

func (v *NullableAccountGroupQuota) Set(val *AccountGroupQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountGroupQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountGroupQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountGroupQuota(val *AccountGroupQuota) *NullableAccountGroupQuota {
	return &NullableAccountGroupQuota{value: val, isSet: true}
}

func (v NullableAccountGroupQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountGroupQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


