/*
Usage API

 These usage endpoints define the following operations:  * **Usage**: Retrieve usage data for the specified time period (default is one month).          * Users must have the `View organization usage` permission to access this endpoint.     * This operation offers visibility across all account groups within the organization.     * Users with `View organization usage` permission in multiple organizations should query the operation with the `aid` query string parameter (see optional parameters) for each organization.  * **Quotas**: Obtain organization and account usage quotas. Additionally, users with the appropriate permissions can create, update, or delete these quotas.          * Users must have the necessary permissions to perform quota-related actions.  Refer to the Usage API operations for detailed usage instructions and optional parameters. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package usage

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the UsageQuota type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &UsageQuota{}

// UsageQuota struct for UsageQuota
type UsageQuota struct {
	// Beginning of usage period in UTC (ISO date-time format).
	MonthStart *time.Time `json:"monthStart,omitempty"`
	// End of usage period in UTC (ISO date-time format)..
	MonthEnd *time.Time `json:"monthEnd,omitempty"`
	// Monthly number of cloud units allocated, as part of the contract.
	CloudUnitsIncluded *int64 `json:"cloudUnitsIncluded,omitempty"`
	// Number of device agents (connected devices product) allocated monthly, as specified in the contract.
	DeviceAgentsIncluded *int64 `json:"deviceAgentsIncluded,omitempty"`
	// Monthly number of endpoint agents allocated, as part of the contract.
	EndpointAgentsIncluded *int64 `json:"endpointAgentsIncluded,omitempty"`
	// Monthly number of endpoint agents essentials allocated, as part of the contract.
	EndpointAgentsEssentialsIncluded *int64 `json:"endpointAgentsEssentialsIncluded,omitempty"`
	// Number of embedded endpoint agents allocated monthly, as specified in the contract.
	EndpointAgentsEmbeddedIncluded *int64 `json:"endpointAgentsEmbeddedIncluded,omitempty"`
	// Monthly number of enterprise agents allocated, as part of the contract. Returns non-zero value only for organizations with legacy billing.
	EnterpriseAgentsIncluded *int64 `json:"enterpriseAgentsIncluded,omitempty"`
}

// NewUsageQuota instantiates a new UsageQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageQuota() *UsageQuota {
	this := UsageQuota{}
	return &this
}

// NewUsageQuotaWithDefaults instantiates a new UsageQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageQuotaWithDefaults() *UsageQuota {
	this := UsageQuota{}
	return &this
}

// GetMonthStart returns the MonthStart field value if set, zero value otherwise.
func (o *UsageQuota) GetMonthStart() time.Time {
	if o == nil || utils.IsNil(o.MonthStart) {
		var ret time.Time
		return ret
	}
	return *o.MonthStart
}

// GetMonthStartOk returns a tuple with the MonthStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetMonthStartOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.MonthStart) {
		return nil, false
	}
	return o.MonthStart, true
}

// HasMonthStart returns a boolean if a field has been set.
func (o *UsageQuota) HasMonthStart() bool {
	if o != nil && !utils.IsNil(o.MonthStart) {
		return true
	}

	return false
}

// SetMonthStart gets a reference to the given time.Time and assigns it to the MonthStart field.
func (o *UsageQuota) SetMonthStart(v time.Time) {
	o.MonthStart = &v
}

// GetMonthEnd returns the MonthEnd field value if set, zero value otherwise.
func (o *UsageQuota) GetMonthEnd() time.Time {
	if o == nil || utils.IsNil(o.MonthEnd) {
		var ret time.Time
		return ret
	}
	return *o.MonthEnd
}

// GetMonthEndOk returns a tuple with the MonthEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetMonthEndOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.MonthEnd) {
		return nil, false
	}
	return o.MonthEnd, true
}

// HasMonthEnd returns a boolean if a field has been set.
func (o *UsageQuota) HasMonthEnd() bool {
	if o != nil && !utils.IsNil(o.MonthEnd) {
		return true
	}

	return false
}

// SetMonthEnd gets a reference to the given time.Time and assigns it to the MonthEnd field.
func (o *UsageQuota) SetMonthEnd(v time.Time) {
	o.MonthEnd = &v
}

// GetCloudUnitsIncluded returns the CloudUnitsIncluded field value if set, zero value otherwise.
func (o *UsageQuota) GetCloudUnitsIncluded() int64 {
	if o == nil || utils.IsNil(o.CloudUnitsIncluded) {
		var ret int64
		return ret
	}
	return *o.CloudUnitsIncluded
}

// GetCloudUnitsIncludedOk returns a tuple with the CloudUnitsIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetCloudUnitsIncludedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CloudUnitsIncluded) {
		return nil, false
	}
	return o.CloudUnitsIncluded, true
}

// HasCloudUnitsIncluded returns a boolean if a field has been set.
func (o *UsageQuota) HasCloudUnitsIncluded() bool {
	if o != nil && !utils.IsNil(o.CloudUnitsIncluded) {
		return true
	}

	return false
}

// SetCloudUnitsIncluded gets a reference to the given int64 and assigns it to the CloudUnitsIncluded field.
func (o *UsageQuota) SetCloudUnitsIncluded(v int64) {
	o.CloudUnitsIncluded = &v
}

// GetDeviceAgentsIncluded returns the DeviceAgentsIncluded field value if set, zero value otherwise.
func (o *UsageQuota) GetDeviceAgentsIncluded() int64 {
	if o == nil || utils.IsNil(o.DeviceAgentsIncluded) {
		var ret int64
		return ret
	}
	return *o.DeviceAgentsIncluded
}

// GetDeviceAgentsIncludedOk returns a tuple with the DeviceAgentsIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetDeviceAgentsIncludedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.DeviceAgentsIncluded) {
		return nil, false
	}
	return o.DeviceAgentsIncluded, true
}

// HasDeviceAgentsIncluded returns a boolean if a field has been set.
func (o *UsageQuota) HasDeviceAgentsIncluded() bool {
	if o != nil && !utils.IsNil(o.DeviceAgentsIncluded) {
		return true
	}

	return false
}

// SetDeviceAgentsIncluded gets a reference to the given int64 and assigns it to the DeviceAgentsIncluded field.
func (o *UsageQuota) SetDeviceAgentsIncluded(v int64) {
	o.DeviceAgentsIncluded = &v
}

// GetEndpointAgentsIncluded returns the EndpointAgentsIncluded field value if set, zero value otherwise.
func (o *UsageQuota) GetEndpointAgentsIncluded() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsIncluded) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsIncluded
}

// GetEndpointAgentsIncludedOk returns a tuple with the EndpointAgentsIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetEndpointAgentsIncludedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsIncluded) {
		return nil, false
	}
	return o.EndpointAgentsIncluded, true
}

// HasEndpointAgentsIncluded returns a boolean if a field has been set.
func (o *UsageQuota) HasEndpointAgentsIncluded() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsIncluded) {
		return true
	}

	return false
}

// SetEndpointAgentsIncluded gets a reference to the given int64 and assigns it to the EndpointAgentsIncluded field.
func (o *UsageQuota) SetEndpointAgentsIncluded(v int64) {
	o.EndpointAgentsIncluded = &v
}

// GetEndpointAgentsEssentialsIncluded returns the EndpointAgentsEssentialsIncluded field value if set, zero value otherwise.
func (o *UsageQuota) GetEndpointAgentsEssentialsIncluded() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentialsIncluded) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsEssentialsIncluded
}

// GetEndpointAgentsEssentialsIncludedOk returns a tuple with the EndpointAgentsEssentialsIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetEndpointAgentsEssentialsIncludedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentialsIncluded) {
		return nil, false
	}
	return o.EndpointAgentsEssentialsIncluded, true
}

// HasEndpointAgentsEssentialsIncluded returns a boolean if a field has been set.
func (o *UsageQuota) HasEndpointAgentsEssentialsIncluded() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEssentialsIncluded) {
		return true
	}

	return false
}

// SetEndpointAgentsEssentialsIncluded gets a reference to the given int64 and assigns it to the EndpointAgentsEssentialsIncluded field.
func (o *UsageQuota) SetEndpointAgentsEssentialsIncluded(v int64) {
	o.EndpointAgentsEssentialsIncluded = &v
}

// GetEndpointAgentsEmbeddedIncluded returns the EndpointAgentsEmbeddedIncluded field value if set, zero value otherwise.
func (o *UsageQuota) GetEndpointAgentsEmbeddedIncluded() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsEmbeddedIncluded) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsEmbeddedIncluded
}

// GetEndpointAgentsEmbeddedIncludedOk returns a tuple with the EndpointAgentsEmbeddedIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetEndpointAgentsEmbeddedIncludedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEmbeddedIncluded) {
		return nil, false
	}
	return o.EndpointAgentsEmbeddedIncluded, true
}

// HasEndpointAgentsEmbeddedIncluded returns a boolean if a field has been set.
func (o *UsageQuota) HasEndpointAgentsEmbeddedIncluded() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEmbeddedIncluded) {
		return true
	}

	return false
}

// SetEndpointAgentsEmbeddedIncluded gets a reference to the given int64 and assigns it to the EndpointAgentsEmbeddedIncluded field.
func (o *UsageQuota) SetEndpointAgentsEmbeddedIncluded(v int64) {
	o.EndpointAgentsEmbeddedIncluded = &v
}

// GetEnterpriseAgentsIncluded returns the EnterpriseAgentsIncluded field value if set, zero value otherwise.
func (o *UsageQuota) GetEnterpriseAgentsIncluded() int64 {
	if o == nil || utils.IsNil(o.EnterpriseAgentsIncluded) {
		var ret int64
		return ret
	}
	return *o.EnterpriseAgentsIncluded
}

// GetEnterpriseAgentsIncludedOk returns a tuple with the EnterpriseAgentsIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageQuota) GetEnterpriseAgentsIncludedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EnterpriseAgentsIncluded) {
		return nil, false
	}
	return o.EnterpriseAgentsIncluded, true
}

// HasEnterpriseAgentsIncluded returns a boolean if a field has been set.
func (o *UsageQuota) HasEnterpriseAgentsIncluded() bool {
	if o != nil && !utils.IsNil(o.EnterpriseAgentsIncluded) {
		return true
	}

	return false
}

// SetEnterpriseAgentsIncluded gets a reference to the given int64 and assigns it to the EnterpriseAgentsIncluded field.
func (o *UsageQuota) SetEnterpriseAgentsIncluded(v int64) {
	o.EnterpriseAgentsIncluded = &v
}

func (o UsageQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.MonthStart) {
		toSerialize["monthStart"] = o.MonthStart
	}
	if !utils.IsNil(o.MonthEnd) {
		toSerialize["monthEnd"] = o.MonthEnd
	}
	if !utils.IsNil(o.CloudUnitsIncluded) {
		toSerialize["cloudUnitsIncluded"] = o.CloudUnitsIncluded
	}
	if !utils.IsNil(o.DeviceAgentsIncluded) {
		toSerialize["deviceAgentsIncluded"] = o.DeviceAgentsIncluded
	}
	if !utils.IsNil(o.EndpointAgentsIncluded) {
		toSerialize["endpointAgentsIncluded"] = o.EndpointAgentsIncluded
	}
	if !utils.IsNil(o.EndpointAgentsEssentialsIncluded) {
		toSerialize["endpointAgentsEssentialsIncluded"] = o.EndpointAgentsEssentialsIncluded
	}
	if !utils.IsNil(o.EndpointAgentsEmbeddedIncluded) {
		toSerialize["endpointAgentsEmbeddedIncluded"] = o.EndpointAgentsEmbeddedIncluded
	}
	if !utils.IsNil(o.EnterpriseAgentsIncluded) {
		toSerialize["enterpriseAgentsIncluded"] = o.EnterpriseAgentsIncluded
	}
	return toSerialize, nil
}

type NullableUsageQuota struct {
	value *UsageQuota
	isSet bool
}

func (v NullableUsageQuota) Get() *UsageQuota {
	return v.value
}

func (v *NullableUsageQuota) Set(val *UsageQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageQuota(val *UsageQuota) *NullableUsageQuota {
	return &NullableUsageQuota{value: val, isSet: true}
}

func (v NullableUsageQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


