/*
Usage API

 These usage endpoints define the following operations:  * **Usage**: Retrieve usage data for the specified time period (default is one month).          * Users must have the `View organization usage` permission to access this endpoint.     * This operation offers visibility across all account groups within the organization.     * Users with `View organization usage` permission in multiple organizations should query the operation with the `aid` query string parameter (see optional parameters) for each organization.  * **Quotas**: Obtain organization and account usage quotas. Additionally, users with the appropriate permissions can create, update, or delete these quotas.          * Users must have the necessary permissions to perform quota-related actions.  Refer to the Usage API operations for detailed usage instructions and optional parameters. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package usage

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the UsageDetails type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &UsageDetails{}

// UsageDetails struct for UsageDetails
type UsageDetails struct {
	Quota *UsageQuota `json:"quota,omitempty"`
	// Number of cloud units consumed thus far in the usage period.
	CloudUnitsUsed *int64 `json:"cloudUnitsUsed,omitempty"`
	// Number of cloud units projected in the current usage period, based on units consumed to date and configuration of enabled tests. This value is updated hourly.
	CloudUnitsProjected *int64 `json:"cloudUnitsProjected,omitempty"`
	// Number of cloud units projected in the upcoming usage period, based on configuration of enabled tests. This value is updated hourly.
	CloudUnitsNextBillingPeriod *int64 `json:"cloudUnitsNextBillingPeriod,omitempty"`
	// Number of enterprise units consumed in the usage period. Returns non-zero value only for organizations with metered billing.
	EnterpriseUnitsUsed *int64 `json:"enterpriseUnitsUsed,omitempty"`
	// Number of enterprise units projected in the current usage period, based on units consumed to date and configuration of enabled tests. This value is updated hourly. Returns non-zero value only for organizations with metered billing.
	EnterpriseUnitsProjected *int64 `json:"enterpriseUnitsProjected,omitempty"`
	// Projected number of enterprise units for the upcoming usage period, based on the configuration of enabled tests. This value is updated hourly and returns a non-zero value only for organizations with metered billing.
	EnterpriseUnitsNextBillingPeriod *int64 `json:"enterpriseUnitsNextBillingPeriod,omitempty"`
	// Number of connected device units consumed in the usage period.
	ConnectedDevicesUnitsUsed *int64 `json:"connectedDevicesUnitsUsed,omitempty"`
	// Projected number of connected device units for the current usage period. This projection is based on the units consumed to date and the configuration of enabled tests. The value is updated hourly.
	ConnectedDevicesUnitsProjected *int64 `json:"connectedDevicesUnitsProjected,omitempty"`
	// Projected number of connected device units for the upcoming usage period. This projection is based on the configuration of enabled tests and is updated hourly.
	ConnectedDevicesUnitsNextBillingPeriod *int64 `json:"connectedDevicesUnitsNextBillingPeriod,omitempty"`
	// Number of endpoint agents used in the current usage period. This number is calculated by taking the maximum number of agents enabled for any one-hour period in the usage period. Disabled agents are excluded from this calculation.
	EndpointAgentsUsed *int64 `json:"endpointAgentsUsed,omitempty"`
	// Number of endpoint agents essentials used in the current usage period. This number is calculated by taking the maximum number of agents enabled for any one-hour period in the usage period. Disabled agents are excluded from this calculation.
	EndpointAgentsEssentialsUsed *int64 `json:"endpointAgentsEssentialsUsed,omitempty"`
	// Number of embedded endpoint agents used in the current usage period. This number is calculated by taking the maximum number of agents enabled for any one-hour period in the usage period. Disabled agents are excluded from this calculation.
	EndpointAgentsEmbeddedUsed *int64 `json:"endpointAgentsEmbeddedUsed,omitempty"`
	// Number of enterprise agents used in the current usage period. This number is calculated by taking the maximum number of agents enabled for any one-hour period in the usage period. Disabled agents are excluded from this calculation.
	EnterpriseAgentsUsed *int64 `json:"enterpriseAgentsUsed,omitempty"`
	// A breakdown of enterprise unit consumption for each agent during the current monthly period. Each entry provides data for both the current actual usage and the projected usage. Returns non-zero values for organizations with metered billing.
	EnterpriseAgentUnits []EnterpriseAgentUnits `json:"enterpriseAgentUnits,omitempty"`
	// A breakdown of unit consumption for each test during the current monthly period. Each entry provides information about both the current actual usage and the projected usage.
	Tests []TestUsage `json:"tests,omitempty"`
	// Endpoint agents used by account group.
	EndpointAgents []EndpointAgentsUsage `json:"endpointAgents,omitempty"`
	// Endpoint agents essentials used by account group.
	EndpointAgentsEssentials []EndpointAgentsEssentials `json:"endpointAgentsEssentials,omitempty"`
	// Endpoint agents embedded used by account group.
	EndpointAgentsEmbedded []EndpointAgentsEmbedded `json:"endpointAgentsEmbedded,omitempty"`
	// Enterprise agents used by account group.
	EnterpriseAgents []EnterpriseAgents `json:"enterpriseAgents,omitempty"`
}

// NewUsageDetails instantiates a new UsageDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageDetails() *UsageDetails {
	this := UsageDetails{}
	return &this
}

// NewUsageDetailsWithDefaults instantiates a new UsageDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageDetailsWithDefaults() *UsageDetails {
	this := UsageDetails{}
	return &this
}

// GetQuota returns the Quota field value if set, zero value otherwise.
func (o *UsageDetails) GetQuota() UsageQuota {
	if o == nil || utils.IsNil(o.Quota) {
		var ret UsageQuota
		return ret
	}
	return *o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetQuotaOk() (*UsageQuota, bool) {
	if o == nil || utils.IsNil(o.Quota) {
		return nil, false
	}
	return o.Quota, true
}

// HasQuota returns a boolean if a field has been set.
func (o *UsageDetails) HasQuota() bool {
	if o != nil && !utils.IsNil(o.Quota) {
		return true
	}

	return false
}

// SetQuota gets a reference to the given UsageQuota and assigns it to the Quota field.
func (o *UsageDetails) SetQuota(v UsageQuota) {
	o.Quota = &v
}

// GetCloudUnitsUsed returns the CloudUnitsUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetCloudUnitsUsed() int64 {
	if o == nil || utils.IsNil(o.CloudUnitsUsed) {
		var ret int64
		return ret
	}
	return *o.CloudUnitsUsed
}

// GetCloudUnitsUsedOk returns a tuple with the CloudUnitsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetCloudUnitsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CloudUnitsUsed) {
		return nil, false
	}
	return o.CloudUnitsUsed, true
}

// HasCloudUnitsUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasCloudUnitsUsed() bool {
	if o != nil && !utils.IsNil(o.CloudUnitsUsed) {
		return true
	}

	return false
}

// SetCloudUnitsUsed gets a reference to the given int64 and assigns it to the CloudUnitsUsed field.
func (o *UsageDetails) SetCloudUnitsUsed(v int64) {
	o.CloudUnitsUsed = &v
}

// GetCloudUnitsProjected returns the CloudUnitsProjected field value if set, zero value otherwise.
func (o *UsageDetails) GetCloudUnitsProjected() int64 {
	if o == nil || utils.IsNil(o.CloudUnitsProjected) {
		var ret int64
		return ret
	}
	return *o.CloudUnitsProjected
}

// GetCloudUnitsProjectedOk returns a tuple with the CloudUnitsProjected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetCloudUnitsProjectedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CloudUnitsProjected) {
		return nil, false
	}
	return o.CloudUnitsProjected, true
}

// HasCloudUnitsProjected returns a boolean if a field has been set.
func (o *UsageDetails) HasCloudUnitsProjected() bool {
	if o != nil && !utils.IsNil(o.CloudUnitsProjected) {
		return true
	}

	return false
}

// SetCloudUnitsProjected gets a reference to the given int64 and assigns it to the CloudUnitsProjected field.
func (o *UsageDetails) SetCloudUnitsProjected(v int64) {
	o.CloudUnitsProjected = &v
}

// GetCloudUnitsNextBillingPeriod returns the CloudUnitsNextBillingPeriod field value if set, zero value otherwise.
func (o *UsageDetails) GetCloudUnitsNextBillingPeriod() int64 {
	if o == nil || utils.IsNil(o.CloudUnitsNextBillingPeriod) {
		var ret int64
		return ret
	}
	return *o.CloudUnitsNextBillingPeriod
}

// GetCloudUnitsNextBillingPeriodOk returns a tuple with the CloudUnitsNextBillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetCloudUnitsNextBillingPeriodOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.CloudUnitsNextBillingPeriod) {
		return nil, false
	}
	return o.CloudUnitsNextBillingPeriod, true
}

// HasCloudUnitsNextBillingPeriod returns a boolean if a field has been set.
func (o *UsageDetails) HasCloudUnitsNextBillingPeriod() bool {
	if o != nil && !utils.IsNil(o.CloudUnitsNextBillingPeriod) {
		return true
	}

	return false
}

// SetCloudUnitsNextBillingPeriod gets a reference to the given int64 and assigns it to the CloudUnitsNextBillingPeriod field.
func (o *UsageDetails) SetCloudUnitsNextBillingPeriod(v int64) {
	o.CloudUnitsNextBillingPeriod = &v
}

// GetEnterpriseUnitsUsed returns the EnterpriseUnitsUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetEnterpriseUnitsUsed() int64 {
	if o == nil || utils.IsNil(o.EnterpriseUnitsUsed) {
		var ret int64
		return ret
	}
	return *o.EnterpriseUnitsUsed
}

// GetEnterpriseUnitsUsedOk returns a tuple with the EnterpriseUnitsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEnterpriseUnitsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EnterpriseUnitsUsed) {
		return nil, false
	}
	return o.EnterpriseUnitsUsed, true
}

// HasEnterpriseUnitsUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasEnterpriseUnitsUsed() bool {
	if o != nil && !utils.IsNil(o.EnterpriseUnitsUsed) {
		return true
	}

	return false
}

// SetEnterpriseUnitsUsed gets a reference to the given int64 and assigns it to the EnterpriseUnitsUsed field.
func (o *UsageDetails) SetEnterpriseUnitsUsed(v int64) {
	o.EnterpriseUnitsUsed = &v
}

// GetEnterpriseUnitsProjected returns the EnterpriseUnitsProjected field value if set, zero value otherwise.
func (o *UsageDetails) GetEnterpriseUnitsProjected() int64 {
	if o == nil || utils.IsNil(o.EnterpriseUnitsProjected) {
		var ret int64
		return ret
	}
	return *o.EnterpriseUnitsProjected
}

// GetEnterpriseUnitsProjectedOk returns a tuple with the EnterpriseUnitsProjected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEnterpriseUnitsProjectedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EnterpriseUnitsProjected) {
		return nil, false
	}
	return o.EnterpriseUnitsProjected, true
}

// HasEnterpriseUnitsProjected returns a boolean if a field has been set.
func (o *UsageDetails) HasEnterpriseUnitsProjected() bool {
	if o != nil && !utils.IsNil(o.EnterpriseUnitsProjected) {
		return true
	}

	return false
}

// SetEnterpriseUnitsProjected gets a reference to the given int64 and assigns it to the EnterpriseUnitsProjected field.
func (o *UsageDetails) SetEnterpriseUnitsProjected(v int64) {
	o.EnterpriseUnitsProjected = &v
}

// GetEnterpriseUnitsNextBillingPeriod returns the EnterpriseUnitsNextBillingPeriod field value if set, zero value otherwise.
func (o *UsageDetails) GetEnterpriseUnitsNextBillingPeriod() int64 {
	if o == nil || utils.IsNil(o.EnterpriseUnitsNextBillingPeriod) {
		var ret int64
		return ret
	}
	return *o.EnterpriseUnitsNextBillingPeriod
}

// GetEnterpriseUnitsNextBillingPeriodOk returns a tuple with the EnterpriseUnitsNextBillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEnterpriseUnitsNextBillingPeriodOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EnterpriseUnitsNextBillingPeriod) {
		return nil, false
	}
	return o.EnterpriseUnitsNextBillingPeriod, true
}

// HasEnterpriseUnitsNextBillingPeriod returns a boolean if a field has been set.
func (o *UsageDetails) HasEnterpriseUnitsNextBillingPeriod() bool {
	if o != nil && !utils.IsNil(o.EnterpriseUnitsNextBillingPeriod) {
		return true
	}

	return false
}

// SetEnterpriseUnitsNextBillingPeriod gets a reference to the given int64 and assigns it to the EnterpriseUnitsNextBillingPeriod field.
func (o *UsageDetails) SetEnterpriseUnitsNextBillingPeriod(v int64) {
	o.EnterpriseUnitsNextBillingPeriod = &v
}

// GetConnectedDevicesUnitsUsed returns the ConnectedDevicesUnitsUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetConnectedDevicesUnitsUsed() int64 {
	if o == nil || utils.IsNil(o.ConnectedDevicesUnitsUsed) {
		var ret int64
		return ret
	}
	return *o.ConnectedDevicesUnitsUsed
}

// GetConnectedDevicesUnitsUsedOk returns a tuple with the ConnectedDevicesUnitsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetConnectedDevicesUnitsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ConnectedDevicesUnitsUsed) {
		return nil, false
	}
	return o.ConnectedDevicesUnitsUsed, true
}

// HasConnectedDevicesUnitsUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasConnectedDevicesUnitsUsed() bool {
	if o != nil && !utils.IsNil(o.ConnectedDevicesUnitsUsed) {
		return true
	}

	return false
}

// SetConnectedDevicesUnitsUsed gets a reference to the given int64 and assigns it to the ConnectedDevicesUnitsUsed field.
func (o *UsageDetails) SetConnectedDevicesUnitsUsed(v int64) {
	o.ConnectedDevicesUnitsUsed = &v
}

// GetConnectedDevicesUnitsProjected returns the ConnectedDevicesUnitsProjected field value if set, zero value otherwise.
func (o *UsageDetails) GetConnectedDevicesUnitsProjected() int64 {
	if o == nil || utils.IsNil(o.ConnectedDevicesUnitsProjected) {
		var ret int64
		return ret
	}
	return *o.ConnectedDevicesUnitsProjected
}

// GetConnectedDevicesUnitsProjectedOk returns a tuple with the ConnectedDevicesUnitsProjected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetConnectedDevicesUnitsProjectedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ConnectedDevicesUnitsProjected) {
		return nil, false
	}
	return o.ConnectedDevicesUnitsProjected, true
}

// HasConnectedDevicesUnitsProjected returns a boolean if a field has been set.
func (o *UsageDetails) HasConnectedDevicesUnitsProjected() bool {
	if o != nil && !utils.IsNil(o.ConnectedDevicesUnitsProjected) {
		return true
	}

	return false
}

// SetConnectedDevicesUnitsProjected gets a reference to the given int64 and assigns it to the ConnectedDevicesUnitsProjected field.
func (o *UsageDetails) SetConnectedDevicesUnitsProjected(v int64) {
	o.ConnectedDevicesUnitsProjected = &v
}

// GetConnectedDevicesUnitsNextBillingPeriod returns the ConnectedDevicesUnitsNextBillingPeriod field value if set, zero value otherwise.
func (o *UsageDetails) GetConnectedDevicesUnitsNextBillingPeriod() int64 {
	if o == nil || utils.IsNil(o.ConnectedDevicesUnitsNextBillingPeriod) {
		var ret int64
		return ret
	}
	return *o.ConnectedDevicesUnitsNextBillingPeriod
}

// GetConnectedDevicesUnitsNextBillingPeriodOk returns a tuple with the ConnectedDevicesUnitsNextBillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetConnectedDevicesUnitsNextBillingPeriodOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ConnectedDevicesUnitsNextBillingPeriod) {
		return nil, false
	}
	return o.ConnectedDevicesUnitsNextBillingPeriod, true
}

// HasConnectedDevicesUnitsNextBillingPeriod returns a boolean if a field has been set.
func (o *UsageDetails) HasConnectedDevicesUnitsNextBillingPeriod() bool {
	if o != nil && !utils.IsNil(o.ConnectedDevicesUnitsNextBillingPeriod) {
		return true
	}

	return false
}

// SetConnectedDevicesUnitsNextBillingPeriod gets a reference to the given int64 and assigns it to the ConnectedDevicesUnitsNextBillingPeriod field.
func (o *UsageDetails) SetConnectedDevicesUnitsNextBillingPeriod(v int64) {
	o.ConnectedDevicesUnitsNextBillingPeriod = &v
}

// GetEndpointAgentsUsed returns the EndpointAgentsUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetEndpointAgentsUsed() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsUsed) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsUsed
}

// GetEndpointAgentsUsedOk returns a tuple with the EndpointAgentsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEndpointAgentsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsUsed) {
		return nil, false
	}
	return o.EndpointAgentsUsed, true
}

// HasEndpointAgentsUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasEndpointAgentsUsed() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsUsed) {
		return true
	}

	return false
}

// SetEndpointAgentsUsed gets a reference to the given int64 and assigns it to the EndpointAgentsUsed field.
func (o *UsageDetails) SetEndpointAgentsUsed(v int64) {
	o.EndpointAgentsUsed = &v
}

// GetEndpointAgentsEssentialsUsed returns the EndpointAgentsEssentialsUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetEndpointAgentsEssentialsUsed() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsEssentialsUsed
}

// GetEndpointAgentsEssentialsUsedOk returns a tuple with the EndpointAgentsEssentialsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEndpointAgentsEssentialsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		return nil, false
	}
	return o.EndpointAgentsEssentialsUsed, true
}

// HasEndpointAgentsEssentialsUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasEndpointAgentsEssentialsUsed() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		return true
	}

	return false
}

// SetEndpointAgentsEssentialsUsed gets a reference to the given int64 and assigns it to the EndpointAgentsEssentialsUsed field.
func (o *UsageDetails) SetEndpointAgentsEssentialsUsed(v int64) {
	o.EndpointAgentsEssentialsUsed = &v
}

// GetEndpointAgentsEmbeddedUsed returns the EndpointAgentsEmbeddedUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetEndpointAgentsEmbeddedUsed() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsEmbeddedUsed) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsEmbeddedUsed
}

// GetEndpointAgentsEmbeddedUsedOk returns a tuple with the EndpointAgentsEmbeddedUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEndpointAgentsEmbeddedUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEmbeddedUsed) {
		return nil, false
	}
	return o.EndpointAgentsEmbeddedUsed, true
}

// HasEndpointAgentsEmbeddedUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasEndpointAgentsEmbeddedUsed() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEmbeddedUsed) {
		return true
	}

	return false
}

// SetEndpointAgentsEmbeddedUsed gets a reference to the given int64 and assigns it to the EndpointAgentsEmbeddedUsed field.
func (o *UsageDetails) SetEndpointAgentsEmbeddedUsed(v int64) {
	o.EndpointAgentsEmbeddedUsed = &v
}

// GetEnterpriseAgentsUsed returns the EnterpriseAgentsUsed field value if set, zero value otherwise.
func (o *UsageDetails) GetEnterpriseAgentsUsed() int64 {
	if o == nil || utils.IsNil(o.EnterpriseAgentsUsed) {
		var ret int64
		return ret
	}
	return *o.EnterpriseAgentsUsed
}

// GetEnterpriseAgentsUsedOk returns a tuple with the EnterpriseAgentsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEnterpriseAgentsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EnterpriseAgentsUsed) {
		return nil, false
	}
	return o.EnterpriseAgentsUsed, true
}

// HasEnterpriseAgentsUsed returns a boolean if a field has been set.
func (o *UsageDetails) HasEnterpriseAgentsUsed() bool {
	if o != nil && !utils.IsNil(o.EnterpriseAgentsUsed) {
		return true
	}

	return false
}

// SetEnterpriseAgentsUsed gets a reference to the given int64 and assigns it to the EnterpriseAgentsUsed field.
func (o *UsageDetails) SetEnterpriseAgentsUsed(v int64) {
	o.EnterpriseAgentsUsed = &v
}

// GetEnterpriseAgentUnits returns the EnterpriseAgentUnits field value if set, zero value otherwise.
func (o *UsageDetails) GetEnterpriseAgentUnits() []EnterpriseAgentUnits {
	if o == nil || utils.IsNil(o.EnterpriseAgentUnits) {
		var ret []EnterpriseAgentUnits
		return ret
	}
	return o.EnterpriseAgentUnits
}

// GetEnterpriseAgentUnitsOk returns a tuple with the EnterpriseAgentUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEnterpriseAgentUnitsOk() ([]EnterpriseAgentUnits, bool) {
	if o == nil || utils.IsNil(o.EnterpriseAgentUnits) {
		return nil, false
	}
	return o.EnterpriseAgentUnits, true
}

// HasEnterpriseAgentUnits returns a boolean if a field has been set.
func (o *UsageDetails) HasEnterpriseAgentUnits() bool {
	if o != nil && !utils.IsNil(o.EnterpriseAgentUnits) {
		return true
	}

	return false
}

// SetEnterpriseAgentUnits gets a reference to the given []EnterpriseAgentUnits and assigns it to the EnterpriseAgentUnits field.
func (o *UsageDetails) SetEnterpriseAgentUnits(v []EnterpriseAgentUnits) {
	o.EnterpriseAgentUnits = v
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *UsageDetails) GetTests() []TestUsage {
	if o == nil || utils.IsNil(o.Tests) {
		var ret []TestUsage
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetTestsOk() ([]TestUsage, bool) {
	if o == nil || utils.IsNil(o.Tests) {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *UsageDetails) HasTests() bool {
	if o != nil && !utils.IsNil(o.Tests) {
		return true
	}

	return false
}

// SetTests gets a reference to the given []TestUsage and assigns it to the Tests field.
func (o *UsageDetails) SetTests(v []TestUsage) {
	o.Tests = v
}

// GetEndpointAgents returns the EndpointAgents field value if set, zero value otherwise.
func (o *UsageDetails) GetEndpointAgents() []EndpointAgentsUsage {
	if o == nil || utils.IsNil(o.EndpointAgents) {
		var ret []EndpointAgentsUsage
		return ret
	}
	return o.EndpointAgents
}

// GetEndpointAgentsOk returns a tuple with the EndpointAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEndpointAgentsOk() ([]EndpointAgentsUsage, bool) {
	if o == nil || utils.IsNil(o.EndpointAgents) {
		return nil, false
	}
	return o.EndpointAgents, true
}

// HasEndpointAgents returns a boolean if a field has been set.
func (o *UsageDetails) HasEndpointAgents() bool {
	if o != nil && !utils.IsNil(o.EndpointAgents) {
		return true
	}

	return false
}

// SetEndpointAgents gets a reference to the given []EndpointAgentsUsage and assigns it to the EndpointAgents field.
func (o *UsageDetails) SetEndpointAgents(v []EndpointAgentsUsage) {
	o.EndpointAgents = v
}

// GetEndpointAgentsEssentials returns the EndpointAgentsEssentials field value if set, zero value otherwise.
func (o *UsageDetails) GetEndpointAgentsEssentials() []EndpointAgentsEssentials {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentials) {
		var ret []EndpointAgentsEssentials
		return ret
	}
	return o.EndpointAgentsEssentials
}

// GetEndpointAgentsEssentialsOk returns a tuple with the EndpointAgentsEssentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEndpointAgentsEssentialsOk() ([]EndpointAgentsEssentials, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentials) {
		return nil, false
	}
	return o.EndpointAgentsEssentials, true
}

// HasEndpointAgentsEssentials returns a boolean if a field has been set.
func (o *UsageDetails) HasEndpointAgentsEssentials() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEssentials) {
		return true
	}

	return false
}

// SetEndpointAgentsEssentials gets a reference to the given []EndpointAgentsEssentials and assigns it to the EndpointAgentsEssentials field.
func (o *UsageDetails) SetEndpointAgentsEssentials(v []EndpointAgentsEssentials) {
	o.EndpointAgentsEssentials = v
}

// GetEndpointAgentsEmbedded returns the EndpointAgentsEmbedded field value if set, zero value otherwise.
func (o *UsageDetails) GetEndpointAgentsEmbedded() []EndpointAgentsEmbedded {
	if o == nil || utils.IsNil(o.EndpointAgentsEmbedded) {
		var ret []EndpointAgentsEmbedded
		return ret
	}
	return o.EndpointAgentsEmbedded
}

// GetEndpointAgentsEmbeddedOk returns a tuple with the EndpointAgentsEmbedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEndpointAgentsEmbeddedOk() ([]EndpointAgentsEmbedded, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEmbedded) {
		return nil, false
	}
	return o.EndpointAgentsEmbedded, true
}

// HasEndpointAgentsEmbedded returns a boolean if a field has been set.
func (o *UsageDetails) HasEndpointAgentsEmbedded() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEmbedded) {
		return true
	}

	return false
}

// SetEndpointAgentsEmbedded gets a reference to the given []EndpointAgentsEmbedded and assigns it to the EndpointAgentsEmbedded field.
func (o *UsageDetails) SetEndpointAgentsEmbedded(v []EndpointAgentsEmbedded) {
	o.EndpointAgentsEmbedded = v
}

// GetEnterpriseAgents returns the EnterpriseAgents field value if set, zero value otherwise.
func (o *UsageDetails) GetEnterpriseAgents() []EnterpriseAgents {
	if o == nil || utils.IsNil(o.EnterpriseAgents) {
		var ret []EnterpriseAgents
		return ret
	}
	return o.EnterpriseAgents
}

// GetEnterpriseAgentsOk returns a tuple with the EnterpriseAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageDetails) GetEnterpriseAgentsOk() ([]EnterpriseAgents, bool) {
	if o == nil || utils.IsNil(o.EnterpriseAgents) {
		return nil, false
	}
	return o.EnterpriseAgents, true
}

// HasEnterpriseAgents returns a boolean if a field has been set.
func (o *UsageDetails) HasEnterpriseAgents() bool {
	if o != nil && !utils.IsNil(o.EnterpriseAgents) {
		return true
	}

	return false
}

// SetEnterpriseAgents gets a reference to the given []EnterpriseAgents and assigns it to the EnterpriseAgents field.
func (o *UsageDetails) SetEnterpriseAgents(v []EnterpriseAgents) {
	o.EnterpriseAgents = v
}

func (o UsageDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Quota) {
		toSerialize["quota"] = o.Quota
	}
	if !utils.IsNil(o.CloudUnitsUsed) {
		toSerialize["cloudUnitsUsed"] = o.CloudUnitsUsed
	}
	if !utils.IsNil(o.CloudUnitsProjected) {
		toSerialize["cloudUnitsProjected"] = o.CloudUnitsProjected
	}
	if !utils.IsNil(o.CloudUnitsNextBillingPeriod) {
		toSerialize["cloudUnitsNextBillingPeriod"] = o.CloudUnitsNextBillingPeriod
	}
	if !utils.IsNil(o.EnterpriseUnitsUsed) {
		toSerialize["enterpriseUnitsUsed"] = o.EnterpriseUnitsUsed
	}
	if !utils.IsNil(o.EnterpriseUnitsProjected) {
		toSerialize["enterpriseUnitsProjected"] = o.EnterpriseUnitsProjected
	}
	if !utils.IsNil(o.EnterpriseUnitsNextBillingPeriod) {
		toSerialize["enterpriseUnitsNextBillingPeriod"] = o.EnterpriseUnitsNextBillingPeriod
	}
	if !utils.IsNil(o.ConnectedDevicesUnitsUsed) {
		toSerialize["connectedDevicesUnitsUsed"] = o.ConnectedDevicesUnitsUsed
	}
	if !utils.IsNil(o.ConnectedDevicesUnitsProjected) {
		toSerialize["connectedDevicesUnitsProjected"] = o.ConnectedDevicesUnitsProjected
	}
	if !utils.IsNil(o.ConnectedDevicesUnitsNextBillingPeriod) {
		toSerialize["connectedDevicesUnitsNextBillingPeriod"] = o.ConnectedDevicesUnitsNextBillingPeriod
	}
	if !utils.IsNil(o.EndpointAgentsUsed) {
		toSerialize["endpointAgentsUsed"] = o.EndpointAgentsUsed
	}
	if !utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		toSerialize["endpointAgentsEssentialsUsed"] = o.EndpointAgentsEssentialsUsed
	}
	if !utils.IsNil(o.EndpointAgentsEmbeddedUsed) {
		toSerialize["endpointAgentsEmbeddedUsed"] = o.EndpointAgentsEmbeddedUsed
	}
	if !utils.IsNil(o.EnterpriseAgentsUsed) {
		toSerialize["enterpriseAgentsUsed"] = o.EnterpriseAgentsUsed
	}
	if !utils.IsNil(o.EnterpriseAgentUnits) {
		toSerialize["enterpriseAgentUnits"] = o.EnterpriseAgentUnits
	}
	if !utils.IsNil(o.Tests) {
		toSerialize["tests"] = o.Tests
	}
	if !utils.IsNil(o.EndpointAgents) {
		toSerialize["endpointAgents"] = o.EndpointAgents
	}
	if !utils.IsNil(o.EndpointAgentsEssentials) {
		toSerialize["endpointAgentsEssentials"] = o.EndpointAgentsEssentials
	}
	if !utils.IsNil(o.EndpointAgentsEmbedded) {
		toSerialize["endpointAgentsEmbedded"] = o.EndpointAgentsEmbedded
	}
	if !utils.IsNil(o.EnterpriseAgents) {
		toSerialize["enterpriseAgents"] = o.EnterpriseAgents
	}
	return toSerialize, nil
}

type NullableUsageDetails struct {
	value *UsageDetails
	isSet bool
}

func (v NullableUsageDetails) Get() *UsageDetails {
	return v.value
}

func (v *NullableUsageDetails) Set(val *UsageDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageDetails(val *UsageDetails) *NullableUsageDetails {
	return &NullableUsageDetails{value: val, isSet: true}
}

func (v NullableUsageDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


