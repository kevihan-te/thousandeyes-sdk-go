/*
Usage API

 These usage endpoints define the following operations:  * **Usage**: Retrieve usage data for the specified time period (default is one month).          * Users must have the `View organization usage` permission to access this endpoint.     * This operation offers visibility across all account groups within the organization.     * Users with `View organization usage` permission in multiple organizations should query the operation with the `aid` query string parameter (see optional parameters) for each organization.  * **Quotas**: Obtain organization and account usage quotas. Additionally, users with the appropriate permissions can create, update, or delete these quotas.          * Users must have the necessary permissions to perform quota-related actions.  Refer to the Usage API operations for detailed usage instructions and optional parameters. 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package usage

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the EndpointAgentsEssentials type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointAgentsEssentials{}

// EndpointAgentsEssentials struct for EndpointAgentsEssentials
type EndpointAgentsEssentials struct {
	// Unique identifier of the account group owning the endpoint agents essentials.
	Aid *string `json:"aid,omitempty"`
	// Name of the account group which owns the endpoint agents essentials.
	AccountGroupName *string `json:"accountGroupName,omitempty"`
	// Number of endpoint agents essentials owned by the specific account group in the usage period.
	EndpointAgentsEssentialsUsed *int64 `json:"endpointAgentsEssentialsUsed,omitempty"`
}

// NewEndpointAgentsEssentials instantiates a new EndpointAgentsEssentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointAgentsEssentials() *EndpointAgentsEssentials {
	this := EndpointAgentsEssentials{}
	return &this
}

// NewEndpointAgentsEssentialsWithDefaults instantiates a new EndpointAgentsEssentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointAgentsEssentialsWithDefaults() *EndpointAgentsEssentials {
	this := EndpointAgentsEssentials{}
	return &this
}

// GetAid returns the Aid field value if set, zero value otherwise.
func (o *EndpointAgentsEssentials) GetAid() string {
	if o == nil || utils.IsNil(o.Aid) {
		var ret string
		return ret
	}
	return *o.Aid
}

// GetAidOk returns a tuple with the Aid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentsEssentials) GetAidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Aid) {
		return nil, false
	}
	return o.Aid, true
}

// HasAid returns a boolean if a field has been set.
func (o *EndpointAgentsEssentials) HasAid() bool {
	if o != nil && !utils.IsNil(o.Aid) {
		return true
	}

	return false
}

// SetAid gets a reference to the given string and assigns it to the Aid field.
func (o *EndpointAgentsEssentials) SetAid(v string) {
	o.Aid = &v
}

// GetAccountGroupName returns the AccountGroupName field value if set, zero value otherwise.
func (o *EndpointAgentsEssentials) GetAccountGroupName() string {
	if o == nil || utils.IsNil(o.AccountGroupName) {
		var ret string
		return ret
	}
	return *o.AccountGroupName
}

// GetAccountGroupNameOk returns a tuple with the AccountGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentsEssentials) GetAccountGroupNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AccountGroupName) {
		return nil, false
	}
	return o.AccountGroupName, true
}

// HasAccountGroupName returns a boolean if a field has been set.
func (o *EndpointAgentsEssentials) HasAccountGroupName() bool {
	if o != nil && !utils.IsNil(o.AccountGroupName) {
		return true
	}

	return false
}

// SetAccountGroupName gets a reference to the given string and assigns it to the AccountGroupName field.
func (o *EndpointAgentsEssentials) SetAccountGroupName(v string) {
	o.AccountGroupName = &v
}

// GetEndpointAgentsEssentialsUsed returns the EndpointAgentsEssentialsUsed field value if set, zero value otherwise.
func (o *EndpointAgentsEssentials) GetEndpointAgentsEssentialsUsed() int64 {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		var ret int64
		return ret
	}
	return *o.EndpointAgentsEssentialsUsed
}

// GetEndpointAgentsEssentialsUsedOk returns a tuple with the EndpointAgentsEssentialsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentsEssentials) GetEndpointAgentsEssentialsUsedOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		return nil, false
	}
	return o.EndpointAgentsEssentialsUsed, true
}

// HasEndpointAgentsEssentialsUsed returns a boolean if a field has been set.
func (o *EndpointAgentsEssentials) HasEndpointAgentsEssentialsUsed() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		return true
	}

	return false
}

// SetEndpointAgentsEssentialsUsed gets a reference to the given int64 and assigns it to the EndpointAgentsEssentialsUsed field.
func (o *EndpointAgentsEssentials) SetEndpointAgentsEssentialsUsed(v int64) {
	o.EndpointAgentsEssentialsUsed = &v
}

func (o EndpointAgentsEssentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointAgentsEssentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Aid) {
		toSerialize["aid"] = o.Aid
	}
	if !utils.IsNil(o.AccountGroupName) {
		toSerialize["accountGroupName"] = o.AccountGroupName
	}
	if !utils.IsNil(o.EndpointAgentsEssentialsUsed) {
		toSerialize["endpointAgentsEssentialsUsed"] = o.EndpointAgentsEssentialsUsed
	}
	return toSerialize, nil
}

type NullableEndpointAgentsEssentials struct {
	value *EndpointAgentsEssentials
	isSet bool
}

func (v NullableEndpointAgentsEssentials) Get() *EndpointAgentsEssentials {
	return v.value
}

func (v *NullableEndpointAgentsEssentials) Set(val *EndpointAgentsEssentials) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointAgentsEssentials) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointAgentsEssentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointAgentsEssentials(val *EndpointAgentsEssentials) *NullableEndpointAgentsEssentials {
	return &NullableEndpointAgentsEssentials{value: val, isSet: true}
}

func (v NullableEndpointAgentsEssentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointAgentsEssentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


