/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the AlertEmail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AlertEmail{}

// AlertEmail struct for AlertEmail
type AlertEmail struct {
	// Message used for email notification.
	Message *string `json:"message,omitempty"`
	// List of recipients emails that will be notified.
	Recipients []string `json:"recipients,omitempty"`
}

// NewAlertEmail instantiates a new AlertEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertEmail() *AlertEmail {
	this := AlertEmail{}
	return &this
}

// NewAlertEmailWithDefaults instantiates a new AlertEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertEmailWithDefaults() *AlertEmail {
	this := AlertEmail{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AlertEmail) GetMessage() string {
	if o == nil || utils.IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertEmail) GetMessageOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AlertEmail) HasMessage() bool {
	if o != nil && !utils.IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AlertEmail) SetMessage(v string) {
	o.Message = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *AlertEmail) GetRecipients() []string {
	if o == nil || utils.IsNil(o.Recipients) {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertEmail) GetRecipientsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *AlertEmail) HasRecipients() bool {
	if o != nil && !utils.IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *AlertEmail) SetRecipients(v []string) {
	o.Recipients = v
}

func (o AlertEmail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !utils.IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	return toSerialize, nil
}

type NullableAlertEmail struct {
	value *AlertEmail
	isSet bool
}

func (v NullableAlertEmail) Get() *AlertEmail {
	return v.value
}

func (v *NullableAlertEmail) Set(val *AlertEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertEmail(val *AlertEmail) *NullableAlertEmail {
	return &NullableAlertEmail{value: val, isSet: true}
}

func (v NullableAlertEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


