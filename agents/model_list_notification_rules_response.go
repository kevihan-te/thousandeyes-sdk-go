/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ListNotificationRulesResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ListNotificationRulesResponse{}

// ListNotificationRulesResponse struct for ListNotificationRulesResponse
type ListNotificationRulesResponse struct {
	AgentAlertRules []NotificationRule `json:"agentAlertRules,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

// NewListNotificationRulesResponse instantiates a new ListNotificationRulesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListNotificationRulesResponse() *ListNotificationRulesResponse {
	this := ListNotificationRulesResponse{}
	return &this
}

// NewListNotificationRulesResponseWithDefaults instantiates a new ListNotificationRulesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListNotificationRulesResponseWithDefaults() *ListNotificationRulesResponse {
	this := ListNotificationRulesResponse{}
	return &this
}

// GetAgentAlertRules returns the AgentAlertRules field value if set, zero value otherwise.
func (o *ListNotificationRulesResponse) GetAgentAlertRules() []NotificationRule {
	if o == nil || utils.IsNil(o.AgentAlertRules) {
		var ret []NotificationRule
		return ret
	}
	return o.AgentAlertRules
}

// GetAgentAlertRulesOk returns a tuple with the AgentAlertRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListNotificationRulesResponse) GetAgentAlertRulesOk() ([]NotificationRule, bool) {
	if o == nil || utils.IsNil(o.AgentAlertRules) {
		return nil, false
	}
	return o.AgentAlertRules, true
}

// HasAgentAlertRules returns a boolean if a field has been set.
func (o *ListNotificationRulesResponse) HasAgentAlertRules() bool {
	if o != nil && !utils.IsNil(o.AgentAlertRules) {
		return true
	}

	return false
}

// SetAgentAlertRules gets a reference to the given []NotificationRule and assigns it to the AgentAlertRules field.
func (o *ListNotificationRulesResponse) SetAgentAlertRules(v []NotificationRule) {
	o.AgentAlertRules = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ListNotificationRulesResponse) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListNotificationRulesResponse) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ListNotificationRulesResponse) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *ListNotificationRulesResponse) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o ListNotificationRulesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListNotificationRulesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AgentAlertRules) {
		toSerialize["agentAlertRules"] = o.AgentAlertRules
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableListNotificationRulesResponse struct {
	value *ListNotificationRulesResponse
	isSet bool
}

func (v NullableListNotificationRulesResponse) Get() *ListNotificationRulesResponse {
	return v.value
}

func (v *NullableListNotificationRulesResponse) Set(val *ListNotificationRulesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListNotificationRulesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListNotificationRulesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListNotificationRulesResponse(val *ListNotificationRulesResponse) *NullableListNotificationRulesResponse {
	return &NullableListNotificationRulesResponse{value: val, isSet: true}
}

func (v NullableListNotificationRulesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListNotificationRulesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


