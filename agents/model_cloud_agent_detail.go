/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"fmt"
)

// checks if the CloudAgentDetail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CloudAgentDetail{}

// CloudAgentDetail struct for CloudAgentDetail
type CloudAgentDetail struct {
	// Array of private IP addresses.
	IpAddresses []string `json:"ipAddresses,omitempty"`
	// Array of public IP addresses.
	PublicIpAddresses []string `json:"publicIpAddresses,omitempty"`
	// Network (including ASN) of agentâ€™s public IP.
	Network *string `json:"network,omitempty"`
	// Unique ID of the agent.
	AgentId *string `json:"agentId,omitempty"`
	// Name of the agent.
	AgentName *string `json:"agentName,omitempty"`
	// Location of the agent.
	Location *string `json:"location,omitempty"`
	// 2-digit ISO country code
	CountryId *string `json:"countryId,omitempty"`
	// Flag indicating if the agent is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Prefix containing agents public IP address.
	Prefix *string `json:"prefix,omitempty"`
	// Flag indicating if has normal SSL operations or  if instead it's set to ignore SSL errors on browserbot-based tests.
	VerifySslCertificates *bool `json:"verifySslCertificates,omitempty"`
	// Cloud agent type.
	AgentType string `json:"agentType"`
	// List of tests. See `/tests` for more information.
	Tests []SimpleTest `json:"tests,omitempty"`
	// List of labels - see `/labels` for more information.
	Labels []AgentLabel `json:"labels,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

type _CloudAgentDetail CloudAgentDetail

// NewCloudAgentDetail instantiates a new CloudAgentDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudAgentDetail(agentType string) *CloudAgentDetail {
	this := CloudAgentDetail{}
	this.AgentType = agentType
	return &this
}

// NewCloudAgentDetailWithDefaults instantiates a new CloudAgentDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudAgentDetailWithDefaults() *CloudAgentDetail {
	this := CloudAgentDetail{}
	return &this
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetIpAddresses() []string {
	if o == nil || utils.IsNil(o.IpAddresses) {
		var ret []string
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetIpAddressesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasIpAddresses() bool {
	if o != nil && !utils.IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []string and assigns it to the IpAddresses field.
func (o *CloudAgentDetail) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetPublicIpAddresses returns the PublicIpAddresses field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetPublicIpAddresses() []string {
	if o == nil || utils.IsNil(o.PublicIpAddresses) {
		var ret []string
		return ret
	}
	return o.PublicIpAddresses
}

// GetPublicIpAddressesOk returns a tuple with the PublicIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetPublicIpAddressesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.PublicIpAddresses) {
		return nil, false
	}
	return o.PublicIpAddresses, true
}

// HasPublicIpAddresses returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasPublicIpAddresses() bool {
	if o != nil && !utils.IsNil(o.PublicIpAddresses) {
		return true
	}

	return false
}

// SetPublicIpAddresses gets a reference to the given []string and assigns it to the PublicIpAddresses field.
func (o *CloudAgentDetail) SetPublicIpAddresses(v []string) {
	o.PublicIpAddresses = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetNetwork() string {
	if o == nil || utils.IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetNetworkOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasNetwork() bool {
	if o != nil && !utils.IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *CloudAgentDetail) SetNetwork(v string) {
	o.Network = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetAgentId() string {
	if o == nil || utils.IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetAgentIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasAgentId() bool {
	if o != nil && !utils.IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *CloudAgentDetail) SetAgentId(v string) {
	o.AgentId = &v
}

// GetAgentName returns the AgentName field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetAgentName() string {
	if o == nil || utils.IsNil(o.AgentName) {
		var ret string
		return ret
	}
	return *o.AgentName
}

// GetAgentNameOk returns a tuple with the AgentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetAgentNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AgentName) {
		return nil, false
	}
	return o.AgentName, true
}

// HasAgentName returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasAgentName() bool {
	if o != nil && !utils.IsNil(o.AgentName) {
		return true
	}

	return false
}

// SetAgentName gets a reference to the given string and assigns it to the AgentName field.
func (o *CloudAgentDetail) SetAgentName(v string) {
	o.AgentName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetLocation() string {
	if o == nil || utils.IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetLocationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasLocation() bool {
	if o != nil && !utils.IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *CloudAgentDetail) SetLocation(v string) {
	o.Location = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetCountryId() string {
	if o == nil || utils.IsNil(o.CountryId) {
		var ret string
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetCountryIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CountryId) {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasCountryId() bool {
	if o != nil && !utils.IsNil(o.CountryId) {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given string and assigns it to the CountryId field.
func (o *CloudAgentDetail) SetCountryId(v string) {
	o.CountryId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetEnabled() bool {
	if o == nil || utils.IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetEnabledOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasEnabled() bool {
	if o != nil && !utils.IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CloudAgentDetail) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetPrefix() string {
	if o == nil || utils.IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetPrefixOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasPrefix() bool {
	if o != nil && !utils.IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *CloudAgentDetail) SetPrefix(v string) {
	o.Prefix = &v
}

// GetVerifySslCertificates returns the VerifySslCertificates field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetVerifySslCertificates() bool {
	if o == nil || utils.IsNil(o.VerifySslCertificates) {
		var ret bool
		return ret
	}
	return *o.VerifySslCertificates
}

// GetVerifySslCertificatesOk returns a tuple with the VerifySslCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetVerifySslCertificatesOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.VerifySslCertificates) {
		return nil, false
	}
	return o.VerifySslCertificates, true
}

// HasVerifySslCertificates returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasVerifySslCertificates() bool {
	if o != nil && !utils.IsNil(o.VerifySslCertificates) {
		return true
	}

	return false
}

// SetVerifySslCertificates gets a reference to the given bool and assigns it to the VerifySslCertificates field.
func (o *CloudAgentDetail) SetVerifySslCertificates(v bool) {
	o.VerifySslCertificates = &v
}

// GetAgentType returns the AgentType field value
func (o *CloudAgentDetail) GetAgentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentType
}

// GetAgentTypeOk returns a tuple with the AgentType field value
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetAgentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentType, true
}

// SetAgentType sets field value
func (o *CloudAgentDetail) SetAgentType(v string) {
	o.AgentType = v
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetTests() []SimpleTest {
	if o == nil || utils.IsNil(o.Tests) {
		var ret []SimpleTest
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetTestsOk() ([]SimpleTest, bool) {
	if o == nil || utils.IsNil(o.Tests) {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasTests() bool {
	if o != nil && !utils.IsNil(o.Tests) {
		return true
	}

	return false
}

// SetTests gets a reference to the given []SimpleTest and assigns it to the Tests field.
func (o *CloudAgentDetail) SetTests(v []SimpleTest) {
	o.Tests = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetLabels() []AgentLabel {
	if o == nil || utils.IsNil(o.Labels) {
		var ret []AgentLabel
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetLabelsOk() ([]AgentLabel, bool) {
	if o == nil || utils.IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasLabels() bool {
	if o != nil && !utils.IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []AgentLabel and assigns it to the Labels field.
func (o *CloudAgentDetail) SetLabels(v []AgentLabel) {
	o.Labels = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CloudAgentDetail) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudAgentDetail) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CloudAgentDetail) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *CloudAgentDetail) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o CloudAgentDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudAgentDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	if !utils.IsNil(o.PublicIpAddresses) {
		toSerialize["publicIpAddresses"] = o.PublicIpAddresses
	}
	if !utils.IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !utils.IsNil(o.AgentId) {
		toSerialize["agentId"] = o.AgentId
	}
	if !utils.IsNil(o.AgentName) {
		toSerialize["agentName"] = o.AgentName
	}
	if !utils.IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !utils.IsNil(o.CountryId) {
		toSerialize["countryId"] = o.CountryId
	}
	if !utils.IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !utils.IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !utils.IsNil(o.VerifySslCertificates) {
		toSerialize["verifySslCertificates"] = o.VerifySslCertificates
	}
	toSerialize["agentType"] = o.AgentType
	if !utils.IsNil(o.Tests) {
		toSerialize["tests"] = o.Tests
	}
	if !utils.IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

func (o *CloudAgentDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agentType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudAgentDetail := _CloudAgentDetail{}

    err = json.Unmarshal(data, &varCloudAgentDetail)

	if err != nil {
		return err
	}

	*o = CloudAgentDetail(varCloudAgentDetail)

	return err
}

type NullableCloudAgentDetail struct {
	value *CloudAgentDetail
	isSet bool
}

func (v NullableCloudAgentDetail) Get() *CloudAgentDetail {
	return v.value
}

func (v *NullableCloudAgentDetail) Set(val *CloudAgentDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudAgentDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudAgentDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudAgentDetail(val *CloudAgentDetail) *NullableCloudAgentDetail {
	return &NullableCloudAgentDetail{value: val, isSet: true}
}

func (v NullableCloudAgentDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudAgentDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


