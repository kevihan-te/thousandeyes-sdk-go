/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the AgentNotification type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AgentNotification{}

// AgentNotification Alert notification object.
type AgentNotification struct {
	Email *AlertEmail `json:"email,omitempty"`
	ThirdParty []AlertIntegrationBase `json:"thirdParty,omitempty"`
	Webhook []AlertIntegrationBase `json:"webhook,omitempty"`
}

// NewAgentNotification instantiates a new AgentNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentNotification() *AgentNotification {
	this := AgentNotification{}
	return &this
}

// NewAgentNotificationWithDefaults instantiates a new AgentNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentNotificationWithDefaults() *AgentNotification {
	this := AgentNotification{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AgentNotification) GetEmail() AlertEmail {
	if o == nil || utils.IsNil(o.Email) {
		var ret AlertEmail
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentNotification) GetEmailOk() (*AlertEmail, bool) {
	if o == nil || utils.IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AgentNotification) HasEmail() bool {
	if o != nil && !utils.IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given AlertEmail and assigns it to the Email field.
func (o *AgentNotification) SetEmail(v AlertEmail) {
	o.Email = &v
}

// GetThirdParty returns the ThirdParty field value if set, zero value otherwise.
func (o *AgentNotification) GetThirdParty() []AlertIntegrationBase {
	if o == nil || utils.IsNil(o.ThirdParty) {
		var ret []AlertIntegrationBase
		return ret
	}
	return o.ThirdParty
}

// GetThirdPartyOk returns a tuple with the ThirdParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentNotification) GetThirdPartyOk() ([]AlertIntegrationBase, bool) {
	if o == nil || utils.IsNil(o.ThirdParty) {
		return nil, false
	}
	return o.ThirdParty, true
}

// HasThirdParty returns a boolean if a field has been set.
func (o *AgentNotification) HasThirdParty() bool {
	if o != nil && !utils.IsNil(o.ThirdParty) {
		return true
	}

	return false
}

// SetThirdParty gets a reference to the given []AlertIntegrationBase and assigns it to the ThirdParty field.
func (o *AgentNotification) SetThirdParty(v []AlertIntegrationBase) {
	o.ThirdParty = v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *AgentNotification) GetWebhook() []AlertIntegrationBase {
	if o == nil || utils.IsNil(o.Webhook) {
		var ret []AlertIntegrationBase
		return ret
	}
	return o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentNotification) GetWebhookOk() ([]AlertIntegrationBase, bool) {
	if o == nil || utils.IsNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *AgentNotification) HasWebhook() bool {
	if o != nil && !utils.IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given []AlertIntegrationBase and assigns it to the Webhook field.
func (o *AgentNotification) SetWebhook(v []AlertIntegrationBase) {
	o.Webhook = v
}

func (o AgentNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !utils.IsNil(o.ThirdParty) {
		toSerialize["thirdParty"] = o.ThirdParty
	}
	if !utils.IsNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return toSerialize, nil
}

type NullableAgentNotification struct {
	value *AgentNotification
	isSet bool
}

func (v NullableAgentNotification) Get() *AgentNotification {
	return v.value
}

func (v *NullableAgentNotification) Set(val *AgentNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentNotification(val *AgentNotification) *NullableAgentNotification {
	return &NullableAgentNotification{value: val, isSet: true}
}

func (v NullableAgentNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


