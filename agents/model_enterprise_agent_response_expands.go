/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the EnterpriseAgentResponseExpands type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EnterpriseAgentResponseExpands{}

// EnterpriseAgentResponseExpands struct for EnterpriseAgentResponseExpands
type EnterpriseAgentResponseExpands struct {
	// List of tests. See `/tests` for more information.
	Tests []SimpleTest `json:"tests,omitempty"`
	// List of notification rule objects configured on agent
	NotificationRules []NotificationRules `json:"notificationRules,omitempty"`
	// List of labels. See `/labels` for more information.
	Labels []AgentLabel `json:"labels,omitempty"`
}

// NewEnterpriseAgentResponseExpands instantiates a new EnterpriseAgentResponseExpands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseAgentResponseExpands() *EnterpriseAgentResponseExpands {
	this := EnterpriseAgentResponseExpands{}
	return &this
}

// NewEnterpriseAgentResponseExpandsWithDefaults instantiates a new EnterpriseAgentResponseExpands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseAgentResponseExpandsWithDefaults() *EnterpriseAgentResponseExpands {
	this := EnterpriseAgentResponseExpands{}
	return &this
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *EnterpriseAgentResponseExpands) GetTests() []SimpleTest {
	if o == nil || utils.IsNil(o.Tests) {
		var ret []SimpleTest
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseAgentResponseExpands) GetTestsOk() ([]SimpleTest, bool) {
	if o == nil || utils.IsNil(o.Tests) {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *EnterpriseAgentResponseExpands) HasTests() bool {
	if o != nil && !utils.IsNil(o.Tests) {
		return true
	}

	return false
}

// SetTests gets a reference to the given []SimpleTest and assigns it to the Tests field.
func (o *EnterpriseAgentResponseExpands) SetTests(v []SimpleTest) {
	o.Tests = v
}

// GetNotificationRules returns the NotificationRules field value if set, zero value otherwise.
func (o *EnterpriseAgentResponseExpands) GetNotificationRules() []NotificationRules {
	if o == nil || utils.IsNil(o.NotificationRules) {
		var ret []NotificationRules
		return ret
	}
	return o.NotificationRules
}

// GetNotificationRulesOk returns a tuple with the NotificationRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseAgentResponseExpands) GetNotificationRulesOk() ([]NotificationRules, bool) {
	if o == nil || utils.IsNil(o.NotificationRules) {
		return nil, false
	}
	return o.NotificationRules, true
}

// HasNotificationRules returns a boolean if a field has been set.
func (o *EnterpriseAgentResponseExpands) HasNotificationRules() bool {
	if o != nil && !utils.IsNil(o.NotificationRules) {
		return true
	}

	return false
}

// SetNotificationRules gets a reference to the given []NotificationRules and assigns it to the NotificationRules field.
func (o *EnterpriseAgentResponseExpands) SetNotificationRules(v []NotificationRules) {
	o.NotificationRules = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *EnterpriseAgentResponseExpands) GetLabels() []AgentLabel {
	if o == nil || utils.IsNil(o.Labels) {
		var ret []AgentLabel
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseAgentResponseExpands) GetLabelsOk() ([]AgentLabel, bool) {
	if o == nil || utils.IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *EnterpriseAgentResponseExpands) HasLabels() bool {
	if o != nil && !utils.IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []AgentLabel and assigns it to the Labels field.
func (o *EnterpriseAgentResponseExpands) SetLabels(v []AgentLabel) {
	o.Labels = v
}

func (o EnterpriseAgentResponseExpands) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterpriseAgentResponseExpands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Tests) {
		toSerialize["tests"] = o.Tests
	}
	if !utils.IsNil(o.NotificationRules) {
		toSerialize["notificationRules"] = o.NotificationRules
	}
	if !utils.IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	return toSerialize, nil
}

type NullableEnterpriseAgentResponseExpands struct {
	value *EnterpriseAgentResponseExpands
	isSet bool
}

func (v NullableEnterpriseAgentResponseExpands) Get() *EnterpriseAgentResponseExpands {
	return v.value
}

func (v *NullableEnterpriseAgentResponseExpands) Set(val *EnterpriseAgentResponseExpands) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseAgentResponseExpands) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseAgentResponseExpands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseAgentResponseExpands(val *EnterpriseAgentResponseExpands) *NullableEnterpriseAgentResponseExpands {
	return &NullableEnterpriseAgentResponseExpands{value: val, isSet: true}
}

func (v NullableEnterpriseAgentResponseExpands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseAgentResponseExpands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


