/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the AgentProxy type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AgentProxy{}

// AgentProxy struct for AgentProxy
type AgentProxy struct {
	// Account id that this proxy configuration belongs to
	Aid *string `json:"aid,omitempty"`
	AuthType *ProxyAuthType `json:"authType,omitempty"`
	// A list of hostnames, network prefixes, or wildcards used to determine which test targets should not be proxied. If all tests should be proxied, leave empty.
	BypassList []string `json:"bypassList,omitempty"`
	// Last modification timestamp of the proxy. Expressed in UTC (ISO date-time format).
	LastModified *time.Time `json:"lastModified,omitempty"`
	// The location of the proxy. If proxyType is `static` use the format `hostname:port`. If location is `pac`, then specify the URL where the PAC file can be obtained.
	Location *string `json:"location,omitempty"`
	// Set to `true` if this proxy configuration comes from the agentâ€™s config file. Specify `false` if the proxy configuration was created in the ThousandEyes application.
	IsLocalConfigured *bool `json:"isLocalConfigured,omitempty"`
	// Expression of agent notification rule.
	Name *string `json:"name,omitempty"`
	// Password for proxy authentication
	Password *string `json:"password,omitempty"`
	// Agent proxy's unique ID.
	ProxyId *string `json:"proxyId,omitempty"`
	Type *ProxyType `json:"type,omitempty"`
	// Username for proxy authentication.
	User *string `json:"user,omitempty"`
}

// NewAgentProxy instantiates a new AgentProxy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentProxy() *AgentProxy {
	this := AgentProxy{}
	return &this
}

// NewAgentProxyWithDefaults instantiates a new AgentProxy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentProxyWithDefaults() *AgentProxy {
	this := AgentProxy{}
	return &this
}

// GetAid returns the Aid field value if set, zero value otherwise.
func (o *AgentProxy) GetAid() string {
	if o == nil || utils.IsNil(o.Aid) {
		var ret string
		return ret
	}
	return *o.Aid
}

// GetAidOk returns a tuple with the Aid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetAidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Aid) {
		return nil, false
	}
	return o.Aid, true
}

// HasAid returns a boolean if a field has been set.
func (o *AgentProxy) HasAid() bool {
	if o != nil && !utils.IsNil(o.Aid) {
		return true
	}

	return false
}

// SetAid gets a reference to the given string and assigns it to the Aid field.
func (o *AgentProxy) SetAid(v string) {
	o.Aid = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *AgentProxy) GetAuthType() ProxyAuthType {
	if o == nil || utils.IsNil(o.AuthType) {
		var ret ProxyAuthType
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetAuthTypeOk() (*ProxyAuthType, bool) {
	if o == nil || utils.IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *AgentProxy) HasAuthType() bool {
	if o != nil && !utils.IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given ProxyAuthType and assigns it to the AuthType field.
func (o *AgentProxy) SetAuthType(v ProxyAuthType) {
	o.AuthType = &v
}

// GetBypassList returns the BypassList field value if set, zero value otherwise.
func (o *AgentProxy) GetBypassList() []string {
	if o == nil || utils.IsNil(o.BypassList) {
		var ret []string
		return ret
	}
	return o.BypassList
}

// GetBypassListOk returns a tuple with the BypassList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetBypassListOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.BypassList) {
		return nil, false
	}
	return o.BypassList, true
}

// HasBypassList returns a boolean if a field has been set.
func (o *AgentProxy) HasBypassList() bool {
	if o != nil && !utils.IsNil(o.BypassList) {
		return true
	}

	return false
}

// SetBypassList gets a reference to the given []string and assigns it to the BypassList field.
func (o *AgentProxy) SetBypassList(v []string) {
	o.BypassList = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *AgentProxy) GetLastModified() time.Time {
	if o == nil || utils.IsNil(o.LastModified) {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *AgentProxy) HasLastModified() bool {
	if o != nil && !utils.IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *AgentProxy) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *AgentProxy) GetLocation() string {
	if o == nil || utils.IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetLocationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *AgentProxy) HasLocation() bool {
	if o != nil && !utils.IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *AgentProxy) SetLocation(v string) {
	o.Location = &v
}

// GetIsLocalConfigured returns the IsLocalConfigured field value if set, zero value otherwise.
func (o *AgentProxy) GetIsLocalConfigured() bool {
	if o == nil || utils.IsNil(o.IsLocalConfigured) {
		var ret bool
		return ret
	}
	return *o.IsLocalConfigured
}

// GetIsLocalConfiguredOk returns a tuple with the IsLocalConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetIsLocalConfiguredOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.IsLocalConfigured) {
		return nil, false
	}
	return o.IsLocalConfigured, true
}

// HasIsLocalConfigured returns a boolean if a field has been set.
func (o *AgentProxy) HasIsLocalConfigured() bool {
	if o != nil && !utils.IsNil(o.IsLocalConfigured) {
		return true
	}

	return false
}

// SetIsLocalConfigured gets a reference to the given bool and assigns it to the IsLocalConfigured field.
func (o *AgentProxy) SetIsLocalConfigured(v bool) {
	o.IsLocalConfigured = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AgentProxy) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AgentProxy) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AgentProxy) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AgentProxy) GetPassword() string {
	if o == nil || utils.IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetPasswordOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AgentProxy) HasPassword() bool {
	if o != nil && !utils.IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AgentProxy) SetPassword(v string) {
	o.Password = &v
}

// GetProxyId returns the ProxyId field value if set, zero value otherwise.
func (o *AgentProxy) GetProxyId() string {
	if o == nil || utils.IsNil(o.ProxyId) {
		var ret string
		return ret
	}
	return *o.ProxyId
}

// GetProxyIdOk returns a tuple with the ProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetProxyIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProxyId) {
		return nil, false
	}
	return o.ProxyId, true
}

// HasProxyId returns a boolean if a field has been set.
func (o *AgentProxy) HasProxyId() bool {
	if o != nil && !utils.IsNil(o.ProxyId) {
		return true
	}

	return false
}

// SetProxyId gets a reference to the given string and assigns it to the ProxyId field.
func (o *AgentProxy) SetProxyId(v string) {
	o.ProxyId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AgentProxy) GetType() ProxyType {
	if o == nil || utils.IsNil(o.Type) {
		var ret ProxyType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetTypeOk() (*ProxyType, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AgentProxy) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ProxyType and assigns it to the Type field.
func (o *AgentProxy) SetType(v ProxyType) {
	o.Type = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AgentProxy) GetUser() string {
	if o == nil || utils.IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentProxy) GetUserOk() (*string, bool) {
	if o == nil || utils.IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AgentProxy) HasUser() bool {
	if o != nil && !utils.IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *AgentProxy) SetUser(v string) {
	o.User = &v
}

func (o AgentProxy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentProxy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Aid) {
		toSerialize["aid"] = o.Aid
	}
	if !utils.IsNil(o.AuthType) {
		toSerialize["authType"] = o.AuthType
	}
	if !utils.IsNil(o.BypassList) {
		toSerialize["bypassList"] = o.BypassList
	}
	if !utils.IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !utils.IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !utils.IsNil(o.IsLocalConfigured) {
		toSerialize["isLocalConfigured"] = o.IsLocalConfigured
	}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !utils.IsNil(o.ProxyId) {
		toSerialize["proxyId"] = o.ProxyId
	}
	if !utils.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !utils.IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableAgentProxy struct {
	value *AgentProxy
	isSet bool
}

func (v NullableAgentProxy) Get() *AgentProxy {
	return v.value
}

func (v *NullableAgentProxy) Set(val *AgentProxy) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentProxy) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentProxy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentProxy(val *AgentProxy) *NullableAgentProxy {
	return &NullableAgentProxy{value: val, isSet: true}
}

func (v NullableAgentProxy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentProxy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


