/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the NotificationRules type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &NotificationRules{}

// NotificationRules struct for NotificationRules
type NotificationRules struct {
	AgentAlertRules []NotificationRule `json:"agentAlertRules,omitempty"`
}

// NewNotificationRules instantiates a new NotificationRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationRules() *NotificationRules {
	this := NotificationRules{}
	return &this
}

// NewNotificationRulesWithDefaults instantiates a new NotificationRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationRulesWithDefaults() *NotificationRules {
	this := NotificationRules{}
	return &this
}

// GetAgentAlertRules returns the AgentAlertRules field value if set, zero value otherwise.
func (o *NotificationRules) GetAgentAlertRules() []NotificationRule {
	if o == nil || utils.IsNil(o.AgentAlertRules) {
		var ret []NotificationRule
		return ret
	}
	return o.AgentAlertRules
}

// GetAgentAlertRulesOk returns a tuple with the AgentAlertRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRules) GetAgentAlertRulesOk() ([]NotificationRule, bool) {
	if o == nil || utils.IsNil(o.AgentAlertRules) {
		return nil, false
	}
	return o.AgentAlertRules, true
}

// HasAgentAlertRules returns a boolean if a field has been set.
func (o *NotificationRules) HasAgentAlertRules() bool {
	if o != nil && !utils.IsNil(o.AgentAlertRules) {
		return true
	}

	return false
}

// SetAgentAlertRules gets a reference to the given []NotificationRule and assigns it to the AgentAlertRules field.
func (o *NotificationRules) SetAgentAlertRules(v []NotificationRule) {
	o.AgentAlertRules = v
}

func (o NotificationRules) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AgentAlertRules) {
		toSerialize["agentAlertRules"] = o.AgentAlertRules
	}
	return toSerialize, nil
}

type NullableNotificationRules struct {
	value *NotificationRules
	isSet bool
}

func (v NullableNotificationRules) Get() *NotificationRules {
	return v.value
}

func (v *NullableNotificationRules) Set(val *NotificationRules) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationRules) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationRules(val *NotificationRules) *NullableNotificationRules {
	return &NullableNotificationRules{value: val, isSet: true}
}

func (v NullableNotificationRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


