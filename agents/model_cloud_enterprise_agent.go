/*
Agents API

 ## Overview Manage Cloud and Enterprise Agents available to your account in ThousandEyes.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agents

import (
	"encoding/json"
	"fmt"
)

// CloudEnterpriseAgent struct for CloudEnterpriseAgent
type CloudEnterpriseAgent struct {
	AgentResponse *AgentResponse
	EnterpriseAgent *EnterpriseAgent
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CloudEnterpriseAgent) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AgentResponse
	err = json.Unmarshal(data, &dst.AgentResponse);
	if err == nil {
		jsonAgentResponse, _ := json.Marshal(dst.AgentResponse)
		if string(jsonAgentResponse) == "{}" { // empty struct
			dst.AgentResponse = nil
		} else {
			return nil // data stored in dst.AgentResponse, return on the first match
		}
	} else {
		dst.AgentResponse = nil
	}

	// try to unmarshal JSON data into EnterpriseAgent
	err = json.Unmarshal(data, &dst.EnterpriseAgent);
	if err == nil {
		jsonEnterpriseAgent, _ := json.Marshal(dst.EnterpriseAgent)
		if string(jsonEnterpriseAgent) == "{}" { // empty struct
			dst.EnterpriseAgent = nil
		} else {
			return nil // data stored in dst.EnterpriseAgent, return on the first match
		}
	} else {
		dst.EnterpriseAgent = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CloudEnterpriseAgent)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *CloudEnterpriseAgent) MarshalJSON() ([]byte, error) {
	if src.AgentResponse != nil {
		return json.Marshal(&src.AgentResponse)
	}

	if src.EnterpriseAgent != nil {
		return json.Marshal(&src.EnterpriseAgent)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableCloudEnterpriseAgent struct {
	value *CloudEnterpriseAgent
	isSet bool
}

func (v NullableCloudEnterpriseAgent) Get() *CloudEnterpriseAgent {
	return v.value
}

func (v *NullableCloudEnterpriseAgent) Set(val *CloudEnterpriseAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudEnterpriseAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudEnterpriseAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudEnterpriseAgent(val *CloudEnterpriseAgent) *NullableCloudEnterpriseAgent {
	return &NullableCloudEnterpriseAgent{value: val, isSet: true}
}

func (v NullableCloudEnterpriseAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudEnterpriseAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


