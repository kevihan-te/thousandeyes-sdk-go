/*
Endpoint Tests API

 Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtests

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the EndpointNetworkTestUpdate type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointNetworkTestUpdate{}

// EndpointNetworkTestUpdate struct for EndpointNetworkTestUpdate
type EndpointNetworkTestUpdate struct {
	Interval *TestInterval `json:"interval,omitempty"`
	// Name of the test.
	TestName *string `json:"testName,omitempty"`
	Protocol *EndpointTestProtocol `json:"protocol,omitempty"`
	// Indicates if test is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	TcpProbeMode *TestProbeMode `json:"tcpProbeMode,omitempty"`
	// Target port.
	Port *int32 `json:"port,omitempty"`
	// Target domain name or IP address.
	Server *string `json:"server,omitempty"`
}

// NewEndpointNetworkTestUpdate instantiates a new EndpointNetworkTestUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointNetworkTestUpdate() *EndpointNetworkTestUpdate {
	this := EndpointNetworkTestUpdate{}
	var interval TestInterval = TESTINTERVAL__60
	this.Interval = &interval
	var protocol EndpointTestProtocol = ENDPOINTTESTPROTOCOL_ICMP
	this.Protocol = &protocol
	var isEnabled bool = true
	this.IsEnabled = &isEnabled
	var tcpProbeMode TestProbeMode = TESTPROBEMODE_AUTO
	this.TcpProbeMode = &tcpProbeMode
	var port int32 = 49153
	this.Port = &port
	return &this
}

// NewEndpointNetworkTestUpdateWithDefaults instantiates a new EndpointNetworkTestUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointNetworkTestUpdateWithDefaults() *EndpointNetworkTestUpdate {
	this := EndpointNetworkTestUpdate{}
	var interval TestInterval = TESTINTERVAL__60
	this.Interval = &interval
	var protocol EndpointTestProtocol = ENDPOINTTESTPROTOCOL_ICMP
	this.Protocol = &protocol
	var isEnabled bool = true
	this.IsEnabled = &isEnabled
	var tcpProbeMode TestProbeMode = TESTPROBEMODE_AUTO
	this.TcpProbeMode = &tcpProbeMode
	var port int32 = 49153
	this.Port = &port
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetInterval() TestInterval {
	if o == nil || utils.IsNil(o.Interval) {
		var ret TestInterval
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetIntervalOk() (*TestInterval, bool) {
	if o == nil || utils.IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasInterval() bool {
	if o != nil && !utils.IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given TestInterval and assigns it to the Interval field.
func (o *EndpointNetworkTestUpdate) SetInterval(v TestInterval) {
	o.Interval = &v
}

// GetTestName returns the TestName field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetTestName() string {
	if o == nil || utils.IsNil(o.TestName) {
		var ret string
		return ret
	}
	return *o.TestName
}

// GetTestNameOk returns a tuple with the TestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetTestNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TestName) {
		return nil, false
	}
	return o.TestName, true
}

// HasTestName returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasTestName() bool {
	if o != nil && !utils.IsNil(o.TestName) {
		return true
	}

	return false
}

// SetTestName gets a reference to the given string and assigns it to the TestName field.
func (o *EndpointNetworkTestUpdate) SetTestName(v string) {
	o.TestName = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetProtocol() EndpointTestProtocol {
	if o == nil || utils.IsNil(o.Protocol) {
		var ret EndpointTestProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetProtocolOk() (*EndpointTestProtocol, bool) {
	if o == nil || utils.IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasProtocol() bool {
	if o != nil && !utils.IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given EndpointTestProtocol and assigns it to the Protocol field.
func (o *EndpointNetworkTestUpdate) SetProtocol(v EndpointTestProtocol) {
	o.Protocol = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetIsEnabled() bool {
	if o == nil || utils.IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetIsEnabledOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasIsEnabled() bool {
	if o != nil && !utils.IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *EndpointNetworkTestUpdate) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetTcpProbeMode returns the TcpProbeMode field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetTcpProbeMode() TestProbeMode {
	if o == nil || utils.IsNil(o.TcpProbeMode) {
		var ret TestProbeMode
		return ret
	}
	return *o.TcpProbeMode
}

// GetTcpProbeModeOk returns a tuple with the TcpProbeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetTcpProbeModeOk() (*TestProbeMode, bool) {
	if o == nil || utils.IsNil(o.TcpProbeMode) {
		return nil, false
	}
	return o.TcpProbeMode, true
}

// HasTcpProbeMode returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasTcpProbeMode() bool {
	if o != nil && !utils.IsNil(o.TcpProbeMode) {
		return true
	}

	return false
}

// SetTcpProbeMode gets a reference to the given TestProbeMode and assigns it to the TcpProbeMode field.
func (o *EndpointNetworkTestUpdate) SetTcpProbeMode(v TestProbeMode) {
	o.TcpProbeMode = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetPort() int32 {
	if o == nil || utils.IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetPortOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasPort() bool {
	if o != nil && !utils.IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *EndpointNetworkTestUpdate) SetPort(v int32) {
	o.Port = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *EndpointNetworkTestUpdate) GetServer() string {
	if o == nil || utils.IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointNetworkTestUpdate) GetServerOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *EndpointNetworkTestUpdate) HasServer() bool {
	if o != nil && !utils.IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *EndpointNetworkTestUpdate) SetServer(v string) {
	o.Server = &v
}

func (o EndpointNetworkTestUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointNetworkTestUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !utils.IsNil(o.TestName) {
		toSerialize["testName"] = o.TestName
	}
	if !utils.IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !utils.IsNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !utils.IsNil(o.TcpProbeMode) {
		toSerialize["tcpProbeMode"] = o.TcpProbeMode
	}
	if !utils.IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !utils.IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	return toSerialize, nil
}

type NullableEndpointNetworkTestUpdate struct {
	value *EndpointNetworkTestUpdate
	isSet bool
}

func (v NullableEndpointNetworkTestUpdate) Get() *EndpointNetworkTestUpdate {
	return v.value
}

func (v *NullableEndpointNetworkTestUpdate) Set(val *EndpointNetworkTestUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointNetworkTestUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointNetworkTestUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointNetworkTestUpdate(val *EndpointNetworkTestUpdate) *NullableEndpointNetworkTestUpdate {
	return &NullableEndpointNetworkTestUpdate{value: val, isSet: true}
}

func (v NullableEndpointNetworkTestUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointNetworkTestUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


