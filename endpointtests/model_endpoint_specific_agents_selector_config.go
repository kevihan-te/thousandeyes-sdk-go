/*
Endpoint Tests API

 Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtests

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"fmt"
)

// checks if the EndpointSpecificAgentsSelectorConfig type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointSpecificAgentsSelectorConfig{}

// EndpointSpecificAgentsSelectorConfig Specific agents selection object.
type EndpointSpecificAgentsSelectorConfig struct {
	AgentSelectorType string `json:"agentSelectorType"`
	// Maximum number of agents which can execute the test.
	MaxMachines *int32 `json:"maxMachines,omitempty"`
	// List of endpoint agent IDs (obtained from `/endpoint/agents` endpoint). Required when `agentSelectorType` is set to `specific-agent`.
	Agents []string `json:"agents,omitempty"`
}

type _EndpointSpecificAgentsSelectorConfig EndpointSpecificAgentsSelectorConfig

// NewEndpointSpecificAgentsSelectorConfig instantiates a new EndpointSpecificAgentsSelectorConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointSpecificAgentsSelectorConfig(agentSelectorType string) *EndpointSpecificAgentsSelectorConfig {
	this := EndpointSpecificAgentsSelectorConfig{}
	this.AgentSelectorType = agentSelectorType
	var maxMachines int32 = 25
	this.MaxMachines = &maxMachines
	return &this
}

// NewEndpointSpecificAgentsSelectorConfigWithDefaults instantiates a new EndpointSpecificAgentsSelectorConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointSpecificAgentsSelectorConfigWithDefaults() *EndpointSpecificAgentsSelectorConfig {
	this := EndpointSpecificAgentsSelectorConfig{}
	var maxMachines int32 = 25
	this.MaxMachines = &maxMachines
	return &this
}

// GetAgentSelectorType returns the AgentSelectorType field value
func (o *EndpointSpecificAgentsSelectorConfig) GetAgentSelectorType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentSelectorType
}

// GetAgentSelectorTypeOk returns a tuple with the AgentSelectorType field value
// and a boolean to check if the value has been set.
func (o *EndpointSpecificAgentsSelectorConfig) GetAgentSelectorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentSelectorType, true
}

// SetAgentSelectorType sets field value
func (o *EndpointSpecificAgentsSelectorConfig) SetAgentSelectorType(v string) {
	o.AgentSelectorType = v
}

// GetMaxMachines returns the MaxMachines field value if set, zero value otherwise.
func (o *EndpointSpecificAgentsSelectorConfig) GetMaxMachines() int32 {
	if o == nil || utils.IsNil(o.MaxMachines) {
		var ret int32
		return ret
	}
	return *o.MaxMachines
}

// GetMaxMachinesOk returns a tuple with the MaxMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointSpecificAgentsSelectorConfig) GetMaxMachinesOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.MaxMachines) {
		return nil, false
	}
	return o.MaxMachines, true
}

// HasMaxMachines returns a boolean if a field has been set.
func (o *EndpointSpecificAgentsSelectorConfig) HasMaxMachines() bool {
	if o != nil && !utils.IsNil(o.MaxMachines) {
		return true
	}

	return false
}

// SetMaxMachines gets a reference to the given int32 and assigns it to the MaxMachines field.
func (o *EndpointSpecificAgentsSelectorConfig) SetMaxMachines(v int32) {
	o.MaxMachines = &v
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *EndpointSpecificAgentsSelectorConfig) GetAgents() []string {
	if o == nil || utils.IsNil(o.Agents) {
		var ret []string
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointSpecificAgentsSelectorConfig) GetAgentsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *EndpointSpecificAgentsSelectorConfig) HasAgents() bool {
	if o != nil && !utils.IsNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []string and assigns it to the Agents field.
func (o *EndpointSpecificAgentsSelectorConfig) SetAgents(v []string) {
	o.Agents = v
}

func (o EndpointSpecificAgentsSelectorConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointSpecificAgentsSelectorConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agentSelectorType"] = o.AgentSelectorType
	if !utils.IsNil(o.MaxMachines) {
		toSerialize["maxMachines"] = o.MaxMachines
	}
	if !utils.IsNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	return toSerialize, nil
}

func (o *EndpointSpecificAgentsSelectorConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agentSelectorType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointSpecificAgentsSelectorConfig := _EndpointSpecificAgentsSelectorConfig{}

    err = json.Unmarshal(data, &varEndpointSpecificAgentsSelectorConfig)

	if err != nil {
		return err
	}

	*o = EndpointSpecificAgentsSelectorConfig(varEndpointSpecificAgentsSelectorConfig)

	return err
}

type NullableEndpointSpecificAgentsSelectorConfig struct {
	value *EndpointSpecificAgentsSelectorConfig
	isSet bool
}

func (v NullableEndpointSpecificAgentsSelectorConfig) Get() *EndpointSpecificAgentsSelectorConfig {
	return v.value
}

func (v *NullableEndpointSpecificAgentsSelectorConfig) Set(val *EndpointSpecificAgentsSelectorConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointSpecificAgentsSelectorConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointSpecificAgentsSelectorConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointSpecificAgentsSelectorConfig(val *EndpointSpecificAgentsSelectorConfig) *NullableEndpointSpecificAgentsSelectorConfig {
	return &NullableEndpointSpecificAgentsSelectorConfig{value: val, isSet: true}
}

func (v NullableEndpointSpecificAgentsSelectorConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointSpecificAgentsSelectorConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


