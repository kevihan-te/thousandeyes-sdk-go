/*
Endpoint Instant Scheduled Tests API

 You can create and execute a new endpoint instant scheduled test within ThousandEyes using this API. The test parameters are specified in the `POST` data.  The following applies to the Endpoint Instant Scheduled Tests API:  * To initiate the creation and execution of an instant scheduled test, the user must possess the `Edit endpoint tests` permission.  * Upon successful creation of an instant scheduled test, the API responds with an HTTP/201 CREATED status code and return the test definition. * It's important to note that the response does not include the results of the instant scheduled test. To retrieve test results, users can utilize the Endpoint Test Data endpoints. The URLs for these API test data endpoints are provided within the test definition output when an instant scheduled test is created. 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointinstanttests

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"fmt"
)

// checks if the EndpointAgentToServerInstantTest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointAgentToServerInstantTest{}

// EndpointAgentToServerInstantTest struct for EndpointAgentToServerInstantTest
type EndpointAgentToServerInstantTest struct {
	AgentSelectorType *EndpointTestAgentSelectorType `json:"agentSelectorType,omitempty"`
	// List of endpoint agent IDs (obtained from `/endpoint/agents` endpoint). Required when `agentSelectorType` is set to `specific-agent`.
	Agents []string `json:"agents,omitempty"`
	// List of endpoint agent label IDs (obtained from `/endpoint/labels` endpoint), required when `agentSelectorType` is set to `agent-labels`.
	EndpointAgentLabels []string `json:"endpointAgentLabels,omitempty"`
	// Maximum number of agents which can execute the test.
	MaxMachines *int32 `json:"maxMachines,omitempty"`
	// Name of the test.
	TestName string `json:"testName"`
	// A server address without a protocol or IP address.
	ServerName string `json:"serverName"`
	// Port number.
	Port *int32 `json:"port,omitempty"`
}

type _EndpointAgentToServerInstantTest EndpointAgentToServerInstantTest

// NewEndpointAgentToServerInstantTest instantiates a new EndpointAgentToServerInstantTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointAgentToServerInstantTest(testName string, serverName string) *EndpointAgentToServerInstantTest {
	this := EndpointAgentToServerInstantTest{}
	var agentSelectorType EndpointTestAgentSelectorType = ENDPOINTTESTAGENTSELECTORTYPE_ALL_AGENTS
	this.AgentSelectorType = &agentSelectorType
	var maxMachines int32 = 25
	this.MaxMachines = &maxMachines
	this.TestName = testName
	this.ServerName = serverName
	var port int32 = 443
	this.Port = &port
	return &this
}

// NewEndpointAgentToServerInstantTestWithDefaults instantiates a new EndpointAgentToServerInstantTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointAgentToServerInstantTestWithDefaults() *EndpointAgentToServerInstantTest {
	this := EndpointAgentToServerInstantTest{}
	var agentSelectorType EndpointTestAgentSelectorType = ENDPOINTTESTAGENTSELECTORTYPE_ALL_AGENTS
	this.AgentSelectorType = &agentSelectorType
	var maxMachines int32 = 25
	this.MaxMachines = &maxMachines
	var port int32 = 443
	this.Port = &port
	return &this
}

// GetAgentSelectorType returns the AgentSelectorType field value if set, zero value otherwise.
func (o *EndpointAgentToServerInstantTest) GetAgentSelectorType() EndpointTestAgentSelectorType {
	if o == nil || utils.IsNil(o.AgentSelectorType) {
		var ret EndpointTestAgentSelectorType
		return ret
	}
	return *o.AgentSelectorType
}

// GetAgentSelectorTypeOk returns a tuple with the AgentSelectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetAgentSelectorTypeOk() (*EndpointTestAgentSelectorType, bool) {
	if o == nil || utils.IsNil(o.AgentSelectorType) {
		return nil, false
	}
	return o.AgentSelectorType, true
}

// HasAgentSelectorType returns a boolean if a field has been set.
func (o *EndpointAgentToServerInstantTest) HasAgentSelectorType() bool {
	if o != nil && !utils.IsNil(o.AgentSelectorType) {
		return true
	}

	return false
}

// SetAgentSelectorType gets a reference to the given EndpointTestAgentSelectorType and assigns it to the AgentSelectorType field.
func (o *EndpointAgentToServerInstantTest) SetAgentSelectorType(v EndpointTestAgentSelectorType) {
	o.AgentSelectorType = &v
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *EndpointAgentToServerInstantTest) GetAgents() []string {
	if o == nil || utils.IsNil(o.Agents) {
		var ret []string
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetAgentsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *EndpointAgentToServerInstantTest) HasAgents() bool {
	if o != nil && !utils.IsNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []string and assigns it to the Agents field.
func (o *EndpointAgentToServerInstantTest) SetAgents(v []string) {
	o.Agents = v
}

// GetEndpointAgentLabels returns the EndpointAgentLabels field value if set, zero value otherwise.
func (o *EndpointAgentToServerInstantTest) GetEndpointAgentLabels() []string {
	if o == nil || utils.IsNil(o.EndpointAgentLabels) {
		var ret []string
		return ret
	}
	return o.EndpointAgentLabels
}

// GetEndpointAgentLabelsOk returns a tuple with the EndpointAgentLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetEndpointAgentLabelsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentLabels) {
		return nil, false
	}
	return o.EndpointAgentLabels, true
}

// HasEndpointAgentLabels returns a boolean if a field has been set.
func (o *EndpointAgentToServerInstantTest) HasEndpointAgentLabels() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentLabels) {
		return true
	}

	return false
}

// SetEndpointAgentLabels gets a reference to the given []string and assigns it to the EndpointAgentLabels field.
func (o *EndpointAgentToServerInstantTest) SetEndpointAgentLabels(v []string) {
	o.EndpointAgentLabels = v
}

// GetMaxMachines returns the MaxMachines field value if set, zero value otherwise.
func (o *EndpointAgentToServerInstantTest) GetMaxMachines() int32 {
	if o == nil || utils.IsNil(o.MaxMachines) {
		var ret int32
		return ret
	}
	return *o.MaxMachines
}

// GetMaxMachinesOk returns a tuple with the MaxMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetMaxMachinesOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.MaxMachines) {
		return nil, false
	}
	return o.MaxMachines, true
}

// HasMaxMachines returns a boolean if a field has been set.
func (o *EndpointAgentToServerInstantTest) HasMaxMachines() bool {
	if o != nil && !utils.IsNil(o.MaxMachines) {
		return true
	}

	return false
}

// SetMaxMachines gets a reference to the given int32 and assigns it to the MaxMachines field.
func (o *EndpointAgentToServerInstantTest) SetMaxMachines(v int32) {
	o.MaxMachines = &v
}

// GetTestName returns the TestName field value
func (o *EndpointAgentToServerInstantTest) GetTestName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TestName
}

// GetTestNameOk returns a tuple with the TestName field value
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetTestNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestName, true
}

// SetTestName sets field value
func (o *EndpointAgentToServerInstantTest) SetTestName(v string) {
	o.TestName = v
}

// GetServerName returns the ServerName field value
func (o *EndpointAgentToServerInstantTest) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *EndpointAgentToServerInstantTest) SetServerName(v string) {
	o.ServerName = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *EndpointAgentToServerInstantTest) GetPort() int32 {
	if o == nil || utils.IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentToServerInstantTest) GetPortOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *EndpointAgentToServerInstantTest) HasPort() bool {
	if o != nil && !utils.IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *EndpointAgentToServerInstantTest) SetPort(v int32) {
	o.Port = &v
}

func (o EndpointAgentToServerInstantTest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointAgentToServerInstantTest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AgentSelectorType) {
		toSerialize["agentSelectorType"] = o.AgentSelectorType
	}
	if !utils.IsNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	if !utils.IsNil(o.EndpointAgentLabels) {
		toSerialize["endpointAgentLabels"] = o.EndpointAgentLabels
	}
	if !utils.IsNil(o.MaxMachines) {
		toSerialize["maxMachines"] = o.MaxMachines
	}
	toSerialize["testName"] = o.TestName
	toSerialize["serverName"] = o.ServerName
	if !utils.IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

func (o *EndpointAgentToServerInstantTest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"testName",
		"serverName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointAgentToServerInstantTest := _EndpointAgentToServerInstantTest{}

    err = json.Unmarshal(data, &varEndpointAgentToServerInstantTest)

	if err != nil {
		return err
	}

	*o = EndpointAgentToServerInstantTest(varEndpointAgentToServerInstantTest)

	return err
}

type NullableEndpointAgentToServerInstantTest struct {
	value *EndpointAgentToServerInstantTest
	isSet bool
}

func (v NullableEndpointAgentToServerInstantTest) Get() *EndpointAgentToServerInstantTest {
	return v.value
}

func (v *NullableEndpointAgentToServerInstantTest) Set(val *EndpointAgentToServerInstantTest) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointAgentToServerInstantTest) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointAgentToServerInstantTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointAgentToServerInstantTest(val *EndpointAgentToServerInstantTest) *NullableEndpointAgentToServerInstantTest {
	return &NullableEndpointAgentToServerInstantTest{value: val, isSet: true}
}

func (v NullableEndpointAgentToServerInstantTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointAgentToServerInstantTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


