/*
Alerts API

You can manage the following alert functionalities on the ThousandEyes platform using the Alerts API:  * **Alerts**: Retrieve alert details. Alerts are assigned to tests through alert rules.  * **Alert Rules**: Conditions that you configure in order to highlight or be notified of events of interest in your ThousandEyes tests. When an alert ruleâ€™s conditions are met, the associated alert is triggered and the alert becomes active. It remains active until the alert is cleared. Alert rules are reusable across multiple tests..  * **Alert Suppression Windows**: Suppress alerts for tests during periods such as planned maintenance. Windows can be one-time events or recurring events to handle periodic occurrences such as monthly downtime for maintenance.  For more information about the alerts, see [Alerts](https://docs.thousandeyes.com/product-documentation/alerts). 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerts

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the AlertSuppressionWindows type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AlertSuppressionWindows{}

// AlertSuppressionWindows Alert suppression windows.
type AlertSuppressionWindows struct {
	AlertSuppressionWindows []AlertSuppressionWindow `json:"alertSuppressionWindows,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

// NewAlertSuppressionWindows instantiates a new AlertSuppressionWindows object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertSuppressionWindows() *AlertSuppressionWindows {
	this := AlertSuppressionWindows{}
	return &this
}

// NewAlertSuppressionWindowsWithDefaults instantiates a new AlertSuppressionWindows object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertSuppressionWindowsWithDefaults() *AlertSuppressionWindows {
	this := AlertSuppressionWindows{}
	return &this
}

// GetAlertSuppressionWindows returns the AlertSuppressionWindows field value if set, zero value otherwise.
func (o *AlertSuppressionWindows) GetAlertSuppressionWindows() []AlertSuppressionWindow {
	if o == nil || utils.IsNil(o.AlertSuppressionWindows) {
		var ret []AlertSuppressionWindow
		return ret
	}
	return o.AlertSuppressionWindows
}

// GetAlertSuppressionWindowsOk returns a tuple with the AlertSuppressionWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertSuppressionWindows) GetAlertSuppressionWindowsOk() ([]AlertSuppressionWindow, bool) {
	if o == nil || utils.IsNil(o.AlertSuppressionWindows) {
		return nil, false
	}
	return o.AlertSuppressionWindows, true
}

// HasAlertSuppressionWindows returns a boolean if a field has been set.
func (o *AlertSuppressionWindows) HasAlertSuppressionWindows() bool {
	if o != nil && !utils.IsNil(o.AlertSuppressionWindows) {
		return true
	}

	return false
}

// SetAlertSuppressionWindows gets a reference to the given []AlertSuppressionWindow and assigns it to the AlertSuppressionWindows field.
func (o *AlertSuppressionWindows) SetAlertSuppressionWindows(v []AlertSuppressionWindow) {
	o.AlertSuppressionWindows = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AlertSuppressionWindows) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertSuppressionWindows) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AlertSuppressionWindows) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *AlertSuppressionWindows) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o AlertSuppressionWindows) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertSuppressionWindows) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AlertSuppressionWindows) {
		toSerialize["alertSuppressionWindows"] = o.AlertSuppressionWindows
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableAlertSuppressionWindows struct {
	value *AlertSuppressionWindows
	isSet bool
}

func (v NullableAlertSuppressionWindows) Get() *AlertSuppressionWindows {
	return v.value
}

func (v *NullableAlertSuppressionWindows) Set(val *AlertSuppressionWindows) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertSuppressionWindows) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertSuppressionWindows) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertSuppressionWindows(val *AlertSuppressionWindows) *NullableAlertSuppressionWindows {
	return &NullableAlertSuppressionWindows{value: val, isSet: true}
}

func (v NullableAlertSuppressionWindows) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertSuppressionWindows) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


