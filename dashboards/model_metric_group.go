/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
	"fmt"
)

// MetricGroup Metric group of widget as it appears in the UI. Note: may not be required in some cases.
type MetricGroup string

// List of MetricGroup
const (
	METRICGROUP_AGENT_TO_AGENT MetricGroup = "AGENT_TO_AGENT"
	METRICGROUP_AGENT_TO_SERVER MetricGroup = "AGENT_TO_SERVER"
	METRICGROUP_HTTP_SERVER MetricGroup = "HTTP_SERVER"
	METRICGROUP_FTP_SERVER MetricGroup = "FTP_SERVER"
	METRICGROUP_PAGE_LOAD MetricGroup = "PAGE_LOAD"
	METRICGROUP_TRANSACTIONS_CLASSIC MetricGroup = "TRANSACTIONS_CLASSIC"
	METRICGROUP_TRANSACTIONS MetricGroup = "TRANSACTIONS"
	METRICGROUP_API MetricGroup = "API"
	METRICGROUP_ENDPOINT_BROWSER_SESSION_NETWORK MetricGroup = "ENDPOINT_BROWSER_SESSION_NETWORK"
	METRICGROUP_ENDPOINT_BROWSER_SESSION_SYSTEM MetricGroup = "ENDPOINT_BROWSER_SESSION_SYSTEM"
	METRICGROUP_ENDPOINT_BROWSER_SESSION_VISITED_PAGES MetricGroup = "ENDPOINT_BROWSER_SESSION_VISITED_PAGES"
	METRICGROUP_ENDPOINT_SCHEDULED_TEST_HTTP_SERVER MetricGroup = "ENDPOINT_SCHEDULED_TEST_HTTP_SERVER"
	METRICGROUP_ENDPOINT_SCHEDULED_TEST_NETWORK MetricGroup = "ENDPOINT_SCHEDULED_TEST_NETWORK"
	METRICGROUP_ENDPOINT_SCHEDULED_TEST_SYSTEM MetricGroup = "ENDPOINT_SCHEDULED_TEST_SYSTEM"
	METRICGROUP_ENDPOINT_AST_TEST_NETWORK MetricGroup = "ENDPOINT_AST_TEST_NETWORK"
	METRICGROUP_ENDPOINT_AST_TEST_SYSTEM MetricGroup = "ENDPOINT_AST_TEST_SYSTEM"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_GATEWAY MetricGroup = "ENDPOINT_LOCAL_NETWORK_GATEWAY"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_AGENTS MetricGroup = "ENDPOINT_LOCAL_NETWORK_AGENTS"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_DNS MetricGroup = "ENDPOINT_LOCAL_NETWORK_DNS"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_NETWORK_ACCESS MetricGroup = "ENDPOINT_LOCAL_NETWORK_NETWORK_ACCESS"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_PROXY MetricGroup = "ENDPOINT_LOCAL_NETWORK_PROXY"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_SYSTEM MetricGroup = "ENDPOINT_LOCAL_NETWORK_SYSTEM"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_VPN MetricGroup = "ENDPOINT_LOCAL_NETWORK_VPN"
	METRICGROUP_ENDPOINT_LOCAL_NETWORK_WIRELESS MetricGroup = "ENDPOINT_LOCAL_NETWORK_WIRELESS"
	METRICGROUP_BGP MetricGroup = "BGP"
	METRICGROUP_DEVICE MetricGroup = "DEVICE"
	METRICGROUP_VOIP MetricGroup = "VOIP"
	METRICGROUP_SIP MetricGroup = "SIP"
	METRICGROUP_ALERTS MetricGroup = "ALERTS"
	METRICGROUP_DNS MetricGroup = "DNS"
	METRICGROUP_DOMAIN_TRACE MetricGroup = "DOMAIN_TRACE"
	METRICGROUP_DNSSEC MetricGroup = "DNSSEC"
	METRICGROUP_DNSP MetricGroup = "DNSP"
	METRICGROUP_NETWORK_OUTAGES MetricGroup = "NETWORK_OUTAGES"
	METRICGROUP_APPLICATION_OUTAGES MetricGroup = "APPLICATION_OUTAGES"
	METRICGROUP_APPDYNAMICS_SERVICE_HEALTH MetricGroup = "APPDYNAMICS_SERVICE_HEALTH"
	METRICGROUP_CLOUD_NATIVE_MONITORING_TRAFFIC_FLOW MetricGroup = "CLOUD_NATIVE_MONITORING-TRAFFIC_FLOW"
	METRICGROUP_CLOUD_NATIVE_MONITORING_EVENTS MetricGroup = "CLOUD_NATIVE_MONITORING-EVENTS"
)

// All allowed values of MetricGroup enum
var AllowedMetricGroupEnumValues = []MetricGroup{
	"AGENT_TO_AGENT",
	"AGENT_TO_SERVER",
	"HTTP_SERVER",
	"FTP_SERVER",
	"PAGE_LOAD",
	"TRANSACTIONS_CLASSIC",
	"TRANSACTIONS",
	"API",
	"ENDPOINT_BROWSER_SESSION_NETWORK",
	"ENDPOINT_BROWSER_SESSION_SYSTEM",
	"ENDPOINT_BROWSER_SESSION_VISITED_PAGES",
	"ENDPOINT_SCHEDULED_TEST_HTTP_SERVER",
	"ENDPOINT_SCHEDULED_TEST_NETWORK",
	"ENDPOINT_SCHEDULED_TEST_SYSTEM",
	"ENDPOINT_AST_TEST_NETWORK",
	"ENDPOINT_AST_TEST_SYSTEM",
	"ENDPOINT_LOCAL_NETWORK_GATEWAY",
	"ENDPOINT_LOCAL_NETWORK_AGENTS",
	"ENDPOINT_LOCAL_NETWORK_DNS",
	"ENDPOINT_LOCAL_NETWORK_NETWORK_ACCESS",
	"ENDPOINT_LOCAL_NETWORK_PROXY",
	"ENDPOINT_LOCAL_NETWORK_SYSTEM",
	"ENDPOINT_LOCAL_NETWORK_VPN",
	"ENDPOINT_LOCAL_NETWORK_WIRELESS",
	"BGP",
	"DEVICE",
	"VOIP",
	"SIP",
	"ALERTS",
	"DNS",
	"DOMAIN_TRACE",
	"DNSSEC",
	"DNSP",
	"NETWORK_OUTAGES",
	"APPLICATION_OUTAGES",
	"APPDYNAMICS_SERVICE_HEALTH",
	"CLOUD_NATIVE_MONITORING-TRAFFIC_FLOW",
	"CLOUD_NATIVE_MONITORING-EVENTS",
}

func (v *MetricGroup) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricGroup(value)
	for _, existing := range AllowedMetricGroupEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricGroup", value)
}

// NewMetricGroupFromValue returns a pointer to a valid MetricGroup
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricGroupFromValue(v string) (*MetricGroup, error) {
	ev := MetricGroup(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MetricGroup: valid values are %v", v, AllowedMetricGroupEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricGroup) IsValid() bool {
	for _, existing := range AllowedMetricGroupEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MetricGroup value
func (v MetricGroup) Ptr() *MetricGroup {
	return &v
}

type NullableMetricGroup struct {
	value *MetricGroup
	isSet bool
}

func (v NullableMetricGroup) Get() *MetricGroup {
	return v.value
}

func (v *NullableMetricGroup) Set(val *MetricGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricGroup(val *MetricGroup) *NullableMetricGroup {
	return &NullableMetricGroup{value: val, isSet: true}
}

func (v NullableMetricGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

