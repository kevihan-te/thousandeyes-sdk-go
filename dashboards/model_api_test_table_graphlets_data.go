/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiTestTableGraphletsData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiTestTableGraphletsData{}

// ApiTestTableGraphletsData Information displayed within a mini-graph associated with a specific test in a table.
type ApiTestTableGraphletsData struct {
	// Name of the metric.
	Metric *string `json:"metric,omitempty"`
	// Identifier of the test.
	TestId *string `json:"testId,omitempty"`
	Points []ApiGraphletPoint `json:"points,omitempty"`
}

// NewApiTestTableGraphletsData instantiates a new ApiTestTableGraphletsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTestTableGraphletsData() *ApiTestTableGraphletsData {
	this := ApiTestTableGraphletsData{}
	return &this
}

// NewApiTestTableGraphletsDataWithDefaults instantiates a new ApiTestTableGraphletsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTestTableGraphletsDataWithDefaults() *ApiTestTableGraphletsData {
	this := ApiTestTableGraphletsData{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *ApiTestTableGraphletsData) GetMetric() string {
	if o == nil || utils.IsNil(o.Metric) {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestTableGraphletsData) GetMetricOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *ApiTestTableGraphletsData) HasMetric() bool {
	if o != nil && !utils.IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *ApiTestTableGraphletsData) SetMetric(v string) {
	o.Metric = &v
}

// GetTestId returns the TestId field value if set, zero value otherwise.
func (o *ApiTestTableGraphletsData) GetTestId() string {
	if o == nil || utils.IsNil(o.TestId) {
		var ret string
		return ret
	}
	return *o.TestId
}

// GetTestIdOk returns a tuple with the TestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestTableGraphletsData) GetTestIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TestId) {
		return nil, false
	}
	return o.TestId, true
}

// HasTestId returns a boolean if a field has been set.
func (o *ApiTestTableGraphletsData) HasTestId() bool {
	if o != nil && !utils.IsNil(o.TestId) {
		return true
	}

	return false
}

// SetTestId gets a reference to the given string and assigns it to the TestId field.
func (o *ApiTestTableGraphletsData) SetTestId(v string) {
	o.TestId = &v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *ApiTestTableGraphletsData) GetPoints() []ApiGraphletPoint {
	if o == nil || utils.IsNil(o.Points) {
		var ret []ApiGraphletPoint
		return ret
	}
	return o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestTableGraphletsData) GetPointsOk() ([]ApiGraphletPoint, bool) {
	if o == nil || utils.IsNil(o.Points) {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *ApiTestTableGraphletsData) HasPoints() bool {
	if o != nil && !utils.IsNil(o.Points) {
		return true
	}

	return false
}

// SetPoints gets a reference to the given []ApiGraphletPoint and assigns it to the Points field.
func (o *ApiTestTableGraphletsData) SetPoints(v []ApiGraphletPoint) {
	o.Points = v
}

func (o ApiTestTableGraphletsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTestTableGraphletsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !utils.IsNil(o.TestId) {
		toSerialize["testId"] = o.TestId
	}
	if !utils.IsNil(o.Points) {
		toSerialize["points"] = o.Points
	}
	return toSerialize, nil
}

type NullableApiTestTableGraphletsData struct {
	value *ApiTestTableGraphletsData
	isSet bool
}

func (v NullableApiTestTableGraphletsData) Get() *ApiTestTableGraphletsData {
	return v.value
}

func (v *NullableApiTestTableGraphletsData) Set(val *ApiTestTableGraphletsData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTestTableGraphletsData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTestTableGraphletsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTestTableGraphletsData(val *ApiTestTableGraphletsData) *NullableApiTestTableGraphletsData {
	return &NullableApiTestTableGraphletsData{value: val, isSet: true}
}

func (v NullableApiTestTableGraphletsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTestTableGraphletsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


