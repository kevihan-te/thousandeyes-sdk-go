/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
	"fmt"
)

// ApiWidgetSortDirection Specifies the order in which cards are sorted.
type ApiWidgetSortDirection string

// List of ApiWidgetSortDirection
const (
	APIWIDGETSORTDIRECTION_ASCENDING ApiWidgetSortDirection = "ascending"
	APIWIDGETSORTDIRECTION_DESCENDING ApiWidgetSortDirection = "descending"
)

// All allowed values of ApiWidgetSortDirection enum
var AllowedApiWidgetSortDirectionEnumValues = []ApiWidgetSortDirection{
	"ascending",
	"descending",
}

func (v *ApiWidgetSortDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiWidgetSortDirection(value)
	for _, existing := range AllowedApiWidgetSortDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiWidgetSortDirection", value)
}

// NewApiWidgetSortDirectionFromValue returns a pointer to a valid ApiWidgetSortDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiWidgetSortDirectionFromValue(v string) (*ApiWidgetSortDirection, error) {
	ev := ApiWidgetSortDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiWidgetSortDirection: valid values are %v", v, AllowedApiWidgetSortDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiWidgetSortDirection) IsValid() bool {
	for _, existing := range AllowedApiWidgetSortDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiWidgetSortDirection value
func (v ApiWidgetSortDirection) Ptr() *ApiWidgetSortDirection {
	return &v
}

type NullableApiWidgetSortDirection struct {
	value *ApiWidgetSortDirection
	isSet bool
}

func (v NullableApiWidgetSortDirection) Get() *ApiWidgetSortDirection {
	return v.value
}

func (v *NullableApiWidgetSortDirection) Set(val *ApiWidgetSortDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWidgetSortDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWidgetSortDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWidgetSortDirection(val *ApiWidgetSortDirection) *NullableApiWidgetSortDirection {
	return &NullableApiWidgetSortDirection{value: val, isSet: true}
}

func (v NullableApiWidgetSortDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWidgetSortDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

