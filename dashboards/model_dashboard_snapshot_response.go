/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the DashboardSnapshotResponse type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DashboardSnapshotResponse{}

// DashboardSnapshotResponse struct for DashboardSnapshotResponse
type DashboardSnapshotResponse struct {
	// Identifier of the dashboard snapshot.
	SnapshotId *string `json:"snapshotId,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

// NewDashboardSnapshotResponse instantiates a new DashboardSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardSnapshotResponse() *DashboardSnapshotResponse {
	this := DashboardSnapshotResponse{}
	return &this
}

// NewDashboardSnapshotResponseWithDefaults instantiates a new DashboardSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardSnapshotResponseWithDefaults() *DashboardSnapshotResponse {
	this := DashboardSnapshotResponse{}
	return &this
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *DashboardSnapshotResponse) GetSnapshotId() string {
	if o == nil || utils.IsNil(o.SnapshotId) {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardSnapshotResponse) GetSnapshotIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SnapshotId) {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *DashboardSnapshotResponse) HasSnapshotId() bool {
	if o != nil && !utils.IsNil(o.SnapshotId) {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *DashboardSnapshotResponse) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *DashboardSnapshotResponse) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardSnapshotResponse) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *DashboardSnapshotResponse) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *DashboardSnapshotResponse) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o DashboardSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardSnapshotResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.SnapshotId) {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableDashboardSnapshotResponse struct {
	value *DashboardSnapshotResponse
	isSet bool
}

func (v NullableDashboardSnapshotResponse) Get() *DashboardSnapshotResponse {
	return v.value
}

func (v *NullableDashboardSnapshotResponse) Set(val *DashboardSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardSnapshotResponse(val *DashboardSnapshotResponse) *NullableDashboardSnapshotResponse {
	return &NullableDashboardSnapshotResponse{value: val, isSet: true}
}

func (v NullableDashboardSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


