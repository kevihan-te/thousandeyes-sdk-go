/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiDataPointGroup type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiDataPointGroup{}

// ApiDataPointGroup Group of data points.
type ApiDataPointGroup struct {
	// Defines the criterion used to aggregate data points under specific group values.
	GroupProperty *string `json:"groupProperty,omitempty"`
	// The value of a group.
	GroupValue *string `json:"groupValue,omitempty"`
}

// NewApiDataPointGroup instantiates a new ApiDataPointGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiDataPointGroup() *ApiDataPointGroup {
	this := ApiDataPointGroup{}
	return &this
}

// NewApiDataPointGroupWithDefaults instantiates a new ApiDataPointGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiDataPointGroupWithDefaults() *ApiDataPointGroup {
	this := ApiDataPointGroup{}
	return &this
}

// GetGroupProperty returns the GroupProperty field value if set, zero value otherwise.
func (o *ApiDataPointGroup) GetGroupProperty() string {
	if o == nil || utils.IsNil(o.GroupProperty) {
		var ret string
		return ret
	}
	return *o.GroupProperty
}

// GetGroupPropertyOk returns a tuple with the GroupProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDataPointGroup) GetGroupPropertyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.GroupProperty) {
		return nil, false
	}
	return o.GroupProperty, true
}

// HasGroupProperty returns a boolean if a field has been set.
func (o *ApiDataPointGroup) HasGroupProperty() bool {
	if o != nil && !utils.IsNil(o.GroupProperty) {
		return true
	}

	return false
}

// SetGroupProperty gets a reference to the given string and assigns it to the GroupProperty field.
func (o *ApiDataPointGroup) SetGroupProperty(v string) {
	o.GroupProperty = &v
}

// GetGroupValue returns the GroupValue field value if set, zero value otherwise.
func (o *ApiDataPointGroup) GetGroupValue() string {
	if o == nil || utils.IsNil(o.GroupValue) {
		var ret string
		return ret
	}
	return *o.GroupValue
}

// GetGroupValueOk returns a tuple with the GroupValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDataPointGroup) GetGroupValueOk() (*string, bool) {
	if o == nil || utils.IsNil(o.GroupValue) {
		return nil, false
	}
	return o.GroupValue, true
}

// HasGroupValue returns a boolean if a field has been set.
func (o *ApiDataPointGroup) HasGroupValue() bool {
	if o != nil && !utils.IsNil(o.GroupValue) {
		return true
	}

	return false
}

// SetGroupValue gets a reference to the given string and assigns it to the GroupValue field.
func (o *ApiDataPointGroup) SetGroupValue(v string) {
	o.GroupValue = &v
}

func (o ApiDataPointGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiDataPointGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.GroupProperty) {
		toSerialize["groupProperty"] = o.GroupProperty
	}
	if !utils.IsNil(o.GroupValue) {
		toSerialize["groupValue"] = o.GroupValue
	}
	return toSerialize, nil
}

type NullableApiDataPointGroup struct {
	value *ApiDataPointGroup
	isSet bool
}

func (v NullableApiDataPointGroup) Get() *ApiDataPointGroup {
	return v.value
}

func (v *NullableApiDataPointGroup) Set(val *ApiDataPointGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableApiDataPointGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableApiDataPointGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiDataPointGroup(val *ApiDataPointGroup) *NullableApiDataPointGroup {
	return &NullableApiDataPointGroup{value: val, isSet: true}
}

func (v NullableApiDataPointGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiDataPointGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


