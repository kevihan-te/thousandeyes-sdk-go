/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiWidgetFilterApiTestTableFilterKey type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiWidgetFilterApiTestTableFilterKey{}

// ApiWidgetFilterApiTestTableFilterKey struct for ApiWidgetFilterApiTestTableFilterKey
type ApiWidgetFilterApiTestTableFilterKey struct {
	Filters []ApiMultiSearchFilterApiTestTableFilterKey `json:"filters,omitempty"`
	Type *TestTableFilterType `json:"type,omitempty"`
}

// NewApiWidgetFilterApiTestTableFilterKey instantiates a new ApiWidgetFilterApiTestTableFilterKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiWidgetFilterApiTestTableFilterKey() *ApiWidgetFilterApiTestTableFilterKey {
	this := ApiWidgetFilterApiTestTableFilterKey{}
	return &this
}

// NewApiWidgetFilterApiTestTableFilterKeyWithDefaults instantiates a new ApiWidgetFilterApiTestTableFilterKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWidgetFilterApiTestTableFilterKeyWithDefaults() *ApiWidgetFilterApiTestTableFilterKey {
	this := ApiWidgetFilterApiTestTableFilterKey{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ApiWidgetFilterApiTestTableFilterKey) GetFilters() []ApiMultiSearchFilterApiTestTableFilterKey {
	if o == nil || utils.IsNil(o.Filters) {
		var ret []ApiMultiSearchFilterApiTestTableFilterKey
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetFilterApiTestTableFilterKey) GetFiltersOk() ([]ApiMultiSearchFilterApiTestTableFilterKey, bool) {
	if o == nil || utils.IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ApiWidgetFilterApiTestTableFilterKey) HasFilters() bool {
	if o != nil && !utils.IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []ApiMultiSearchFilterApiTestTableFilterKey and assigns it to the Filters field.
func (o *ApiWidgetFilterApiTestTableFilterKey) SetFilters(v []ApiMultiSearchFilterApiTestTableFilterKey) {
	o.Filters = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiWidgetFilterApiTestTableFilterKey) GetType() TestTableFilterType {
	if o == nil || utils.IsNil(o.Type) {
		var ret TestTableFilterType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetFilterApiTestTableFilterKey) GetTypeOk() (*TestTableFilterType, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiWidgetFilterApiTestTableFilterKey) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given TestTableFilterType and assigns it to the Type field.
func (o *ApiWidgetFilterApiTestTableFilterKey) SetType(v TestTableFilterType) {
	o.Type = &v
}

func (o ApiWidgetFilterApiTestTableFilterKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiWidgetFilterApiTestTableFilterKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !utils.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableApiWidgetFilterApiTestTableFilterKey struct {
	value *ApiWidgetFilterApiTestTableFilterKey
	isSet bool
}

func (v NullableApiWidgetFilterApiTestTableFilterKey) Get() *ApiWidgetFilterApiTestTableFilterKey {
	return v.value
}

func (v *NullableApiWidgetFilterApiTestTableFilterKey) Set(val *ApiWidgetFilterApiTestTableFilterKey) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWidgetFilterApiTestTableFilterKey) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWidgetFilterApiTestTableFilterKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWidgetFilterApiTestTableFilterKey(val *ApiWidgetFilterApiTestTableFilterKey) *NullableApiWidgetFilterApiTestTableFilterKey {
	return &NullableApiWidgetFilterApiTestTableFilterKey{value: val, isSet: true}
}

func (v NullableApiWidgetFilterApiTestTableFilterKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWidgetFilterApiTestTableFilterKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


