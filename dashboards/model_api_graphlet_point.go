/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiGraphletPoint type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiGraphletPoint{}

// ApiGraphletPoint A data point on a graphlet.
type ApiGraphletPoint struct {
	// Timestamp of the data point.
	X *int64 `json:"x,omitempty"`
	// Value of the data point.
	Y *float64 `json:"y,omitempty"`
}

// NewApiGraphletPoint instantiates a new ApiGraphletPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGraphletPoint() *ApiGraphletPoint {
	this := ApiGraphletPoint{}
	return &this
}

// NewApiGraphletPointWithDefaults instantiates a new ApiGraphletPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGraphletPointWithDefaults() *ApiGraphletPoint {
	this := ApiGraphletPoint{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise.
func (o *ApiGraphletPoint) GetX() int64 {
	if o == nil || utils.IsNil(o.X) {
		var ret int64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGraphletPoint) GetXOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *ApiGraphletPoint) HasX() bool {
	if o != nil && !utils.IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given int64 and assigns it to the X field.
func (o *ApiGraphletPoint) SetX(v int64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *ApiGraphletPoint) GetY() float64 {
	if o == nil || utils.IsNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGraphletPoint) GetYOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *ApiGraphletPoint) HasY() bool {
	if o != nil && !utils.IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *ApiGraphletPoint) SetY(v float64) {
	o.Y = &v
}

func (o ApiGraphletPoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGraphletPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !utils.IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}
	return toSerialize, nil
}

type NullableApiGraphletPoint struct {
	value *ApiGraphletPoint
	isSet bool
}

func (v NullableApiGraphletPoint) Get() *ApiGraphletPoint {
	return v.value
}

func (v *NullableApiGraphletPoint) Set(val *ApiGraphletPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGraphletPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGraphletPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGraphletPoint(val *ApiGraphletPoint) *NullableApiGraphletPoint {
	return &NullableApiGraphletPoint{value: val, isSet: true}
}

func (v NullableApiGraphletPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGraphletPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


