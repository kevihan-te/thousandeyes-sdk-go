/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the ApiReportSnapshotTimeSpan type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiReportSnapshotTimeSpan{}

// ApiReportSnapshotTimeSpan Time span of the dashboard snapshot.
type ApiReportSnapshotTimeSpan struct {
	// UTC start date of dashboard snapshot.
	// Deprecated
	StartDate *string `json:"startDate,omitempty"`
	// UTC start date of dashboard snapshot (ISO date-time format).
	Start *time.Time `json:"start,omitempty"`
	// Duration of dashboard snapshot in seconds.
	Duration *int64 `json:"duration,omitempty"`
}

// NewApiReportSnapshotTimeSpan instantiates a new ApiReportSnapshotTimeSpan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiReportSnapshotTimeSpan() *ApiReportSnapshotTimeSpan {
	this := ApiReportSnapshotTimeSpan{}
	return &this
}

// NewApiReportSnapshotTimeSpanWithDefaults instantiates a new ApiReportSnapshotTimeSpan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiReportSnapshotTimeSpanWithDefaults() *ApiReportSnapshotTimeSpan {
	this := ApiReportSnapshotTimeSpan{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
// Deprecated
func (o *ApiReportSnapshotTimeSpan) GetStartDate() string {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ApiReportSnapshotTimeSpan) GetStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ApiReportSnapshotTimeSpan) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
// Deprecated
func (o *ApiReportSnapshotTimeSpan) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ApiReportSnapshotTimeSpan) GetStart() time.Time {
	if o == nil || utils.IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReportSnapshotTimeSpan) GetStartOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ApiReportSnapshotTimeSpan) HasStart() bool {
	if o != nil && !utils.IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *ApiReportSnapshotTimeSpan) SetStart(v time.Time) {
	o.Start = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ApiReportSnapshotTimeSpan) GetDuration() int64 {
	if o == nil || utils.IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReportSnapshotTimeSpan) GetDurationOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ApiReportSnapshotTimeSpan) HasDuration() bool {
	if o != nil && !utils.IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *ApiReportSnapshotTimeSpan) SetDuration(v int64) {
	o.Duration = &v
}

func (o ApiReportSnapshotTimeSpan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiReportSnapshotTimeSpan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !utils.IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !utils.IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	return toSerialize, nil
}

type NullableApiReportSnapshotTimeSpan struct {
	value *ApiReportSnapshotTimeSpan
	isSet bool
}

func (v NullableApiReportSnapshotTimeSpan) Get() *ApiReportSnapshotTimeSpan {
	return v.value
}

func (v *NullableApiReportSnapshotTimeSpan) Set(val *ApiReportSnapshotTimeSpan) {
	v.value = val
	v.isSet = true
}

func (v NullableApiReportSnapshotTimeSpan) IsSet() bool {
	return v.isSet
}

func (v *NullableApiReportSnapshotTimeSpan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiReportSnapshotTimeSpan(val *ApiReportSnapshotTimeSpan) *NullableApiReportSnapshotTimeSpan {
	return &NullableApiReportSnapshotTimeSpan{value: val, isSet: true}
}

func (v NullableApiReportSnapshotTimeSpan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiReportSnapshotTimeSpan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


