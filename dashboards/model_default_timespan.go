/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the DefaultTimespan type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DefaultTimespan{}

// DefaultTimespan struct for DefaultTimespan
type DefaultTimespan struct {
	// Relative timespan in seconds.
	TimespanDuration *int64 `json:"timespanDuration,omitempty"`
	// UTC start date of the timespan range.
	TimespanStart *string `json:"timespanStart,omitempty"`
	// UTC end date of the timespan range.
	TimespanEnd *string `json:"timespanEnd,omitempty"`
	// Relative timespan in seconds.
	Duration *int64 `json:"duration,omitempty"`
	// UTC start date of the timespan range (ISO date-time format).
	Start *time.Time `json:"start,omitempty"`
	// UTC end date of the timespan range (ISO date-time format).
	End *time.Time `json:"end,omitempty"`
}

// NewDefaultTimespan instantiates a new DefaultTimespan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultTimespan() *DefaultTimespan {
	this := DefaultTimespan{}
	return &this
}

// NewDefaultTimespanWithDefaults instantiates a new DefaultTimespan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultTimespanWithDefaults() *DefaultTimespan {
	this := DefaultTimespan{}
	return &this
}

// GetTimespanDuration returns the TimespanDuration field value if set, zero value otherwise.
func (o *DefaultTimespan) GetTimespanDuration() int64 {
	if o == nil || utils.IsNil(o.TimespanDuration) {
		var ret int64
		return ret
	}
	return *o.TimespanDuration
}

// GetTimespanDurationOk returns a tuple with the TimespanDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultTimespan) GetTimespanDurationOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TimespanDuration) {
		return nil, false
	}
	return o.TimespanDuration, true
}

// HasTimespanDuration returns a boolean if a field has been set.
func (o *DefaultTimespan) HasTimespanDuration() bool {
	if o != nil && !utils.IsNil(o.TimespanDuration) {
		return true
	}

	return false
}

// SetTimespanDuration gets a reference to the given int64 and assigns it to the TimespanDuration field.
func (o *DefaultTimespan) SetTimespanDuration(v int64) {
	o.TimespanDuration = &v
}

// GetTimespanStart returns the TimespanStart field value if set, zero value otherwise.
func (o *DefaultTimespan) GetTimespanStart() string {
	if o == nil || utils.IsNil(o.TimespanStart) {
		var ret string
		return ret
	}
	return *o.TimespanStart
}

// GetTimespanStartOk returns a tuple with the TimespanStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultTimespan) GetTimespanStartOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TimespanStart) {
		return nil, false
	}
	return o.TimespanStart, true
}

// HasTimespanStart returns a boolean if a field has been set.
func (o *DefaultTimespan) HasTimespanStart() bool {
	if o != nil && !utils.IsNil(o.TimespanStart) {
		return true
	}

	return false
}

// SetTimespanStart gets a reference to the given string and assigns it to the TimespanStart field.
func (o *DefaultTimespan) SetTimespanStart(v string) {
	o.TimespanStart = &v
}

// GetTimespanEnd returns the TimespanEnd field value if set, zero value otherwise.
func (o *DefaultTimespan) GetTimespanEnd() string {
	if o == nil || utils.IsNil(o.TimespanEnd) {
		var ret string
		return ret
	}
	return *o.TimespanEnd
}

// GetTimespanEndOk returns a tuple with the TimespanEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultTimespan) GetTimespanEndOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TimespanEnd) {
		return nil, false
	}
	return o.TimespanEnd, true
}

// HasTimespanEnd returns a boolean if a field has been set.
func (o *DefaultTimespan) HasTimespanEnd() bool {
	if o != nil && !utils.IsNil(o.TimespanEnd) {
		return true
	}

	return false
}

// SetTimespanEnd gets a reference to the given string and assigns it to the TimespanEnd field.
func (o *DefaultTimespan) SetTimespanEnd(v string) {
	o.TimespanEnd = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *DefaultTimespan) GetDuration() int64 {
	if o == nil || utils.IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultTimespan) GetDurationOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *DefaultTimespan) HasDuration() bool {
	if o != nil && !utils.IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *DefaultTimespan) SetDuration(v int64) {
	o.Duration = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *DefaultTimespan) GetStart() time.Time {
	if o == nil || utils.IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultTimespan) GetStartOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *DefaultTimespan) HasStart() bool {
	if o != nil && !utils.IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *DefaultTimespan) SetStart(v time.Time) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *DefaultTimespan) GetEnd() time.Time {
	if o == nil || utils.IsNil(o.End) {
		var ret time.Time
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultTimespan) GetEndOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *DefaultTimespan) HasEnd() bool {
	if o != nil && !utils.IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given time.Time and assigns it to the End field.
func (o *DefaultTimespan) SetEnd(v time.Time) {
	o.End = &v
}

func (o DefaultTimespan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultTimespan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.TimespanDuration) {
		toSerialize["timespanDuration"] = o.TimespanDuration
	}
	if !utils.IsNil(o.TimespanStart) {
		toSerialize["timespanStart"] = o.TimespanStart
	}
	if !utils.IsNil(o.TimespanEnd) {
		toSerialize["timespanEnd"] = o.TimespanEnd
	}
	if !utils.IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !utils.IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !utils.IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	return toSerialize, nil
}

type NullableDefaultTimespan struct {
	value *DefaultTimespan
	isSet bool
}

func (v NullableDefaultTimespan) Get() *DefaultTimespan {
	return v.value
}

func (v *NullableDefaultTimespan) Set(val *DefaultTimespan) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultTimespan) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultTimespan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultTimespan(val *DefaultTimespan) *NullableDefaultTimespan {
	return &NullableDefaultTimespan{value: val, isSet: true}
}

func (v NullableDefaultTimespan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultTimespan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


