/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiWidgetsDataV2 type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiWidgetsDataV2{}

// ApiWidgetsDataV2 Data of a widget.
type ApiWidgetsDataV2 struct {
	Cards []ApiNumbersCardData `json:"cards,omitempty"`
	Columns []ApiMultiMetricColumnData `json:"columns,omitempty"`
	Points []ApiWidgetDataPoint `json:"points,omitempty"`
	Tests []ApiTestTableData `json:"tests,omitempty"`
	// Epoch time (seconds) indicating the start time of the round.
	StartRound *int64 `json:"startRound,omitempty"`
	AlertSuppressionWindows []ApiDashboardAsw `json:"alertSuppressionWindows,omitempty"`
	// Total number of active alerts within configured timespan.
	TotalAlerts *int64 `json:"totalAlerts,omitempty"`
	// Total number of currently active alerts.
	ActiveAlerts *int64 `json:"activeAlerts,omitempty"`
	Alerts []ApiAlertListAlert `json:"alerts,omitempty"`
	Summary *ApiAgentStatusSummary `json:"summary,omitempty"`
	Agents []ApiAgentStatusAgent `json:"agents,omitempty"`
	// Message for not fully configured card or no data.
	Status *string `json:"status,omitempty"`
}

// NewApiWidgetsDataV2 instantiates a new ApiWidgetsDataV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiWidgetsDataV2() *ApiWidgetsDataV2 {
	this := ApiWidgetsDataV2{}
	return &this
}

// NewApiWidgetsDataV2WithDefaults instantiates a new ApiWidgetsDataV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWidgetsDataV2WithDefaults() *ApiWidgetsDataV2 {
	this := ApiWidgetsDataV2{}
	return &this
}

// GetCards returns the Cards field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetCards() []ApiNumbersCardData {
	if o == nil || utils.IsNil(o.Cards) {
		var ret []ApiNumbersCardData
		return ret
	}
	return o.Cards
}

// GetCardsOk returns a tuple with the Cards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetCardsOk() ([]ApiNumbersCardData, bool) {
	if o == nil || utils.IsNil(o.Cards) {
		return nil, false
	}
	return o.Cards, true
}

// HasCards returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasCards() bool {
	if o != nil && !utils.IsNil(o.Cards) {
		return true
	}

	return false
}

// SetCards gets a reference to the given []ApiNumbersCardData and assigns it to the Cards field.
func (o *ApiWidgetsDataV2) SetCards(v []ApiNumbersCardData) {
	o.Cards = v
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetColumns() []ApiMultiMetricColumnData {
	if o == nil || utils.IsNil(o.Columns) {
		var ret []ApiMultiMetricColumnData
		return ret
	}
	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetColumnsOk() ([]ApiMultiMetricColumnData, bool) {
	if o == nil || utils.IsNil(o.Columns) {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasColumns() bool {
	if o != nil && !utils.IsNil(o.Columns) {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []ApiMultiMetricColumnData and assigns it to the Columns field.
func (o *ApiWidgetsDataV2) SetColumns(v []ApiMultiMetricColumnData) {
	o.Columns = v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetPoints() []ApiWidgetDataPoint {
	if o == nil || utils.IsNil(o.Points) {
		var ret []ApiWidgetDataPoint
		return ret
	}
	return o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetPointsOk() ([]ApiWidgetDataPoint, bool) {
	if o == nil || utils.IsNil(o.Points) {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasPoints() bool {
	if o != nil && !utils.IsNil(o.Points) {
		return true
	}

	return false
}

// SetPoints gets a reference to the given []ApiWidgetDataPoint and assigns it to the Points field.
func (o *ApiWidgetsDataV2) SetPoints(v []ApiWidgetDataPoint) {
	o.Points = v
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetTests() []ApiTestTableData {
	if o == nil || utils.IsNil(o.Tests) {
		var ret []ApiTestTableData
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetTestsOk() ([]ApiTestTableData, bool) {
	if o == nil || utils.IsNil(o.Tests) {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasTests() bool {
	if o != nil && !utils.IsNil(o.Tests) {
		return true
	}

	return false
}

// SetTests gets a reference to the given []ApiTestTableData and assigns it to the Tests field.
func (o *ApiWidgetsDataV2) SetTests(v []ApiTestTableData) {
	o.Tests = v
}

// GetStartRound returns the StartRound field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetStartRound() int64 {
	if o == nil || utils.IsNil(o.StartRound) {
		var ret int64
		return ret
	}
	return *o.StartRound
}

// GetStartRoundOk returns a tuple with the StartRound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetStartRoundOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.StartRound) {
		return nil, false
	}
	return o.StartRound, true
}

// HasStartRound returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasStartRound() bool {
	if o != nil && !utils.IsNil(o.StartRound) {
		return true
	}

	return false
}

// SetStartRound gets a reference to the given int64 and assigns it to the StartRound field.
func (o *ApiWidgetsDataV2) SetStartRound(v int64) {
	o.StartRound = &v
}

// GetAlertSuppressionWindows returns the AlertSuppressionWindows field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetAlertSuppressionWindows() []ApiDashboardAsw {
	if o == nil || utils.IsNil(o.AlertSuppressionWindows) {
		var ret []ApiDashboardAsw
		return ret
	}
	return o.AlertSuppressionWindows
}

// GetAlertSuppressionWindowsOk returns a tuple with the AlertSuppressionWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetAlertSuppressionWindowsOk() ([]ApiDashboardAsw, bool) {
	if o == nil || utils.IsNil(o.AlertSuppressionWindows) {
		return nil, false
	}
	return o.AlertSuppressionWindows, true
}

// HasAlertSuppressionWindows returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasAlertSuppressionWindows() bool {
	if o != nil && !utils.IsNil(o.AlertSuppressionWindows) {
		return true
	}

	return false
}

// SetAlertSuppressionWindows gets a reference to the given []ApiDashboardAsw and assigns it to the AlertSuppressionWindows field.
func (o *ApiWidgetsDataV2) SetAlertSuppressionWindows(v []ApiDashboardAsw) {
	o.AlertSuppressionWindows = v
}

// GetTotalAlerts returns the TotalAlerts field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetTotalAlerts() int64 {
	if o == nil || utils.IsNil(o.TotalAlerts) {
		var ret int64
		return ret
	}
	return *o.TotalAlerts
}

// GetTotalAlertsOk returns a tuple with the TotalAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetTotalAlertsOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalAlerts) {
		return nil, false
	}
	return o.TotalAlerts, true
}

// HasTotalAlerts returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasTotalAlerts() bool {
	if o != nil && !utils.IsNil(o.TotalAlerts) {
		return true
	}

	return false
}

// SetTotalAlerts gets a reference to the given int64 and assigns it to the TotalAlerts field.
func (o *ApiWidgetsDataV2) SetTotalAlerts(v int64) {
	o.TotalAlerts = &v
}

// GetActiveAlerts returns the ActiveAlerts field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetActiveAlerts() int64 {
	if o == nil || utils.IsNil(o.ActiveAlerts) {
		var ret int64
		return ret
	}
	return *o.ActiveAlerts
}

// GetActiveAlertsOk returns a tuple with the ActiveAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetActiveAlertsOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.ActiveAlerts) {
		return nil, false
	}
	return o.ActiveAlerts, true
}

// HasActiveAlerts returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasActiveAlerts() bool {
	if o != nil && !utils.IsNil(o.ActiveAlerts) {
		return true
	}

	return false
}

// SetActiveAlerts gets a reference to the given int64 and assigns it to the ActiveAlerts field.
func (o *ApiWidgetsDataV2) SetActiveAlerts(v int64) {
	o.ActiveAlerts = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetAlerts() []ApiAlertListAlert {
	if o == nil || utils.IsNil(o.Alerts) {
		var ret []ApiAlertListAlert
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetAlertsOk() ([]ApiAlertListAlert, bool) {
	if o == nil || utils.IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasAlerts() bool {
	if o != nil && !utils.IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []ApiAlertListAlert and assigns it to the Alerts field.
func (o *ApiWidgetsDataV2) SetAlerts(v []ApiAlertListAlert) {
	o.Alerts = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetSummary() ApiAgentStatusSummary {
	if o == nil || utils.IsNil(o.Summary) {
		var ret ApiAgentStatusSummary
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetSummaryOk() (*ApiAgentStatusSummary, bool) {
	if o == nil || utils.IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasSummary() bool {
	if o != nil && !utils.IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given ApiAgentStatusSummary and assigns it to the Summary field.
func (o *ApiWidgetsDataV2) SetSummary(v ApiAgentStatusSummary) {
	o.Summary = &v
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetAgents() []ApiAgentStatusAgent {
	if o == nil || utils.IsNil(o.Agents) {
		var ret []ApiAgentStatusAgent
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetAgentsOk() ([]ApiAgentStatusAgent, bool) {
	if o == nil || utils.IsNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasAgents() bool {
	if o != nil && !utils.IsNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []ApiAgentStatusAgent and assigns it to the Agents field.
func (o *ApiWidgetsDataV2) SetAgents(v []ApiAgentStatusAgent) {
	o.Agents = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiWidgetsDataV2) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWidgetsDataV2) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiWidgetsDataV2) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiWidgetsDataV2) SetStatus(v string) {
	o.Status = &v
}

func (o ApiWidgetsDataV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiWidgetsDataV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Cards) {
		toSerialize["cards"] = o.Cards
	}
	if !utils.IsNil(o.Columns) {
		toSerialize["columns"] = o.Columns
	}
	if !utils.IsNil(o.Points) {
		toSerialize["points"] = o.Points
	}
	if !utils.IsNil(o.Tests) {
		toSerialize["tests"] = o.Tests
	}
	if !utils.IsNil(o.StartRound) {
		toSerialize["startRound"] = o.StartRound
	}
	if !utils.IsNil(o.AlertSuppressionWindows) {
		toSerialize["alertSuppressionWindows"] = o.AlertSuppressionWindows
	}
	if !utils.IsNil(o.TotalAlerts) {
		toSerialize["totalAlerts"] = o.TotalAlerts
	}
	if !utils.IsNil(o.ActiveAlerts) {
		toSerialize["activeAlerts"] = o.ActiveAlerts
	}
	if !utils.IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !utils.IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !utils.IsNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	if !utils.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableApiWidgetsDataV2 struct {
	value *ApiWidgetsDataV2
	isSet bool
}

func (v NullableApiWidgetsDataV2) Get() *ApiWidgetsDataV2 {
	return v.value
}

func (v *NullableApiWidgetsDataV2) Set(val *ApiWidgetsDataV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWidgetsDataV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWidgetsDataV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWidgetsDataV2(val *ApiWidgetsDataV2) *NullableApiWidgetsDataV2 {
	return &NullableApiWidgetsDataV2{value: val, isSet: true}
}

func (v NullableApiWidgetsDataV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWidgetsDataV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


