/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiAgentStatusIpInfo type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiAgentStatusIpInfo{}

// ApiAgentStatusIpInfo IP information of the agent.
type ApiAgentStatusIpInfo struct {
	// Public IP of the agent.
	PublicIp *string `json:"publicIp,omitempty"`
	// Private IP of the agent.
	PrivateIp *string `json:"privateIp,omitempty"`
	Ipv6 *string `json:"ipv6,omitempty"`
	OperativeSystemVersion *string `json:"operativeSystemVersion,omitempty"`
}

// NewApiAgentStatusIpInfo instantiates a new ApiAgentStatusIpInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAgentStatusIpInfo() *ApiAgentStatusIpInfo {
	this := ApiAgentStatusIpInfo{}
	return &this
}

// NewApiAgentStatusIpInfoWithDefaults instantiates a new ApiAgentStatusIpInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAgentStatusIpInfoWithDefaults() *ApiAgentStatusIpInfo {
	this := ApiAgentStatusIpInfo{}
	return &this
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *ApiAgentStatusIpInfo) GetPublicIp() string {
	if o == nil || utils.IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAgentStatusIpInfo) GetPublicIpOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ApiAgentStatusIpInfo) HasPublicIp() bool {
	if o != nil && !utils.IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *ApiAgentStatusIpInfo) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *ApiAgentStatusIpInfo) GetPrivateIp() string {
	if o == nil || utils.IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAgentStatusIpInfo) GetPrivateIpOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *ApiAgentStatusIpInfo) HasPrivateIp() bool {
	if o != nil && !utils.IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *ApiAgentStatusIpInfo) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *ApiAgentStatusIpInfo) GetIpv6() string {
	if o == nil || utils.IsNil(o.Ipv6) {
		var ret string
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAgentStatusIpInfo) GetIpv6Ok() (*string, bool) {
	if o == nil || utils.IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *ApiAgentStatusIpInfo) HasIpv6() bool {
	if o != nil && !utils.IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given string and assigns it to the Ipv6 field.
func (o *ApiAgentStatusIpInfo) SetIpv6(v string) {
	o.Ipv6 = &v
}

// GetOperativeSystemVersion returns the OperativeSystemVersion field value if set, zero value otherwise.
func (o *ApiAgentStatusIpInfo) GetOperativeSystemVersion() string {
	if o == nil || utils.IsNil(o.OperativeSystemVersion) {
		var ret string
		return ret
	}
	return *o.OperativeSystemVersion
}

// GetOperativeSystemVersionOk returns a tuple with the OperativeSystemVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAgentStatusIpInfo) GetOperativeSystemVersionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.OperativeSystemVersion) {
		return nil, false
	}
	return o.OperativeSystemVersion, true
}

// HasOperativeSystemVersion returns a boolean if a field has been set.
func (o *ApiAgentStatusIpInfo) HasOperativeSystemVersion() bool {
	if o != nil && !utils.IsNil(o.OperativeSystemVersion) {
		return true
	}

	return false
}

// SetOperativeSystemVersion gets a reference to the given string and assigns it to the OperativeSystemVersion field.
func (o *ApiAgentStatusIpInfo) SetOperativeSystemVersion(v string) {
	o.OperativeSystemVersion = &v
}

func (o ApiAgentStatusIpInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAgentStatusIpInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !utils.IsNil(o.PrivateIp) {
		toSerialize["privateIp"] = o.PrivateIp
	}
	if !utils.IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	if !utils.IsNil(o.OperativeSystemVersion) {
		toSerialize["operativeSystemVersion"] = o.OperativeSystemVersion
	}
	return toSerialize, nil
}

type NullableApiAgentStatusIpInfo struct {
	value *ApiAgentStatusIpInfo
	isSet bool
}

func (v NullableApiAgentStatusIpInfo) Get() *ApiAgentStatusIpInfo {
	return v.value
}

func (v *NullableApiAgentStatusIpInfo) Set(val *ApiAgentStatusIpInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAgentStatusIpInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAgentStatusIpInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAgentStatusIpInfo(val *ApiAgentStatusIpInfo) *NullableApiAgentStatusIpInfo {
	return &NullableApiAgentStatusIpInfo{value: val, isSet: true}
}

func (v NullableApiAgentStatusIpInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAgentStatusIpInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


