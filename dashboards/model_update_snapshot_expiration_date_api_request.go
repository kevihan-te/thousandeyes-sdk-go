/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the UpdateSnapshotExpirationDateApiRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &UpdateSnapshotExpirationDateApiRequest{}

// UpdateSnapshotExpirationDateApiRequest Request to update the expiration date of a snapshot.
type UpdateSnapshotExpirationDateApiRequest struct {
	// Expiration date of the snapshot. If unspecified, the snapshot expires 1 year from its creation date. The expiration date must be set within 5 years from the current date and adhere to the ISO date-time format.
	SnapshotExpirationDate *time.Time `json:"snapshotExpirationDate,omitempty"`
	// Expiration date of the snapshot. If unspecified, the snapshot expires 1 year from its creation date. The expiration date must be set within 5 years from the current date.
	// Deprecated
	ExpirationDate *string `json:"expirationDate,omitempty"`
}

// NewUpdateSnapshotExpirationDateApiRequest instantiates a new UpdateSnapshotExpirationDateApiRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSnapshotExpirationDateApiRequest() *UpdateSnapshotExpirationDateApiRequest {
	this := UpdateSnapshotExpirationDateApiRequest{}
	return &this
}

// NewUpdateSnapshotExpirationDateApiRequestWithDefaults instantiates a new UpdateSnapshotExpirationDateApiRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSnapshotExpirationDateApiRequestWithDefaults() *UpdateSnapshotExpirationDateApiRequest {
	this := UpdateSnapshotExpirationDateApiRequest{}
	return &this
}

// GetSnapshotExpirationDate returns the SnapshotExpirationDate field value if set, zero value otherwise.
func (o *UpdateSnapshotExpirationDateApiRequest) GetSnapshotExpirationDate() time.Time {
	if o == nil || utils.IsNil(o.SnapshotExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.SnapshotExpirationDate
}

// GetSnapshotExpirationDateOk returns a tuple with the SnapshotExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotExpirationDateApiRequest) GetSnapshotExpirationDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.SnapshotExpirationDate) {
		return nil, false
	}
	return o.SnapshotExpirationDate, true
}

// HasSnapshotExpirationDate returns a boolean if a field has been set.
func (o *UpdateSnapshotExpirationDateApiRequest) HasSnapshotExpirationDate() bool {
	if o != nil && !utils.IsNil(o.SnapshotExpirationDate) {
		return true
	}

	return false
}

// SetSnapshotExpirationDate gets a reference to the given time.Time and assigns it to the SnapshotExpirationDate field.
func (o *UpdateSnapshotExpirationDateApiRequest) SetSnapshotExpirationDate(v time.Time) {
	o.SnapshotExpirationDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
// Deprecated
func (o *UpdateSnapshotExpirationDateApiRequest) GetExpirationDate() string {
	if o == nil || utils.IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateSnapshotExpirationDateApiRequest) GetExpirationDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *UpdateSnapshotExpirationDateApiRequest) HasExpirationDate() bool {
	if o != nil && !utils.IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
// Deprecated
func (o *UpdateSnapshotExpirationDateApiRequest) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

func (o UpdateSnapshotExpirationDateApiRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSnapshotExpirationDateApiRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.SnapshotExpirationDate) {
		toSerialize["snapshotExpirationDate"] = o.SnapshotExpirationDate
	}
	if !utils.IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return toSerialize, nil
}

type NullableUpdateSnapshotExpirationDateApiRequest struct {
	value *UpdateSnapshotExpirationDateApiRequest
	isSet bool
}

func (v NullableUpdateSnapshotExpirationDateApiRequest) Get() *UpdateSnapshotExpirationDateApiRequest {
	return v.value
}

func (v *NullableUpdateSnapshotExpirationDateApiRequest) Set(val *UpdateSnapshotExpirationDateApiRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSnapshotExpirationDateApiRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSnapshotExpirationDateApiRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSnapshotExpirationDateApiRequest(val *UpdateSnapshotExpirationDateApiRequest) *NullableUpdateSnapshotExpirationDateApiRequest {
	return &NullableUpdateSnapshotExpirationDateApiRequest{value: val, isSet: true}
}

func (v NullableUpdateSnapshotExpirationDateApiRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSnapshotExpirationDateApiRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


