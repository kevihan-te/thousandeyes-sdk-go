/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiReportDataComponentLabelMap type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiReportDataComponentLabelMap{}

// ApiReportDataComponentLabelMap Map of group labels.
type ApiReportDataComponentLabelMap struct {
	// Defines the criterion used to aggregate data points under specific group values.
	GroupProperty *string `json:"groupProperty,omitempty"`
	// List of group labels.
	GroupLabels []ApiReportDataComponentLabelMapEntry `json:"groupLabels,omitempty"`
}

// NewApiReportDataComponentLabelMap instantiates a new ApiReportDataComponentLabelMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiReportDataComponentLabelMap() *ApiReportDataComponentLabelMap {
	this := ApiReportDataComponentLabelMap{}
	return &this
}

// NewApiReportDataComponentLabelMapWithDefaults instantiates a new ApiReportDataComponentLabelMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiReportDataComponentLabelMapWithDefaults() *ApiReportDataComponentLabelMap {
	this := ApiReportDataComponentLabelMap{}
	return &this
}

// GetGroupProperty returns the GroupProperty field value if set, zero value otherwise.
func (o *ApiReportDataComponentLabelMap) GetGroupProperty() string {
	if o == nil || utils.IsNil(o.GroupProperty) {
		var ret string
		return ret
	}
	return *o.GroupProperty
}

// GetGroupPropertyOk returns a tuple with the GroupProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReportDataComponentLabelMap) GetGroupPropertyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.GroupProperty) {
		return nil, false
	}
	return o.GroupProperty, true
}

// HasGroupProperty returns a boolean if a field has been set.
func (o *ApiReportDataComponentLabelMap) HasGroupProperty() bool {
	if o != nil && !utils.IsNil(o.GroupProperty) {
		return true
	}

	return false
}

// SetGroupProperty gets a reference to the given string and assigns it to the GroupProperty field.
func (o *ApiReportDataComponentLabelMap) SetGroupProperty(v string) {
	o.GroupProperty = &v
}

// GetGroupLabels returns the GroupLabels field value if set, zero value otherwise.
func (o *ApiReportDataComponentLabelMap) GetGroupLabels() []ApiReportDataComponentLabelMapEntry {
	if o == nil || utils.IsNil(o.GroupLabels) {
		var ret []ApiReportDataComponentLabelMapEntry
		return ret
	}
	return o.GroupLabels
}

// GetGroupLabelsOk returns a tuple with the GroupLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReportDataComponentLabelMap) GetGroupLabelsOk() ([]ApiReportDataComponentLabelMapEntry, bool) {
	if o == nil || utils.IsNil(o.GroupLabels) {
		return nil, false
	}
	return o.GroupLabels, true
}

// HasGroupLabels returns a boolean if a field has been set.
func (o *ApiReportDataComponentLabelMap) HasGroupLabels() bool {
	if o != nil && !utils.IsNil(o.GroupLabels) {
		return true
	}

	return false
}

// SetGroupLabels gets a reference to the given []ApiReportDataComponentLabelMapEntry and assigns it to the GroupLabels field.
func (o *ApiReportDataComponentLabelMap) SetGroupLabels(v []ApiReportDataComponentLabelMapEntry) {
	o.GroupLabels = v
}

func (o ApiReportDataComponentLabelMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiReportDataComponentLabelMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.GroupProperty) {
		toSerialize["groupProperty"] = o.GroupProperty
	}
	if !utils.IsNil(o.GroupLabels) {
		toSerialize["groupLabels"] = o.GroupLabels
	}
	return toSerialize, nil
}

type NullableApiReportDataComponentLabelMap struct {
	value *ApiReportDataComponentLabelMap
	isSet bool
}

func (v NullableApiReportDataComponentLabelMap) Get() *ApiReportDataComponentLabelMap {
	return v.value
}

func (v *NullableApiReportDataComponentLabelMap) Set(val *ApiReportDataComponentLabelMap) {
	v.value = val
	v.isSet = true
}

func (v NullableApiReportDataComponentLabelMap) IsSet() bool {
	return v.isSet
}

func (v *NullableApiReportDataComponentLabelMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiReportDataComponentLabelMap(val *ApiReportDataComponentLabelMap) *NullableApiReportDataComponentLabelMap {
	return &NullableApiReportDataComponentLabelMap{value: val, isSet: true}
}

func (v NullableApiReportDataComponentLabelMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiReportDataComponentLabelMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


