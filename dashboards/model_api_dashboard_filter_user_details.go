/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiDashboardFilterUserDetails type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiDashboardFilterUserDetails{}

// ApiDashboardFilterUserDetails Details of user who created or modified the filter.
type ApiDashboardFilterUserDetails struct {
	// Unique ID of the user.
	Uid *string `json:"uid,omitempty"`
	// Name of the user.
	Name *string `json:"name,omitempty"`
}

// NewApiDashboardFilterUserDetails instantiates a new ApiDashboardFilterUserDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiDashboardFilterUserDetails() *ApiDashboardFilterUserDetails {
	this := ApiDashboardFilterUserDetails{}
	return &this
}

// NewApiDashboardFilterUserDetailsWithDefaults instantiates a new ApiDashboardFilterUserDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiDashboardFilterUserDetailsWithDefaults() *ApiDashboardFilterUserDetails {
	this := ApiDashboardFilterUserDetails{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *ApiDashboardFilterUserDetails) GetUid() string {
	if o == nil || utils.IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDashboardFilterUserDetails) GetUidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *ApiDashboardFilterUserDetails) HasUid() bool {
	if o != nil && !utils.IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *ApiDashboardFilterUserDetails) SetUid(v string) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiDashboardFilterUserDetails) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDashboardFilterUserDetails) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiDashboardFilterUserDetails) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiDashboardFilterUserDetails) SetName(v string) {
	o.Name = &v
}

func (o ApiDashboardFilterUserDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiDashboardFilterUserDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableApiDashboardFilterUserDetails struct {
	value *ApiDashboardFilterUserDetails
	isSet bool
}

func (v NullableApiDashboardFilterUserDetails) Get() *ApiDashboardFilterUserDetails {
	return v.value
}

func (v *NullableApiDashboardFilterUserDetails) Set(val *ApiDashboardFilterUserDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableApiDashboardFilterUserDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableApiDashboardFilterUserDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiDashboardFilterUserDetails(val *ApiDashboardFilterUserDetails) *NullableApiDashboardFilterUserDetails {
	return &NullableApiDashboardFilterUserDetails{value: val, isSet: true}
}

func (v NullableApiDashboardFilterUserDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiDashboardFilterUserDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


