/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the ApiNumbersCardData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiNumbersCardData{}

// ApiNumbersCardData The data displayed on a numbers card.
type ApiNumbersCardData struct {
	// Identifier of the card.
	CardId *string `json:"cardId,omitempty"`
	// UTC start date of the data shown in the API output (ISO date-time format).
	StartDate *time.Time `json:"startDate,omitempty"`
	// UTC end date of the data shown in the API output (ISO date-time format).
	EndDate *time.Time `json:"endDate,omitempty"`
	// Previous value if `compareToPreviousValue == true` in configuration.
	PreviousValue *float64 `json:"previousValue,omitempty"`
	// Duration of each bin.
	BinSize *int64 `json:"binSize,omitempty"`
	// Timestamp of the aggregated data point.
	Timestamp *int64 `json:"timestamp,omitempty"`
	// Number of points aggregated into the data point
	NumberOfDataPoints *int64 `json:"numberOfDataPoints,omitempty"`
	// Aggregated value.
	Value *float64 `json:"value,omitempty"`
	// Message for not fully configured card or no data.
	Status *string `json:"status,omitempty"`
	AlertSuppressionWindows []ApiDashboardAsw `json:"alertSuppressionWindows,omitempty"`
}

// NewApiNumbersCardData instantiates a new ApiNumbersCardData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNumbersCardData() *ApiNumbersCardData {
	this := ApiNumbersCardData{}
	return &this
}

// NewApiNumbersCardDataWithDefaults instantiates a new ApiNumbersCardData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNumbersCardDataWithDefaults() *ApiNumbersCardData {
	this := ApiNumbersCardData{}
	return &this
}

// GetCardId returns the CardId field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetCardId() string {
	if o == nil || utils.IsNil(o.CardId) {
		var ret string
		return ret
	}
	return *o.CardId
}

// GetCardIdOk returns a tuple with the CardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetCardIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CardId) {
		return nil, false
	}
	return o.CardId, true
}

// HasCardId returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasCardId() bool {
	if o != nil && !utils.IsNil(o.CardId) {
		return true
	}

	return false
}

// SetCardId gets a reference to the given string and assigns it to the CardId field.
func (o *ApiNumbersCardData) SetCardId(v string) {
	o.CardId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetStartDate() time.Time {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetStartDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ApiNumbersCardData) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetEndDate() time.Time {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetEndDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ApiNumbersCardData) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetPreviousValue returns the PreviousValue field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetPreviousValue() float64 {
	if o == nil || utils.IsNil(o.PreviousValue) {
		var ret float64
		return ret
	}
	return *o.PreviousValue
}

// GetPreviousValueOk returns a tuple with the PreviousValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetPreviousValueOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.PreviousValue) {
		return nil, false
	}
	return o.PreviousValue, true
}

// HasPreviousValue returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasPreviousValue() bool {
	if o != nil && !utils.IsNil(o.PreviousValue) {
		return true
	}

	return false
}

// SetPreviousValue gets a reference to the given float64 and assigns it to the PreviousValue field.
func (o *ApiNumbersCardData) SetPreviousValue(v float64) {
	o.PreviousValue = &v
}

// GetBinSize returns the BinSize field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetBinSize() int64 {
	if o == nil || utils.IsNil(o.BinSize) {
		var ret int64
		return ret
	}
	return *o.BinSize
}

// GetBinSizeOk returns a tuple with the BinSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetBinSizeOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.BinSize) {
		return nil, false
	}
	return o.BinSize, true
}

// HasBinSize returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasBinSize() bool {
	if o != nil && !utils.IsNil(o.BinSize) {
		return true
	}

	return false
}

// SetBinSize gets a reference to the given int64 and assigns it to the BinSize field.
func (o *ApiNumbersCardData) SetBinSize(v int64) {
	o.BinSize = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetTimestamp() int64 {
	if o == nil || utils.IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetTimestampOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasTimestamp() bool {
	if o != nil && !utils.IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *ApiNumbersCardData) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetNumberOfDataPoints returns the NumberOfDataPoints field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetNumberOfDataPoints() int64 {
	if o == nil || utils.IsNil(o.NumberOfDataPoints) {
		var ret int64
		return ret
	}
	return *o.NumberOfDataPoints
}

// GetNumberOfDataPointsOk returns a tuple with the NumberOfDataPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetNumberOfDataPointsOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.NumberOfDataPoints) {
		return nil, false
	}
	return o.NumberOfDataPoints, true
}

// HasNumberOfDataPoints returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasNumberOfDataPoints() bool {
	if o != nil && !utils.IsNil(o.NumberOfDataPoints) {
		return true
	}

	return false
}

// SetNumberOfDataPoints gets a reference to the given int64 and assigns it to the NumberOfDataPoints field.
func (o *ApiNumbersCardData) SetNumberOfDataPoints(v int64) {
	o.NumberOfDataPoints = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetValue() float64 {
	if o == nil || utils.IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetValueOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasValue() bool {
	if o != nil && !utils.IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *ApiNumbersCardData) SetValue(v float64) {
	o.Value = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetStatus() string {
	if o == nil || utils.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetStatusOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiNumbersCardData) SetStatus(v string) {
	o.Status = &v
}

// GetAlertSuppressionWindows returns the AlertSuppressionWindows field value if set, zero value otherwise.
func (o *ApiNumbersCardData) GetAlertSuppressionWindows() []ApiDashboardAsw {
	if o == nil || utils.IsNil(o.AlertSuppressionWindows) {
		var ret []ApiDashboardAsw
		return ret
	}
	return o.AlertSuppressionWindows
}

// GetAlertSuppressionWindowsOk returns a tuple with the AlertSuppressionWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNumbersCardData) GetAlertSuppressionWindowsOk() ([]ApiDashboardAsw, bool) {
	if o == nil || utils.IsNil(o.AlertSuppressionWindows) {
		return nil, false
	}
	return o.AlertSuppressionWindows, true
}

// HasAlertSuppressionWindows returns a boolean if a field has been set.
func (o *ApiNumbersCardData) HasAlertSuppressionWindows() bool {
	if o != nil && !utils.IsNil(o.AlertSuppressionWindows) {
		return true
	}

	return false
}

// SetAlertSuppressionWindows gets a reference to the given []ApiDashboardAsw and assigns it to the AlertSuppressionWindows field.
func (o *ApiNumbersCardData) SetAlertSuppressionWindows(v []ApiDashboardAsw) {
	o.AlertSuppressionWindows = v
}

func (o ApiNumbersCardData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNumbersCardData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CardId) {
		toSerialize["cardId"] = o.CardId
	}
	if !utils.IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !utils.IsNil(o.PreviousValue) {
		toSerialize["previousValue"] = o.PreviousValue
	}
	if !utils.IsNil(o.BinSize) {
		toSerialize["binSize"] = o.BinSize
	}
	if !utils.IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !utils.IsNil(o.NumberOfDataPoints) {
		toSerialize["numberOfDataPoints"] = o.NumberOfDataPoints
	}
	if !utils.IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !utils.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !utils.IsNil(o.AlertSuppressionWindows) {
		toSerialize["alertSuppressionWindows"] = o.AlertSuppressionWindows
	}
	return toSerialize, nil
}

type NullableApiNumbersCardData struct {
	value *ApiNumbersCardData
	isSet bool
}

func (v NullableApiNumbersCardData) Get() *ApiNumbersCardData {
	return v.value
}

func (v *NullableApiNumbersCardData) Set(val *ApiNumbersCardData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNumbersCardData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNumbersCardData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNumbersCardData(val *ApiNumbersCardData) *NullableApiNumbersCardData {
	return &NullableApiNumbersCardData{value: val, isSet: true}
}

func (v NullableApiNumbersCardData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNumbersCardData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


