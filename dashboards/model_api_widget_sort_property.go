/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
	"fmt"
)

// ApiWidgetSortProperty Determines the card sorting criterion.
type ApiWidgetSortProperty string

// List of ApiWidgetSortProperty
const (
	APIWIDGETSORTPROPERTY_ALPHABETICAL ApiWidgetSortProperty = "alphabetical"
	APIWIDGETSORTPROPERTY_VALUE ApiWidgetSortProperty = "value"
)

// All allowed values of ApiWidgetSortProperty enum
var AllowedApiWidgetSortPropertyEnumValues = []ApiWidgetSortProperty{
	"alphabetical",
	"value",
}

func (v *ApiWidgetSortProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiWidgetSortProperty(value)
	for _, existing := range AllowedApiWidgetSortPropertyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiWidgetSortProperty", value)
}

// NewApiWidgetSortPropertyFromValue returns a pointer to a valid ApiWidgetSortProperty
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiWidgetSortPropertyFromValue(v string) (*ApiWidgetSortProperty, error) {
	ev := ApiWidgetSortProperty(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiWidgetSortProperty: valid values are %v", v, AllowedApiWidgetSortPropertyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiWidgetSortProperty) IsValid() bool {
	for _, existing := range AllowedApiWidgetSortPropertyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiWidgetSortProperty value
func (v ApiWidgetSortProperty) Ptr() *ApiWidgetSortProperty {
	return &v
}

type NullableApiWidgetSortProperty struct {
	value *ApiWidgetSortProperty
	isSet bool
}

func (v NullableApiWidgetSortProperty) Get() *ApiWidgetSortProperty {
	return v.value
}

func (v *NullableApiWidgetSortProperty) Set(val *ApiWidgetSortProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWidgetSortProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWidgetSortProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWidgetSortProperty(val *ApiWidgetSortProperty) *NullableApiWidgetSortProperty {
	return &NullableApiWidgetSortProperty{value: val, isSet: true}
}

func (v NullableApiWidgetSortProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWidgetSortProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

