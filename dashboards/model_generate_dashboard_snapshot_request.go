/*
Dashboards API

Manage ThousandEyes Dashboards.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboards

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the GenerateDashboardSnapshotRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &GenerateDashboardSnapshotRequest{}

// GenerateDashboardSnapshotRequest Request to generate a snapshot from a dashboard.
type GenerateDashboardSnapshotRequest struct {
	// Date and time to start aggregating data (ISO date-time format).
	StartDate *time.Time `json:"startDate,omitempty"`
	// Date and time to end aggregating data (ISO date-time format).
	EndDate *time.Time `json:"endDate,omitempty"`
	// The name of the snapshot, does not have to be unique.
	DisplayName *string `json:"displayName,omitempty"`
	// TheIdentifierof the dashboard to generate a snapshot from
	DashboardId *string `json:"dashboardId,omitempty"`
	// Set to `true` to anonymize the data in the snapshot.
	AnonymizeData *bool `json:"anonymizeData,omitempty"`
	// Specifies the timezone used for date and time fields.
	Timezone *string `json:"timezone,omitempty"`
	// Expiration date of the snapshot. If unspecified, the snapshot expires 1 year from its creation date. The expiration date must be set within 5 years from the current date and adhere to the ISO date-time format.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
}

// NewGenerateDashboardSnapshotRequest instantiates a new GenerateDashboardSnapshotRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateDashboardSnapshotRequest() *GenerateDashboardSnapshotRequest {
	this := GenerateDashboardSnapshotRequest{}
	return &this
}

// NewGenerateDashboardSnapshotRequestWithDefaults instantiates a new GenerateDashboardSnapshotRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateDashboardSnapshotRequestWithDefaults() *GenerateDashboardSnapshotRequest {
	this := GenerateDashboardSnapshotRequest{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetStartDate() time.Time {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetStartDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *GenerateDashboardSnapshotRequest) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetEndDate() time.Time {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetEndDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *GenerateDashboardSnapshotRequest) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetDisplayName() string {
	if o == nil || utils.IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasDisplayName() bool {
	if o != nil && !utils.IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GenerateDashboardSnapshotRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDashboardId returns the DashboardId field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetDashboardId() string {
	if o == nil || utils.IsNil(o.DashboardId) {
		var ret string
		return ret
	}
	return *o.DashboardId
}

// GetDashboardIdOk returns a tuple with the DashboardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetDashboardIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DashboardId) {
		return nil, false
	}
	return o.DashboardId, true
}

// HasDashboardId returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasDashboardId() bool {
	if o != nil && !utils.IsNil(o.DashboardId) {
		return true
	}

	return false
}

// SetDashboardId gets a reference to the given string and assigns it to the DashboardId field.
func (o *GenerateDashboardSnapshotRequest) SetDashboardId(v string) {
	o.DashboardId = &v
}

// GetAnonymizeData returns the AnonymizeData field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetAnonymizeData() bool {
	if o == nil || utils.IsNil(o.AnonymizeData) {
		var ret bool
		return ret
	}
	return *o.AnonymizeData
}

// GetAnonymizeDataOk returns a tuple with the AnonymizeData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetAnonymizeDataOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.AnonymizeData) {
		return nil, false
	}
	return o.AnonymizeData, true
}

// HasAnonymizeData returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasAnonymizeData() bool {
	if o != nil && !utils.IsNil(o.AnonymizeData) {
		return true
	}

	return false
}

// SetAnonymizeData gets a reference to the given bool and assigns it to the AnonymizeData field.
func (o *GenerateDashboardSnapshotRequest) SetAnonymizeData(v bool) {
	o.AnonymizeData = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetTimezone() string {
	if o == nil || utils.IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetTimezoneOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasTimezone() bool {
	if o != nil && !utils.IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *GenerateDashboardSnapshotRequest) SetTimezone(v string) {
	o.Timezone = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *GenerateDashboardSnapshotRequest) GetExpirationDate() time.Time {
	if o == nil || utils.IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateDashboardSnapshotRequest) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *GenerateDashboardSnapshotRequest) HasExpirationDate() bool {
	if o != nil && !utils.IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *GenerateDashboardSnapshotRequest) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

func (o GenerateDashboardSnapshotRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateDashboardSnapshotRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !utils.IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !utils.IsNil(o.DashboardId) {
		toSerialize["dashboardId"] = o.DashboardId
	}
	if !utils.IsNil(o.AnonymizeData) {
		toSerialize["anonymizeData"] = o.AnonymizeData
	}
	if !utils.IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !utils.IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return toSerialize, nil
}

type NullableGenerateDashboardSnapshotRequest struct {
	value *GenerateDashboardSnapshotRequest
	isSet bool
}

func (v NullableGenerateDashboardSnapshotRequest) Get() *GenerateDashboardSnapshotRequest {
	return v.value
}

func (v *NullableGenerateDashboardSnapshotRequest) Set(val *GenerateDashboardSnapshotRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateDashboardSnapshotRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateDashboardSnapshotRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateDashboardSnapshotRequest(val *GenerateDashboardSnapshotRequest) *NullableGenerateDashboardSnapshotRequest {
	return &NullableGenerateDashboardSnapshotRequest{value: val, isSet: true}
}

func (v NullableGenerateDashboardSnapshotRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateDashboardSnapshotRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


