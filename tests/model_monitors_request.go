/*
Tests API

This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tests

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the MonitorsRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MonitorsRequest{}

// MonitorsRequest struct for MonitorsRequest
type MonitorsRequest struct {
	// Contains list of BGP monitor IDs (get `monitorId` from `/monitors` endpoint)
	Monitors []string `json:"monitors,omitempty"`
}

// NewMonitorsRequest instantiates a new MonitorsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorsRequest() *MonitorsRequest {
	this := MonitorsRequest{}
	return &this
}

// NewMonitorsRequestWithDefaults instantiates a new MonitorsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorsRequestWithDefaults() *MonitorsRequest {
	this := MonitorsRequest{}
	return &this
}

// GetMonitors returns the Monitors field value if set, zero value otherwise.
func (o *MonitorsRequest) GetMonitors() []string {
	if o == nil || utils.IsNil(o.Monitors) {
		var ret []string
		return ret
	}
	return o.Monitors
}

// GetMonitorsOk returns a tuple with the Monitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorsRequest) GetMonitorsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Monitors) {
		return nil, false
	}
	return o.Monitors, true
}

// HasMonitors returns a boolean if a field has been set.
func (o *MonitorsRequest) HasMonitors() bool {
	if o != nil && !utils.IsNil(o.Monitors) {
		return true
	}

	return false
}

// SetMonitors gets a reference to the given []string and assigns it to the Monitors field.
func (o *MonitorsRequest) SetMonitors(v []string) {
	o.Monitors = v
}

func (o MonitorsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Monitors) {
		toSerialize["monitors"] = o.Monitors
	}
	return toSerialize, nil
}

type NullableMonitorsRequest struct {
	value *MonitorsRequest
	isSet bool
}

func (v NullableMonitorsRequest) Get() *MonitorsRequest {
	return v.value
}

func (v *NullableMonitorsRequest) Set(val *MonitorsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorsRequest(val *MonitorsRequest) *NullableMonitorsRequest {
	return &NullableMonitorsRequest{value: val, isSet: true}
}

func (v NullableMonitorsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


