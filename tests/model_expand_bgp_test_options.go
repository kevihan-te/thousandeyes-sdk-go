/*
Tests API

This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests. 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tests

import (
	"encoding/json"
	"fmt"
)

// ExpandBgpTestOptions the model 'ExpandBgpTestOptions'
type ExpandBgpTestOptions string

// List of ExpandBgpTestOptions
const (
	EXPANDBGPTESTOPTIONS_ALERT_RULE ExpandBgpTestOptions = "alert-rule"
	EXPANDBGPTESTOPTIONS_MONITOR ExpandBgpTestOptions = "monitor"
	EXPANDBGPTESTOPTIONS_LABEL ExpandBgpTestOptions = "label"
	EXPANDBGPTESTOPTIONS_SHARED_WITH_ACCOUNT ExpandBgpTestOptions = "shared-with-account"
)

// All allowed values of ExpandBgpTestOptions enum
var AllowedExpandBgpTestOptionsEnumValues = []ExpandBgpTestOptions{
	"alert-rule",
	"monitor",
	"label",
	"shared-with-account",
}

func (v *ExpandBgpTestOptions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExpandBgpTestOptions(value)
	for _, existing := range AllowedExpandBgpTestOptionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExpandBgpTestOptions", value)
}

// NewExpandBgpTestOptionsFromValue returns a pointer to a valid ExpandBgpTestOptions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExpandBgpTestOptionsFromValue(v string) (*ExpandBgpTestOptions, error) {
	ev := ExpandBgpTestOptions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExpandBgpTestOptions: valid values are %v", v, AllowedExpandBgpTestOptionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExpandBgpTestOptions) IsValid() bool {
	for _, existing := range AllowedExpandBgpTestOptionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExpandBgpTestOptions value
func (v ExpandBgpTestOptions) Ptr() *ExpandBgpTestOptions {
	return &v
}

type NullableExpandBgpTestOptions struct {
	value *ExpandBgpTestOptions
	isSet bool
}

func (v NullableExpandBgpTestOptions) Get() *ExpandBgpTestOptions {
	return v.value
}

func (v *NullableExpandBgpTestOptions) Set(val *ExpandBgpTestOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableExpandBgpTestOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableExpandBgpTestOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpandBgpTestOptions(val *ExpandBgpTestOptions) *NullableExpandBgpTestOptions {
	return &NullableExpandBgpTestOptions{value: val, isSet: true}
}

func (v NullableExpandBgpTestOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpandBgpTestOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

