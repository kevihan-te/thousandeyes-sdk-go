/*
Tests API

This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests. 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tests

import (
	"encoding/json"
	"fmt"
)

// ApiRequestAuthType Will override the Authorization request header.
type ApiRequestAuthType string

// List of ApiRequestAuthType
const (
	APIREQUESTAUTHTYPE_NONE ApiRequestAuthType = "none"
	APIREQUESTAUTHTYPE_BASIC ApiRequestAuthType = "basic"
	APIREQUESTAUTHTYPE_BEARER_TOKEN ApiRequestAuthType = "bearer-token"
	APIREQUESTAUTHTYPE_OAUTH2 ApiRequestAuthType = "oauth2"
)

// All allowed values of ApiRequestAuthType enum
var AllowedApiRequestAuthTypeEnumValues = []ApiRequestAuthType{
	"none",
	"basic",
	"bearer-token",
	"oauth2",
}

func (v *ApiRequestAuthType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiRequestAuthType(value)
	for _, existing := range AllowedApiRequestAuthTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiRequestAuthType", value)
}

// NewApiRequestAuthTypeFromValue returns a pointer to a valid ApiRequestAuthType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiRequestAuthTypeFromValue(v string) (*ApiRequestAuthType, error) {
	ev := ApiRequestAuthType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiRequestAuthType: valid values are %v", v, AllowedApiRequestAuthTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiRequestAuthType) IsValid() bool {
	for _, existing := range AllowedApiRequestAuthTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiRequestAuthType value
func (v ApiRequestAuthType) Ptr() *ApiRequestAuthType {
	return &v
}

type NullableApiRequestAuthType struct {
	value *ApiRequestAuthType
	isSet bool
}

func (v NullableApiRequestAuthType) Get() *ApiRequestAuthType {
	return v.value
}

func (v *NullableApiRequestAuthType) Set(val *ApiRequestAuthType) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRequestAuthType) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRequestAuthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRequestAuthType(val *ApiRequestAuthType) *NullableApiRequestAuthType {
	return &NullableApiRequestAuthType{value: val, isSet: true}
}

func (v NullableApiRequestAuthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRequestAuthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

