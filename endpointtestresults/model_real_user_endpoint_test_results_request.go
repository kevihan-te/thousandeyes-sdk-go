/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the RealUserEndpointTestResultsRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &RealUserEndpointTestResultsRequest{}

// RealUserEndpointTestResultsRequest struct for RealUserEndpointTestResultsRequest
type RealUserEndpointTestResultsRequest struct {
	SearchFilters *RealUserEndpointTestResultRequestFilter `json:"searchFilters,omitempty"`
}

// NewRealUserEndpointTestResultsRequest instantiates a new RealUserEndpointTestResultsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRealUserEndpointTestResultsRequest() *RealUserEndpointTestResultsRequest {
	this := RealUserEndpointTestResultsRequest{}
	return &this
}

// NewRealUserEndpointTestResultsRequestWithDefaults instantiates a new RealUserEndpointTestResultsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRealUserEndpointTestResultsRequestWithDefaults() *RealUserEndpointTestResultsRequest {
	this := RealUserEndpointTestResultsRequest{}
	return &this
}

// GetSearchFilters returns the SearchFilters field value if set, zero value otherwise.
func (o *RealUserEndpointTestResultsRequest) GetSearchFilters() RealUserEndpointTestResultRequestFilter {
	if o == nil || utils.IsNil(o.SearchFilters) {
		var ret RealUserEndpointTestResultRequestFilter
		return ret
	}
	return *o.SearchFilters
}

// GetSearchFiltersOk returns a tuple with the SearchFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestResultsRequest) GetSearchFiltersOk() (*RealUserEndpointTestResultRequestFilter, bool) {
	if o == nil || utils.IsNil(o.SearchFilters) {
		return nil, false
	}
	return o.SearchFilters, true
}

// HasSearchFilters returns a boolean if a field has been set.
func (o *RealUserEndpointTestResultsRequest) HasSearchFilters() bool {
	if o != nil && !utils.IsNil(o.SearchFilters) {
		return true
	}

	return false
}

// SetSearchFilters gets a reference to the given RealUserEndpointTestResultRequestFilter and assigns it to the SearchFilters field.
func (o *RealUserEndpointTestResultsRequest) SetSearchFilters(v RealUserEndpointTestResultRequestFilter) {
	o.SearchFilters = &v
}

func (o RealUserEndpointTestResultsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RealUserEndpointTestResultsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.SearchFilters) {
		toSerialize["searchFilters"] = o.SearchFilters
	}
	return toSerialize, nil
}

type NullableRealUserEndpointTestResultsRequest struct {
	value *RealUserEndpointTestResultsRequest
	isSet bool
}

func (v NullableRealUserEndpointTestResultsRequest) Get() *RealUserEndpointTestResultsRequest {
	return v.value
}

func (v *NullableRealUserEndpointTestResultsRequest) Set(val *RealUserEndpointTestResultsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRealUserEndpointTestResultsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRealUserEndpointTestResultsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRealUserEndpointTestResultsRequest(val *RealUserEndpointTestResultsRequest) *NullableRealUserEndpointTestResultsRequest {
	return &NullableRealUserEndpointTestResultsRequest{value: val, isSet: true}
}

func (v NullableRealUserEndpointTestResultsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRealUserEndpointTestResultsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


