/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
	"fmt"
)

// ExpandEndpointHttpServerOptions the model 'ExpandEndpointHttpServerOptions'
type ExpandEndpointHttpServerOptions string

// List of ExpandEndpointHttpServerOptions
const (
	EXPANDENDPOINTHTTPSERVEROPTIONS_HEADER ExpandEndpointHttpServerOptions = "header"
)

// All allowed values of ExpandEndpointHttpServerOptions enum
var AllowedExpandEndpointHttpServerOptionsEnumValues = []ExpandEndpointHttpServerOptions{
	"header",
}

func (v *ExpandEndpointHttpServerOptions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExpandEndpointHttpServerOptions(value)
	for _, existing := range AllowedExpandEndpointHttpServerOptionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExpandEndpointHttpServerOptions", value)
}

// NewExpandEndpointHttpServerOptionsFromValue returns a pointer to a valid ExpandEndpointHttpServerOptions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExpandEndpointHttpServerOptionsFromValue(v string) (*ExpandEndpointHttpServerOptions, error) {
	ev := ExpandEndpointHttpServerOptions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExpandEndpointHttpServerOptions: valid values are %v", v, AllowedExpandEndpointHttpServerOptionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExpandEndpointHttpServerOptions) IsValid() bool {
	for _, existing := range AllowedExpandEndpointHttpServerOptionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExpandEndpointHttpServerOptions value
func (v ExpandEndpointHttpServerOptions) Ptr() *ExpandEndpointHttpServerOptions {
	return &v
}

type NullableExpandEndpointHttpServerOptions struct {
	value *ExpandEndpointHttpServerOptions
	isSet bool
}

func (v NullableExpandEndpointHttpServerOptions) Get() *ExpandEndpointHttpServerOptions {
	return v.value
}

func (v *NullableExpandEndpointHttpServerOptions) Set(val *ExpandEndpointHttpServerOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableExpandEndpointHttpServerOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableExpandEndpointHttpServerOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpandEndpointHttpServerOptions(val *ExpandEndpointHttpServerOptions) *NullableExpandEndpointHttpServerOptions {
	return &NullableExpandEndpointHttpServerOptions{value: val, isSet: true}
}

func (v NullableExpandEndpointHttpServerOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpandEndpointHttpServerOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

