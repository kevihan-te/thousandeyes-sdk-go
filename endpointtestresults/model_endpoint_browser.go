/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the EndpointBrowser type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointBrowser{}

// EndpointBrowser struct for EndpointBrowser
type EndpointBrowser struct {
	// Browser name.
	Name *string `json:"name,omitempty"`
	// Browser version.
	Version *string `json:"version,omitempty"`
}

// NewEndpointBrowser instantiates a new EndpointBrowser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointBrowser() *EndpointBrowser {
	this := EndpointBrowser{}
	return &this
}

// NewEndpointBrowserWithDefaults instantiates a new EndpointBrowser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointBrowserWithDefaults() *EndpointBrowser {
	this := EndpointBrowser{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EndpointBrowser) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowser) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EndpointBrowser) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EndpointBrowser) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *EndpointBrowser) GetVersion() string {
	if o == nil || utils.IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointBrowser) GetVersionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *EndpointBrowser) HasVersion() bool {
	if o != nil && !utils.IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *EndpointBrowser) SetVersion(v string) {
	o.Version = &v
}

func (o EndpointBrowser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointBrowser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableEndpointBrowser struct {
	value *EndpointBrowser
	isSet bool
}

func (v NullableEndpointBrowser) Get() *EndpointBrowser {
	return v.value
}

func (v *NullableEndpointBrowser) Set(val *EndpointBrowser) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointBrowser) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointBrowser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointBrowser(val *EndpointBrowser) *NullableEndpointBrowser {
	return &NullableEndpointBrowser{value: val, isSet: true}
}

func (v NullableEndpointBrowser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointBrowser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


