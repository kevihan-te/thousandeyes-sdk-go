/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the LocalNetworkResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &LocalNetworkResult{}

// LocalNetworkResult struct for LocalNetworkResult
type LocalNetworkResult struct {
	// The network ID. Each network occurrence has a unique ID.
	NetworkId *string `json:"networkId,omitempty"`
	// The network name.
	NetworkName *string `json:"networkName,omitempty"`
	// Network local private address.
	LocalPrefix *string `json:"localPrefix,omitempty"`
	// Network public IP range.
	PublicIpRange *string `json:"publicIpRange,omitempty"`
}

// NewLocalNetworkResult instantiates a new LocalNetworkResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalNetworkResult() *LocalNetworkResult {
	this := LocalNetworkResult{}
	return &this
}

// NewLocalNetworkResultWithDefaults instantiates a new LocalNetworkResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalNetworkResultWithDefaults() *LocalNetworkResult {
	this := LocalNetworkResult{}
	return &this
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *LocalNetworkResult) GetNetworkId() string {
	if o == nil || utils.IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkResult) GetNetworkIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *LocalNetworkResult) HasNetworkId() bool {
	if o != nil && !utils.IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *LocalNetworkResult) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *LocalNetworkResult) GetNetworkName() string {
	if o == nil || utils.IsNil(o.NetworkName) {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkResult) GetNetworkNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.NetworkName) {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *LocalNetworkResult) HasNetworkName() bool {
	if o != nil && !utils.IsNil(o.NetworkName) {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *LocalNetworkResult) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetLocalPrefix returns the LocalPrefix field value if set, zero value otherwise.
func (o *LocalNetworkResult) GetLocalPrefix() string {
	if o == nil || utils.IsNil(o.LocalPrefix) {
		var ret string
		return ret
	}
	return *o.LocalPrefix
}

// GetLocalPrefixOk returns a tuple with the LocalPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkResult) GetLocalPrefixOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LocalPrefix) {
		return nil, false
	}
	return o.LocalPrefix, true
}

// HasLocalPrefix returns a boolean if a field has been set.
func (o *LocalNetworkResult) HasLocalPrefix() bool {
	if o != nil && !utils.IsNil(o.LocalPrefix) {
		return true
	}

	return false
}

// SetLocalPrefix gets a reference to the given string and assigns it to the LocalPrefix field.
func (o *LocalNetworkResult) SetLocalPrefix(v string) {
	o.LocalPrefix = &v
}

// GetPublicIpRange returns the PublicIpRange field value if set, zero value otherwise.
func (o *LocalNetworkResult) GetPublicIpRange() string {
	if o == nil || utils.IsNil(o.PublicIpRange) {
		var ret string
		return ret
	}
	return *o.PublicIpRange
}

// GetPublicIpRangeOk returns a tuple with the PublicIpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkResult) GetPublicIpRangeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PublicIpRange) {
		return nil, false
	}
	return o.PublicIpRange, true
}

// HasPublicIpRange returns a boolean if a field has been set.
func (o *LocalNetworkResult) HasPublicIpRange() bool {
	if o != nil && !utils.IsNil(o.PublicIpRange) {
		return true
	}

	return false
}

// SetPublicIpRange gets a reference to the given string and assigns it to the PublicIpRange field.
func (o *LocalNetworkResult) SetPublicIpRange(v string) {
	o.PublicIpRange = &v
}

func (o LocalNetworkResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalNetworkResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !utils.IsNil(o.NetworkName) {
		toSerialize["networkName"] = o.NetworkName
	}
	if !utils.IsNil(o.LocalPrefix) {
		toSerialize["localPrefix"] = o.LocalPrefix
	}
	if !utils.IsNil(o.PublicIpRange) {
		toSerialize["publicIpRange"] = o.PublicIpRange
	}
	return toSerialize, nil
}

type NullableLocalNetworkResult struct {
	value *LocalNetworkResult
	isSet bool
}

func (v NullableLocalNetworkResult) Get() *LocalNetworkResult {
	return v.value
}

func (v *NullableLocalNetworkResult) Set(val *LocalNetworkResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalNetworkResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalNetworkResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalNetworkResult(val *LocalNetworkResult) *NullableLocalNetworkResult {
	return &NullableLocalNetworkResult{value: val, isSet: true}
}

func (v NullableLocalNetworkResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalNetworkResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


