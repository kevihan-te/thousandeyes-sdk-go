/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the HttpEndpointTestsDataRoundsSearch type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HttpEndpointTestsDataRoundsSearch{}

// HttpEndpointTestsDataRoundsSearch struct for HttpEndpointTestsDataRoundsSearch
type HttpEndpointTestsDataRoundsSearch struct {
	SearchSort []HttpEndpointTestsDataSearchSort `json:"searchSort,omitempty"`
	ThresholdFilter *HttpEndpointTestsDataThresholdFilters `json:"thresholdFilter,omitempty"`
	SearchFilters *HttpEndpointTestsDataSearchFilter `json:"searchFilters,omitempty"`
}

// NewHttpEndpointTestsDataRoundsSearch instantiates a new HttpEndpointTestsDataRoundsSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEndpointTestsDataRoundsSearch() *HttpEndpointTestsDataRoundsSearch {
	this := HttpEndpointTestsDataRoundsSearch{}
	return &this
}

// NewHttpEndpointTestsDataRoundsSearchWithDefaults instantiates a new HttpEndpointTestsDataRoundsSearch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEndpointTestsDataRoundsSearchWithDefaults() *HttpEndpointTestsDataRoundsSearch {
	this := HttpEndpointTestsDataRoundsSearch{}
	return &this
}

// GetSearchSort returns the SearchSort field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataRoundsSearch) GetSearchSort() []HttpEndpointTestsDataSearchSort {
	if o == nil || utils.IsNil(o.SearchSort) {
		var ret []HttpEndpointTestsDataSearchSort
		return ret
	}
	return o.SearchSort
}

// GetSearchSortOk returns a tuple with the SearchSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataRoundsSearch) GetSearchSortOk() ([]HttpEndpointTestsDataSearchSort, bool) {
	if o == nil || utils.IsNil(o.SearchSort) {
		return nil, false
	}
	return o.SearchSort, true
}

// HasSearchSort returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataRoundsSearch) HasSearchSort() bool {
	if o != nil && !utils.IsNil(o.SearchSort) {
		return true
	}

	return false
}

// SetSearchSort gets a reference to the given []HttpEndpointTestsDataSearchSort and assigns it to the SearchSort field.
func (o *HttpEndpointTestsDataRoundsSearch) SetSearchSort(v []HttpEndpointTestsDataSearchSort) {
	o.SearchSort = v
}

// GetThresholdFilter returns the ThresholdFilter field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataRoundsSearch) GetThresholdFilter() HttpEndpointTestsDataThresholdFilters {
	if o == nil || utils.IsNil(o.ThresholdFilter) {
		var ret HttpEndpointTestsDataThresholdFilters
		return ret
	}
	return *o.ThresholdFilter
}

// GetThresholdFilterOk returns a tuple with the ThresholdFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataRoundsSearch) GetThresholdFilterOk() (*HttpEndpointTestsDataThresholdFilters, bool) {
	if o == nil || utils.IsNil(o.ThresholdFilter) {
		return nil, false
	}
	return o.ThresholdFilter, true
}

// HasThresholdFilter returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataRoundsSearch) HasThresholdFilter() bool {
	if o != nil && !utils.IsNil(o.ThresholdFilter) {
		return true
	}

	return false
}

// SetThresholdFilter gets a reference to the given HttpEndpointTestsDataThresholdFilters and assigns it to the ThresholdFilter field.
func (o *HttpEndpointTestsDataRoundsSearch) SetThresholdFilter(v HttpEndpointTestsDataThresholdFilters) {
	o.ThresholdFilter = &v
}

// GetSearchFilters returns the SearchFilters field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataRoundsSearch) GetSearchFilters() HttpEndpointTestsDataSearchFilter {
	if o == nil || utils.IsNil(o.SearchFilters) {
		var ret HttpEndpointTestsDataSearchFilter
		return ret
	}
	return *o.SearchFilters
}

// GetSearchFiltersOk returns a tuple with the SearchFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataRoundsSearch) GetSearchFiltersOk() (*HttpEndpointTestsDataSearchFilter, bool) {
	if o == nil || utils.IsNil(o.SearchFilters) {
		return nil, false
	}
	return o.SearchFilters, true
}

// HasSearchFilters returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataRoundsSearch) HasSearchFilters() bool {
	if o != nil && !utils.IsNil(o.SearchFilters) {
		return true
	}

	return false
}

// SetSearchFilters gets a reference to the given HttpEndpointTestsDataSearchFilter and assigns it to the SearchFilters field.
func (o *HttpEndpointTestsDataRoundsSearch) SetSearchFilters(v HttpEndpointTestsDataSearchFilter) {
	o.SearchFilters = &v
}

func (o HttpEndpointTestsDataRoundsSearch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpEndpointTestsDataRoundsSearch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.SearchSort) {
		toSerialize["searchSort"] = o.SearchSort
	}
	if !utils.IsNil(o.ThresholdFilter) {
		toSerialize["thresholdFilter"] = o.ThresholdFilter
	}
	if !utils.IsNil(o.SearchFilters) {
		toSerialize["searchFilters"] = o.SearchFilters
	}
	return toSerialize, nil
}

type NullableHttpEndpointTestsDataRoundsSearch struct {
	value *HttpEndpointTestsDataRoundsSearch
	isSet bool
}

func (v NullableHttpEndpointTestsDataRoundsSearch) Get() *HttpEndpointTestsDataRoundsSearch {
	return v.value
}

func (v *NullableHttpEndpointTestsDataRoundsSearch) Set(val *HttpEndpointTestsDataRoundsSearch) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEndpointTestsDataRoundsSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEndpointTestsDataRoundsSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEndpointTestsDataRoundsSearch(val *HttpEndpointTestsDataRoundsSearch) *NullableHttpEndpointTestsDataRoundsSearch {
	return &NullableHttpEndpointTestsDataRoundsSearch{value: val, isSet: true}
}

func (v NullableHttpEndpointTestsDataRoundsSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEndpointTestsDataRoundsSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


