/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the RealUserEndpointTestNetworkResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &RealUserEndpointTestNetworkResult{}

// RealUserEndpointTestNetworkResult struct for RealUserEndpointTestNetworkResult
type RealUserEndpointTestNetworkResult struct {
	// Unique ID of endpoint agent, from `/endpoint/agents` endpoint.
	AgentId *string `json:"agentId,omitempty"`
	// UTC date when endpoint real user test took place (ISO date-time format).
	Date *time.Time `json:"date,omitempty"`
	// Endpoint real user test ID. Each endpoint real user test occurrence has a unique ID.
	Id *string `json:"id,omitempty"`
	// Epoch time (seconds) indicating the start time of the round.
	RoundId *int32 `json:"roundId,omitempty"`
	Destination *NetworkMetrics `json:"destination,omitempty"`
	Vpn *NetworkMetrics `json:"vpn,omitempty"`
	Proxy *NetworkMetrics `json:"proxy,omitempty"`
	SystemMetrics *SystemMetrics `json:"systemMetrics,omitempty"`
}

// NewRealUserEndpointTestNetworkResult instantiates a new RealUserEndpointTestNetworkResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRealUserEndpointTestNetworkResult() *RealUserEndpointTestNetworkResult {
	this := RealUserEndpointTestNetworkResult{}
	return &this
}

// NewRealUserEndpointTestNetworkResultWithDefaults instantiates a new RealUserEndpointTestNetworkResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRealUserEndpointTestNetworkResultWithDefaults() *RealUserEndpointTestNetworkResult {
	this := RealUserEndpointTestNetworkResult{}
	return &this
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetAgentId() string {
	if o == nil || utils.IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetAgentIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasAgentId() bool {
	if o != nil && !utils.IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *RealUserEndpointTestNetworkResult) SetAgentId(v string) {
	o.AgentId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetDate() time.Time {
	if o == nil || utils.IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasDate() bool {
	if o != nil && !utils.IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *RealUserEndpointTestNetworkResult) SetDate(v time.Time) {
	o.Date = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetId() string {
	if o == nil || utils.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RealUserEndpointTestNetworkResult) SetId(v string) {
	o.Id = &v
}

// GetRoundId returns the RoundId field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetRoundId() int32 {
	if o == nil || utils.IsNil(o.RoundId) {
		var ret int32
		return ret
	}
	return *o.RoundId
}

// GetRoundIdOk returns a tuple with the RoundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetRoundIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RoundId) {
		return nil, false
	}
	return o.RoundId, true
}

// HasRoundId returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasRoundId() bool {
	if o != nil && !utils.IsNil(o.RoundId) {
		return true
	}

	return false
}

// SetRoundId gets a reference to the given int32 and assigns it to the RoundId field.
func (o *RealUserEndpointTestNetworkResult) SetRoundId(v int32) {
	o.RoundId = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetDestination() NetworkMetrics {
	if o == nil || utils.IsNil(o.Destination) {
		var ret NetworkMetrics
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetDestinationOk() (*NetworkMetrics, bool) {
	if o == nil || utils.IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasDestination() bool {
	if o != nil && !utils.IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given NetworkMetrics and assigns it to the Destination field.
func (o *RealUserEndpointTestNetworkResult) SetDestination(v NetworkMetrics) {
	o.Destination = &v
}

// GetVpn returns the Vpn field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetVpn() NetworkMetrics {
	if o == nil || utils.IsNil(o.Vpn) {
		var ret NetworkMetrics
		return ret
	}
	return *o.Vpn
}

// GetVpnOk returns a tuple with the Vpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetVpnOk() (*NetworkMetrics, bool) {
	if o == nil || utils.IsNil(o.Vpn) {
		return nil, false
	}
	return o.Vpn, true
}

// HasVpn returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasVpn() bool {
	if o != nil && !utils.IsNil(o.Vpn) {
		return true
	}

	return false
}

// SetVpn gets a reference to the given NetworkMetrics and assigns it to the Vpn field.
func (o *RealUserEndpointTestNetworkResult) SetVpn(v NetworkMetrics) {
	o.Vpn = &v
}

// GetProxy returns the Proxy field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetProxy() NetworkMetrics {
	if o == nil || utils.IsNil(o.Proxy) {
		var ret NetworkMetrics
		return ret
	}
	return *o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetProxyOk() (*NetworkMetrics, bool) {
	if o == nil || utils.IsNil(o.Proxy) {
		return nil, false
	}
	return o.Proxy, true
}

// HasProxy returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasProxy() bool {
	if o != nil && !utils.IsNil(o.Proxy) {
		return true
	}

	return false
}

// SetProxy gets a reference to the given NetworkMetrics and assigns it to the Proxy field.
func (o *RealUserEndpointTestNetworkResult) SetProxy(v NetworkMetrics) {
	o.Proxy = &v
}

// GetSystemMetrics returns the SystemMetrics field value if set, zero value otherwise.
func (o *RealUserEndpointTestNetworkResult) GetSystemMetrics() SystemMetrics {
	if o == nil || utils.IsNil(o.SystemMetrics) {
		var ret SystemMetrics
		return ret
	}
	return *o.SystemMetrics
}

// GetSystemMetricsOk returns a tuple with the SystemMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestNetworkResult) GetSystemMetricsOk() (*SystemMetrics, bool) {
	if o == nil || utils.IsNil(o.SystemMetrics) {
		return nil, false
	}
	return o.SystemMetrics, true
}

// HasSystemMetrics returns a boolean if a field has been set.
func (o *RealUserEndpointTestNetworkResult) HasSystemMetrics() bool {
	if o != nil && !utils.IsNil(o.SystemMetrics) {
		return true
	}

	return false
}

// SetSystemMetrics gets a reference to the given SystemMetrics and assigns it to the SystemMetrics field.
func (o *RealUserEndpointTestNetworkResult) SetSystemMetrics(v SystemMetrics) {
	o.SystemMetrics = &v
}

func (o RealUserEndpointTestNetworkResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RealUserEndpointTestNetworkResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AgentId) {
		toSerialize["agentId"] = o.AgentId
	}
	if !utils.IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !utils.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !utils.IsNil(o.RoundId) {
		toSerialize["roundId"] = o.RoundId
	}
	if !utils.IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !utils.IsNil(o.Vpn) {
		toSerialize["vpn"] = o.Vpn
	}
	if !utils.IsNil(o.Proxy) {
		toSerialize["proxy"] = o.Proxy
	}
	if !utils.IsNil(o.SystemMetrics) {
		toSerialize["systemMetrics"] = o.SystemMetrics
	}
	return toSerialize, nil
}

type NullableRealUserEndpointTestNetworkResult struct {
	value *RealUserEndpointTestNetworkResult
	isSet bool
}

func (v NullableRealUserEndpointTestNetworkResult) Get() *RealUserEndpointTestNetworkResult {
	return v.value
}

func (v *NullableRealUserEndpointTestNetworkResult) Set(val *RealUserEndpointTestNetworkResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRealUserEndpointTestNetworkResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRealUserEndpointTestNetworkResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRealUserEndpointTestNetworkResult(val *RealUserEndpointTestNetworkResult) *NullableRealUserEndpointTestNetworkResult {
	return &NullableRealUserEndpointTestNetworkResult{value: val, isSet: true}
}

func (v NullableRealUserEndpointTestNetworkResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRealUserEndpointTestNetworkResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


