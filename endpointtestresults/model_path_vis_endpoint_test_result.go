/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the PathVisEndpointTestResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PathVisEndpointTestResult{}

// PathVisEndpointTestResult struct for PathVisEndpointTestResult
type PathVisEndpointTestResult struct {
	// A unique identifier associated with your account group. You can retrieve your `AccountGroupId` from the `/account-groups` endpoint.
	Aid *string `json:"aid,omitempty"`
	// Unique ID of endpoint test.
	TestId *string `json:"testId,omitempty"`
	// Unique ID of endpoint agent, from `/endpoint/agents` endpoint.
	AgentId *string `json:"agentId,omitempty"`
	// Epoch time (seconds) indicating the start time of the round.
	RoundId *int32 `json:"roundId,omitempty"`
	// IP address of target server.
	ServerIp *string `json:"serverIp,omitempty"`
	NetworkProfile *NetworkProfile `json:"networkProfile,omitempty"`
	SystemMetrics *SystemMetrics `json:"systemMetrics,omitempty"`
	OriginalTargetProfile *TargetProfile `json:"originalTargetProfile,omitempty"`
	VpnProfile *VpnProfile `json:"vpnProfile,omitempty"`
	AsnDetails *AsnDetails `json:"asnDetails,omitempty"`
	// Target server, including port.
	Server *string `json:"server,omitempty"`
	// IP address of source endpoint agent.
	SourceIp *string `json:"sourceIp,omitempty"`
	// IP prefix of source endpoint agent.
	SourcePrefix *string `json:"sourcePrefix,omitempty"`
	// Geographic location of the path visualization.
	Location *string `json:"location,omitempty"`
	// Shows an iteration of path trace, with each iteration specified by a pathId.
	PathTraces []EndpointPathTrace `json:"pathTraces,omitempty"`
}

// NewPathVisEndpointTestResult instantiates a new PathVisEndpointTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPathVisEndpointTestResult() *PathVisEndpointTestResult {
	this := PathVisEndpointTestResult{}
	return &this
}

// NewPathVisEndpointTestResultWithDefaults instantiates a new PathVisEndpointTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPathVisEndpointTestResultWithDefaults() *PathVisEndpointTestResult {
	this := PathVisEndpointTestResult{}
	return &this
}

// GetAid returns the Aid field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetAid() string {
	if o == nil || utils.IsNil(o.Aid) {
		var ret string
		return ret
	}
	return *o.Aid
}

// GetAidOk returns a tuple with the Aid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetAidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Aid) {
		return nil, false
	}
	return o.Aid, true
}

// HasAid returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasAid() bool {
	if o != nil && !utils.IsNil(o.Aid) {
		return true
	}

	return false
}

// SetAid gets a reference to the given string and assigns it to the Aid field.
func (o *PathVisEndpointTestResult) SetAid(v string) {
	o.Aid = &v
}

// GetTestId returns the TestId field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetTestId() string {
	if o == nil || utils.IsNil(o.TestId) {
		var ret string
		return ret
	}
	return *o.TestId
}

// GetTestIdOk returns a tuple with the TestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetTestIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TestId) {
		return nil, false
	}
	return o.TestId, true
}

// HasTestId returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasTestId() bool {
	if o != nil && !utils.IsNil(o.TestId) {
		return true
	}

	return false
}

// SetTestId gets a reference to the given string and assigns it to the TestId field.
func (o *PathVisEndpointTestResult) SetTestId(v string) {
	o.TestId = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetAgentId() string {
	if o == nil || utils.IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetAgentIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasAgentId() bool {
	if o != nil && !utils.IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *PathVisEndpointTestResult) SetAgentId(v string) {
	o.AgentId = &v
}

// GetRoundId returns the RoundId field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetRoundId() int32 {
	if o == nil || utils.IsNil(o.RoundId) {
		var ret int32
		return ret
	}
	return *o.RoundId
}

// GetRoundIdOk returns a tuple with the RoundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetRoundIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RoundId) {
		return nil, false
	}
	return o.RoundId, true
}

// HasRoundId returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasRoundId() bool {
	if o != nil && !utils.IsNil(o.RoundId) {
		return true
	}

	return false
}

// SetRoundId gets a reference to the given int32 and assigns it to the RoundId field.
func (o *PathVisEndpointTestResult) SetRoundId(v int32) {
	o.RoundId = &v
}

// GetServerIp returns the ServerIp field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetServerIp() string {
	if o == nil || utils.IsNil(o.ServerIp) {
		var ret string
		return ret
	}
	return *o.ServerIp
}

// GetServerIpOk returns a tuple with the ServerIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetServerIpOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ServerIp) {
		return nil, false
	}
	return o.ServerIp, true
}

// HasServerIp returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasServerIp() bool {
	if o != nil && !utils.IsNil(o.ServerIp) {
		return true
	}

	return false
}

// SetServerIp gets a reference to the given string and assigns it to the ServerIp field.
func (o *PathVisEndpointTestResult) SetServerIp(v string) {
	o.ServerIp = &v
}

// GetNetworkProfile returns the NetworkProfile field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetNetworkProfile() NetworkProfile {
	if o == nil || utils.IsNil(o.NetworkProfile) {
		var ret NetworkProfile
		return ret
	}
	return *o.NetworkProfile
}

// GetNetworkProfileOk returns a tuple with the NetworkProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetNetworkProfileOk() (*NetworkProfile, bool) {
	if o == nil || utils.IsNil(o.NetworkProfile) {
		return nil, false
	}
	return o.NetworkProfile, true
}

// HasNetworkProfile returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasNetworkProfile() bool {
	if o != nil && !utils.IsNil(o.NetworkProfile) {
		return true
	}

	return false
}

// SetNetworkProfile gets a reference to the given NetworkProfile and assigns it to the NetworkProfile field.
func (o *PathVisEndpointTestResult) SetNetworkProfile(v NetworkProfile) {
	o.NetworkProfile = &v
}

// GetSystemMetrics returns the SystemMetrics field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetSystemMetrics() SystemMetrics {
	if o == nil || utils.IsNil(o.SystemMetrics) {
		var ret SystemMetrics
		return ret
	}
	return *o.SystemMetrics
}

// GetSystemMetricsOk returns a tuple with the SystemMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetSystemMetricsOk() (*SystemMetrics, bool) {
	if o == nil || utils.IsNil(o.SystemMetrics) {
		return nil, false
	}
	return o.SystemMetrics, true
}

// HasSystemMetrics returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasSystemMetrics() bool {
	if o != nil && !utils.IsNil(o.SystemMetrics) {
		return true
	}

	return false
}

// SetSystemMetrics gets a reference to the given SystemMetrics and assigns it to the SystemMetrics field.
func (o *PathVisEndpointTestResult) SetSystemMetrics(v SystemMetrics) {
	o.SystemMetrics = &v
}

// GetOriginalTargetProfile returns the OriginalTargetProfile field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetOriginalTargetProfile() TargetProfile {
	if o == nil || utils.IsNil(o.OriginalTargetProfile) {
		var ret TargetProfile
		return ret
	}
	return *o.OriginalTargetProfile
}

// GetOriginalTargetProfileOk returns a tuple with the OriginalTargetProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetOriginalTargetProfileOk() (*TargetProfile, bool) {
	if o == nil || utils.IsNil(o.OriginalTargetProfile) {
		return nil, false
	}
	return o.OriginalTargetProfile, true
}

// HasOriginalTargetProfile returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasOriginalTargetProfile() bool {
	if o != nil && !utils.IsNil(o.OriginalTargetProfile) {
		return true
	}

	return false
}

// SetOriginalTargetProfile gets a reference to the given TargetProfile and assigns it to the OriginalTargetProfile field.
func (o *PathVisEndpointTestResult) SetOriginalTargetProfile(v TargetProfile) {
	o.OriginalTargetProfile = &v
}

// GetVpnProfile returns the VpnProfile field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetVpnProfile() VpnProfile {
	if o == nil || utils.IsNil(o.VpnProfile) {
		var ret VpnProfile
		return ret
	}
	return *o.VpnProfile
}

// GetVpnProfileOk returns a tuple with the VpnProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetVpnProfileOk() (*VpnProfile, bool) {
	if o == nil || utils.IsNil(o.VpnProfile) {
		return nil, false
	}
	return o.VpnProfile, true
}

// HasVpnProfile returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasVpnProfile() bool {
	if o != nil && !utils.IsNil(o.VpnProfile) {
		return true
	}

	return false
}

// SetVpnProfile gets a reference to the given VpnProfile and assigns it to the VpnProfile field.
func (o *PathVisEndpointTestResult) SetVpnProfile(v VpnProfile) {
	o.VpnProfile = &v
}

// GetAsnDetails returns the AsnDetails field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetAsnDetails() AsnDetails {
	if o == nil || utils.IsNil(o.AsnDetails) {
		var ret AsnDetails
		return ret
	}
	return *o.AsnDetails
}

// GetAsnDetailsOk returns a tuple with the AsnDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetAsnDetailsOk() (*AsnDetails, bool) {
	if o == nil || utils.IsNil(o.AsnDetails) {
		return nil, false
	}
	return o.AsnDetails, true
}

// HasAsnDetails returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasAsnDetails() bool {
	if o != nil && !utils.IsNil(o.AsnDetails) {
		return true
	}

	return false
}

// SetAsnDetails gets a reference to the given AsnDetails and assigns it to the AsnDetails field.
func (o *PathVisEndpointTestResult) SetAsnDetails(v AsnDetails) {
	o.AsnDetails = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetServer() string {
	if o == nil || utils.IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetServerOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasServer() bool {
	if o != nil && !utils.IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *PathVisEndpointTestResult) SetServer(v string) {
	o.Server = &v
}

// GetSourceIp returns the SourceIp field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetSourceIp() string {
	if o == nil || utils.IsNil(o.SourceIp) {
		var ret string
		return ret
	}
	return *o.SourceIp
}

// GetSourceIpOk returns a tuple with the SourceIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetSourceIpOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SourceIp) {
		return nil, false
	}
	return o.SourceIp, true
}

// HasSourceIp returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasSourceIp() bool {
	if o != nil && !utils.IsNil(o.SourceIp) {
		return true
	}

	return false
}

// SetSourceIp gets a reference to the given string and assigns it to the SourceIp field.
func (o *PathVisEndpointTestResult) SetSourceIp(v string) {
	o.SourceIp = &v
}

// GetSourcePrefix returns the SourcePrefix field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetSourcePrefix() string {
	if o == nil || utils.IsNil(o.SourcePrefix) {
		var ret string
		return ret
	}
	return *o.SourcePrefix
}

// GetSourcePrefixOk returns a tuple with the SourcePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetSourcePrefixOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SourcePrefix) {
		return nil, false
	}
	return o.SourcePrefix, true
}

// HasSourcePrefix returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasSourcePrefix() bool {
	if o != nil && !utils.IsNil(o.SourcePrefix) {
		return true
	}

	return false
}

// SetSourcePrefix gets a reference to the given string and assigns it to the SourcePrefix field.
func (o *PathVisEndpointTestResult) SetSourcePrefix(v string) {
	o.SourcePrefix = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetLocation() string {
	if o == nil || utils.IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetLocationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasLocation() bool {
	if o != nil && !utils.IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *PathVisEndpointTestResult) SetLocation(v string) {
	o.Location = &v
}

// GetPathTraces returns the PathTraces field value if set, zero value otherwise.
func (o *PathVisEndpointTestResult) GetPathTraces() []EndpointPathTrace {
	if o == nil || utils.IsNil(o.PathTraces) {
		var ret []EndpointPathTrace
		return ret
	}
	return o.PathTraces
}

// GetPathTracesOk returns a tuple with the PathTraces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathVisEndpointTestResult) GetPathTracesOk() ([]EndpointPathTrace, bool) {
	if o == nil || utils.IsNil(o.PathTraces) {
		return nil, false
	}
	return o.PathTraces, true
}

// HasPathTraces returns a boolean if a field has been set.
func (o *PathVisEndpointTestResult) HasPathTraces() bool {
	if o != nil && !utils.IsNil(o.PathTraces) {
		return true
	}

	return false
}

// SetPathTraces gets a reference to the given []EndpointPathTrace and assigns it to the PathTraces field.
func (o *PathVisEndpointTestResult) SetPathTraces(v []EndpointPathTrace) {
	o.PathTraces = v
}

func (o PathVisEndpointTestResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PathVisEndpointTestResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Aid) {
		toSerialize["aid"] = o.Aid
	}
	if !utils.IsNil(o.TestId) {
		toSerialize["testId"] = o.TestId
	}
	if !utils.IsNil(o.AgentId) {
		toSerialize["agentId"] = o.AgentId
	}
	if !utils.IsNil(o.RoundId) {
		toSerialize["roundId"] = o.RoundId
	}
	if !utils.IsNil(o.ServerIp) {
		toSerialize["serverIp"] = o.ServerIp
	}
	if !utils.IsNil(o.NetworkProfile) {
		toSerialize["networkProfile"] = o.NetworkProfile
	}
	if !utils.IsNil(o.SystemMetrics) {
		toSerialize["systemMetrics"] = o.SystemMetrics
	}
	if !utils.IsNil(o.OriginalTargetProfile) {
		toSerialize["originalTargetProfile"] = o.OriginalTargetProfile
	}
	if !utils.IsNil(o.VpnProfile) {
		toSerialize["vpnProfile"] = o.VpnProfile
	}
	if !utils.IsNil(o.AsnDetails) {
		toSerialize["asnDetails"] = o.AsnDetails
	}
	if !utils.IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !utils.IsNil(o.SourceIp) {
		toSerialize["sourceIp"] = o.SourceIp
	}
	if !utils.IsNil(o.SourcePrefix) {
		toSerialize["sourcePrefix"] = o.SourcePrefix
	}
	if !utils.IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !utils.IsNil(o.PathTraces) {
		toSerialize["pathTraces"] = o.PathTraces
	}
	return toSerialize, nil
}

type NullablePathVisEndpointTestResult struct {
	value *PathVisEndpointTestResult
	isSet bool
}

func (v NullablePathVisEndpointTestResult) Get() *PathVisEndpointTestResult {
	return v.value
}

func (v *NullablePathVisEndpointTestResult) Set(val *PathVisEndpointTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePathVisEndpointTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePathVisEndpointTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePathVisEndpointTestResult(val *PathVisEndpointTestResult) *NullablePathVisEndpointTestResult {
	return &NullablePathVisEndpointTestResult{value: val, isSet: true}
}

func (v NullablePathVisEndpointTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePathVisEndpointTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


