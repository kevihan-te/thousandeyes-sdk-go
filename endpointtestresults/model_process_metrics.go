/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ProcessMetrics type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ProcessMetrics{}

// ProcessMetrics struct for ProcessMetrics
type ProcessMetrics struct {
	// The name of the process.
	Name *string `json:"name,omitempty"`
	// The process ID.
	Pid *int32 `json:"pid,omitempty"`
	// The CPU usage by the process as a percentage (e.g., 0.5 for 50% CPU usage).
	Cpu *float64 `json:"cpu,omitempty"`
	// The memory usage by the process as a percentage (e.g., 0.22 for 22%).
	MemoryPercentage *float64 `json:"memoryPercentage,omitempty"`
	// The memory usage by the process in bytes.
	MemoryBytes *int64 `json:"memoryBytes,omitempty"`
}

// NewProcessMetrics instantiates a new ProcessMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessMetrics() *ProcessMetrics {
	this := ProcessMetrics{}
	return &this
}

// NewProcessMetricsWithDefaults instantiates a new ProcessMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessMetricsWithDefaults() *ProcessMetrics {
	this := ProcessMetrics{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProcessMetrics) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessMetrics) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProcessMetrics) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProcessMetrics) SetName(v string) {
	o.Name = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *ProcessMetrics) GetPid() int32 {
	if o == nil || utils.IsNil(o.Pid) {
		var ret int32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessMetrics) GetPidOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *ProcessMetrics) HasPid() bool {
	if o != nil && !utils.IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int32 and assigns it to the Pid field.
func (o *ProcessMetrics) SetPid(v int32) {
	o.Pid = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *ProcessMetrics) GetCpu() float64 {
	if o == nil || utils.IsNil(o.Cpu) {
		var ret float64
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessMetrics) GetCpuOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *ProcessMetrics) HasCpu() bool {
	if o != nil && !utils.IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given float64 and assigns it to the Cpu field.
func (o *ProcessMetrics) SetCpu(v float64) {
	o.Cpu = &v
}

// GetMemoryPercentage returns the MemoryPercentage field value if set, zero value otherwise.
func (o *ProcessMetrics) GetMemoryPercentage() float64 {
	if o == nil || utils.IsNil(o.MemoryPercentage) {
		var ret float64
		return ret
	}
	return *o.MemoryPercentage
}

// GetMemoryPercentageOk returns a tuple with the MemoryPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessMetrics) GetMemoryPercentageOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.MemoryPercentage) {
		return nil, false
	}
	return o.MemoryPercentage, true
}

// HasMemoryPercentage returns a boolean if a field has been set.
func (o *ProcessMetrics) HasMemoryPercentage() bool {
	if o != nil && !utils.IsNil(o.MemoryPercentage) {
		return true
	}

	return false
}

// SetMemoryPercentage gets a reference to the given float64 and assigns it to the MemoryPercentage field.
func (o *ProcessMetrics) SetMemoryPercentage(v float64) {
	o.MemoryPercentage = &v
}

// GetMemoryBytes returns the MemoryBytes field value if set, zero value otherwise.
func (o *ProcessMetrics) GetMemoryBytes() int64 {
	if o == nil || utils.IsNil(o.MemoryBytes) {
		var ret int64
		return ret
	}
	return *o.MemoryBytes
}

// GetMemoryBytesOk returns a tuple with the MemoryBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessMetrics) GetMemoryBytesOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.MemoryBytes) {
		return nil, false
	}
	return o.MemoryBytes, true
}

// HasMemoryBytes returns a boolean if a field has been set.
func (o *ProcessMetrics) HasMemoryBytes() bool {
	if o != nil && !utils.IsNil(o.MemoryBytes) {
		return true
	}

	return false
}

// SetMemoryBytes gets a reference to the given int64 and assigns it to the MemoryBytes field.
func (o *ProcessMetrics) SetMemoryBytes(v int64) {
	o.MemoryBytes = &v
}

func (o ProcessMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !utils.IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !utils.IsNil(o.MemoryPercentage) {
		toSerialize["memoryPercentage"] = o.MemoryPercentage
	}
	if !utils.IsNil(o.MemoryBytes) {
		toSerialize["memoryBytes"] = o.MemoryBytes
	}
	return toSerialize, nil
}

type NullableProcessMetrics struct {
	value *ProcessMetrics
	isSet bool
}

func (v NullableProcessMetrics) Get() *ProcessMetrics {
	return v.value
}

func (v *NullableProcessMetrics) Set(val *ProcessMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessMetrics(val *ProcessMetrics) *NullableProcessMetrics {
	return &NullableProcessMetrics{value: val, isSet: true}
}

func (v NullableProcessMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


