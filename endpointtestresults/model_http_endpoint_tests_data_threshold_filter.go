/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the HttpEndpointTestsDataThresholdFilter type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HttpEndpointTestsDataThresholdFilter{}

// HttpEndpointTestsDataThresholdFilter The metric is filtered based on the threshold value and operator provided.
type HttpEndpointTestsDataThresholdFilter struct {
	Name *HttpThresholdFilterName `json:"name,omitempty"`
	// The threshold value.
	Value *float64 `json:"value,omitempty"`
	Operator *ThresholdFilterOperator `json:"operator,omitempty"`
}

// NewHttpEndpointTestsDataThresholdFilter instantiates a new HttpEndpointTestsDataThresholdFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEndpointTestsDataThresholdFilter() *HttpEndpointTestsDataThresholdFilter {
	this := HttpEndpointTestsDataThresholdFilter{}
	return &this
}

// NewHttpEndpointTestsDataThresholdFilterWithDefaults instantiates a new HttpEndpointTestsDataThresholdFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEndpointTestsDataThresholdFilterWithDefaults() *HttpEndpointTestsDataThresholdFilter {
	this := HttpEndpointTestsDataThresholdFilter{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataThresholdFilter) GetName() HttpThresholdFilterName {
	if o == nil || utils.IsNil(o.Name) {
		var ret HttpThresholdFilterName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataThresholdFilter) GetNameOk() (*HttpThresholdFilterName, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataThresholdFilter) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given HttpThresholdFilterName and assigns it to the Name field.
func (o *HttpEndpointTestsDataThresholdFilter) SetName(v HttpThresholdFilterName) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataThresholdFilter) GetValue() float64 {
	if o == nil || utils.IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataThresholdFilter) GetValueOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataThresholdFilter) HasValue() bool {
	if o != nil && !utils.IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *HttpEndpointTestsDataThresholdFilter) SetValue(v float64) {
	o.Value = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataThresholdFilter) GetOperator() ThresholdFilterOperator {
	if o == nil || utils.IsNil(o.Operator) {
		var ret ThresholdFilterOperator
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataThresholdFilter) GetOperatorOk() (*ThresholdFilterOperator, bool) {
	if o == nil || utils.IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataThresholdFilter) HasOperator() bool {
	if o != nil && !utils.IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given ThresholdFilterOperator and assigns it to the Operator field.
func (o *HttpEndpointTestsDataThresholdFilter) SetOperator(v ThresholdFilterOperator) {
	o.Operator = &v
}

func (o HttpEndpointTestsDataThresholdFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpEndpointTestsDataThresholdFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !utils.IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableHttpEndpointTestsDataThresholdFilter struct {
	value *HttpEndpointTestsDataThresholdFilter
	isSet bool
}

func (v NullableHttpEndpointTestsDataThresholdFilter) Get() *HttpEndpointTestsDataThresholdFilter {
	return v.value
}

func (v *NullableHttpEndpointTestsDataThresholdFilter) Set(val *HttpEndpointTestsDataThresholdFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEndpointTestsDataThresholdFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEndpointTestsDataThresholdFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEndpointTestsDataThresholdFilter(val *HttpEndpointTestsDataThresholdFilter) *NullableHttpEndpointTestsDataThresholdFilter {
	return &NullableHttpEndpointTestsDataThresholdFilter{value: val, isSet: true}
}

func (v NullableHttpEndpointTestsDataThresholdFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEndpointTestsDataThresholdFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


