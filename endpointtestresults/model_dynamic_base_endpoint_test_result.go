/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the DynamicBaseEndpointTestResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DynamicBaseEndpointTestResult{}

// DynamicBaseEndpointTestResult struct for DynamicBaseEndpointTestResult
type DynamicBaseEndpointTestResult struct {
	// Which supported application to monitor, can be one of `webex`, `zoom`, `microsoft-teams`.
	Application *string `json:"application,omitempty"`
	Protocol *EndpointTestResultProtocol `json:"protocol,omitempty"`
	TcpProbeMode *TestProbeModeResponse `json:"tcpProbeMode,omitempty"`
	UdpProbeMode *UdpProbeModeResponse `json:"udpProbeMode,omitempty"`
	Webex *DynamicEndpointTestWebex `json:"webex,omitempty"`
}

// NewDynamicBaseEndpointTestResult instantiates a new DynamicBaseEndpointTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicBaseEndpointTestResult() *DynamicBaseEndpointTestResult {
	this := DynamicBaseEndpointTestResult{}
	var protocol EndpointTestResultProtocol = ENDPOINTTESTRESULTPROTOCOL_UNKNOWN
	this.Protocol = &protocol
	var tcpProbeMode TestProbeModeResponse = TESTPROBEMODERESPONSE_AUTO
	this.TcpProbeMode = &tcpProbeMode
	var udpProbeMode UdpProbeModeResponse = UDPPROBEMODERESPONSE_UNKNOWN
	this.UdpProbeMode = &udpProbeMode
	return &this
}

// NewDynamicBaseEndpointTestResultWithDefaults instantiates a new DynamicBaseEndpointTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicBaseEndpointTestResultWithDefaults() *DynamicBaseEndpointTestResult {
	this := DynamicBaseEndpointTestResult{}
	var protocol EndpointTestResultProtocol = ENDPOINTTESTRESULTPROTOCOL_UNKNOWN
	this.Protocol = &protocol
	var tcpProbeMode TestProbeModeResponse = TESTPROBEMODERESPONSE_AUTO
	this.TcpProbeMode = &tcpProbeMode
	var udpProbeMode UdpProbeModeResponse = UDPPROBEMODERESPONSE_UNKNOWN
	this.UdpProbeMode = &udpProbeMode
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *DynamicBaseEndpointTestResult) GetApplication() string {
	if o == nil || utils.IsNil(o.Application) {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicBaseEndpointTestResult) GetApplicationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *DynamicBaseEndpointTestResult) HasApplication() bool {
	if o != nil && !utils.IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *DynamicBaseEndpointTestResult) SetApplication(v string) {
	o.Application = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *DynamicBaseEndpointTestResult) GetProtocol() EndpointTestResultProtocol {
	if o == nil || utils.IsNil(o.Protocol) {
		var ret EndpointTestResultProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicBaseEndpointTestResult) GetProtocolOk() (*EndpointTestResultProtocol, bool) {
	if o == nil || utils.IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *DynamicBaseEndpointTestResult) HasProtocol() bool {
	if o != nil && !utils.IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given EndpointTestResultProtocol and assigns it to the Protocol field.
func (o *DynamicBaseEndpointTestResult) SetProtocol(v EndpointTestResultProtocol) {
	o.Protocol = &v
}

// GetTcpProbeMode returns the TcpProbeMode field value if set, zero value otherwise.
func (o *DynamicBaseEndpointTestResult) GetTcpProbeMode() TestProbeModeResponse {
	if o == nil || utils.IsNil(o.TcpProbeMode) {
		var ret TestProbeModeResponse
		return ret
	}
	return *o.TcpProbeMode
}

// GetTcpProbeModeOk returns a tuple with the TcpProbeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicBaseEndpointTestResult) GetTcpProbeModeOk() (*TestProbeModeResponse, bool) {
	if o == nil || utils.IsNil(o.TcpProbeMode) {
		return nil, false
	}
	return o.TcpProbeMode, true
}

// HasTcpProbeMode returns a boolean if a field has been set.
func (o *DynamicBaseEndpointTestResult) HasTcpProbeMode() bool {
	if o != nil && !utils.IsNil(o.TcpProbeMode) {
		return true
	}

	return false
}

// SetTcpProbeMode gets a reference to the given TestProbeModeResponse and assigns it to the TcpProbeMode field.
func (o *DynamicBaseEndpointTestResult) SetTcpProbeMode(v TestProbeModeResponse) {
	o.TcpProbeMode = &v
}

// GetUdpProbeMode returns the UdpProbeMode field value if set, zero value otherwise.
func (o *DynamicBaseEndpointTestResult) GetUdpProbeMode() UdpProbeModeResponse {
	if o == nil || utils.IsNil(o.UdpProbeMode) {
		var ret UdpProbeModeResponse
		return ret
	}
	return *o.UdpProbeMode
}

// GetUdpProbeModeOk returns a tuple with the UdpProbeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicBaseEndpointTestResult) GetUdpProbeModeOk() (*UdpProbeModeResponse, bool) {
	if o == nil || utils.IsNil(o.UdpProbeMode) {
		return nil, false
	}
	return o.UdpProbeMode, true
}

// HasUdpProbeMode returns a boolean if a field has been set.
func (o *DynamicBaseEndpointTestResult) HasUdpProbeMode() bool {
	if o != nil && !utils.IsNil(o.UdpProbeMode) {
		return true
	}

	return false
}

// SetUdpProbeMode gets a reference to the given UdpProbeModeResponse and assigns it to the UdpProbeMode field.
func (o *DynamicBaseEndpointTestResult) SetUdpProbeMode(v UdpProbeModeResponse) {
	o.UdpProbeMode = &v
}

// GetWebex returns the Webex field value if set, zero value otherwise.
func (o *DynamicBaseEndpointTestResult) GetWebex() DynamicEndpointTestWebex {
	if o == nil || utils.IsNil(o.Webex) {
		var ret DynamicEndpointTestWebex
		return ret
	}
	return *o.Webex
}

// GetWebexOk returns a tuple with the Webex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicBaseEndpointTestResult) GetWebexOk() (*DynamicEndpointTestWebex, bool) {
	if o == nil || utils.IsNil(o.Webex) {
		return nil, false
	}
	return o.Webex, true
}

// HasWebex returns a boolean if a field has been set.
func (o *DynamicBaseEndpointTestResult) HasWebex() bool {
	if o != nil && !utils.IsNil(o.Webex) {
		return true
	}

	return false
}

// SetWebex gets a reference to the given DynamicEndpointTestWebex and assigns it to the Webex field.
func (o *DynamicBaseEndpointTestResult) SetWebex(v DynamicEndpointTestWebex) {
	o.Webex = &v
}

func (o DynamicBaseEndpointTestResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicBaseEndpointTestResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !utils.IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !utils.IsNil(o.TcpProbeMode) {
		toSerialize["tcpProbeMode"] = o.TcpProbeMode
	}
	if !utils.IsNil(o.UdpProbeMode) {
		toSerialize["udpProbeMode"] = o.UdpProbeMode
	}
	if !utils.IsNil(o.Webex) {
		toSerialize["webex"] = o.Webex
	}
	return toSerialize, nil
}

type NullableDynamicBaseEndpointTestResult struct {
	value *DynamicBaseEndpointTestResult
	isSet bool
}

func (v NullableDynamicBaseEndpointTestResult) Get() *DynamicBaseEndpointTestResult {
	return v.value
}

func (v *NullableDynamicBaseEndpointTestResult) Set(val *DynamicBaseEndpointTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicBaseEndpointTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicBaseEndpointTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicBaseEndpointTestResult(val *DynamicBaseEndpointTestResult) *NullableDynamicBaseEndpointTestResult {
	return &NullableDynamicBaseEndpointTestResult{value: val, isSet: true}
}

func (v NullableDynamicBaseEndpointTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicBaseEndpointTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


