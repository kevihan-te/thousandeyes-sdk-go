/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the HttpEndpointTestsDataSearchSort type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HttpEndpointTestsDataSearchSort{}

// HttpEndpointTestsDataSearchSort struct for HttpEndpointTestsDataSearchSort
type HttpEndpointTestsDataSearchSort struct {
	Sort *HttpEndpointTestsDataSearchSortKey `json:"sort,omitempty"`
	Order *SortOrder `json:"order,omitempty"`
}

// NewHttpEndpointTestsDataSearchSort instantiates a new HttpEndpointTestsDataSearchSort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEndpointTestsDataSearchSort() *HttpEndpointTestsDataSearchSort {
	this := HttpEndpointTestsDataSearchSort{}
	return &this
}

// NewHttpEndpointTestsDataSearchSortWithDefaults instantiates a new HttpEndpointTestsDataSearchSort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEndpointTestsDataSearchSortWithDefaults() *HttpEndpointTestsDataSearchSort {
	this := HttpEndpointTestsDataSearchSort{}
	return &this
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataSearchSort) GetSort() HttpEndpointTestsDataSearchSortKey {
	if o == nil || utils.IsNil(o.Sort) {
		var ret HttpEndpointTestsDataSearchSortKey
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataSearchSort) GetSortOk() (*HttpEndpointTestsDataSearchSortKey, bool) {
	if o == nil || utils.IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataSearchSort) HasSort() bool {
	if o != nil && !utils.IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given HttpEndpointTestsDataSearchSortKey and assigns it to the Sort field.
func (o *HttpEndpointTestsDataSearchSort) SetSort(v HttpEndpointTestsDataSearchSortKey) {
	o.Sort = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *HttpEndpointTestsDataSearchSort) GetOrder() SortOrder {
	if o == nil || utils.IsNil(o.Order) {
		var ret SortOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointTestsDataSearchSort) GetOrderOk() (*SortOrder, bool) {
	if o == nil || utils.IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *HttpEndpointTestsDataSearchSort) HasOrder() bool {
	if o != nil && !utils.IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given SortOrder and assigns it to the Order field.
func (o *HttpEndpointTestsDataSearchSort) SetOrder(v SortOrder) {
	o.Order = &v
}

func (o HttpEndpointTestsDataSearchSort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpEndpointTestsDataSearchSort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !utils.IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableHttpEndpointTestsDataSearchSort struct {
	value *HttpEndpointTestsDataSearchSort
	isSet bool
}

func (v NullableHttpEndpointTestsDataSearchSort) Get() *HttpEndpointTestsDataSearchSort {
	return v.value
}

func (v *NullableHttpEndpointTestsDataSearchSort) Set(val *HttpEndpointTestsDataSearchSort) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEndpointTestsDataSearchSort) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEndpointTestsDataSearchSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEndpointTestsDataSearchSort(val *HttpEndpointTestsDataSearchSort) *NullableHttpEndpointTestsDataSearchSort {
	return &NullableHttpEndpointTestsDataSearchSort{value: val, isSet: true}
}

func (v NullableHttpEndpointTestsDataSearchSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEndpointTestsDataSearchSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


