/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the RealUserEndpointTestPageDetailResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &RealUserEndpointTestPageDetailResult{}

// RealUserEndpointTestPageDetailResult struct for RealUserEndpointTestPageDetailResult
type RealUserEndpointTestPageDetailResult struct {
	// A HAR object according to the [HTTP Archive 1.2 specifications](http://www.softwareishard.com/blog/har-12-spec/), with an additional `systemMetrics` property.
	Har map[string]interface{} `json:"har,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

// NewRealUserEndpointTestPageDetailResult instantiates a new RealUserEndpointTestPageDetailResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRealUserEndpointTestPageDetailResult() *RealUserEndpointTestPageDetailResult {
	this := RealUserEndpointTestPageDetailResult{}
	return &this
}

// NewRealUserEndpointTestPageDetailResultWithDefaults instantiates a new RealUserEndpointTestPageDetailResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRealUserEndpointTestPageDetailResultWithDefaults() *RealUserEndpointTestPageDetailResult {
	this := RealUserEndpointTestPageDetailResult{}
	return &this
}

// GetHar returns the Har field value if set, zero value otherwise.
func (o *RealUserEndpointTestPageDetailResult) GetHar() map[string]interface{} {
	if o == nil || utils.IsNil(o.Har) {
		var ret map[string]interface{}
		return ret
	}
	return o.Har
}

// GetHarOk returns a tuple with the Har field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestPageDetailResult) GetHarOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.Har) {
		return map[string]interface{}{}, false
	}
	return o.Har, true
}

// HasHar returns a boolean if a field has been set.
func (o *RealUserEndpointTestPageDetailResult) HasHar() bool {
	if o != nil && !utils.IsNil(o.Har) {
		return true
	}

	return false
}

// SetHar gets a reference to the given map[string]interface{} and assigns it to the Har field.
func (o *RealUserEndpointTestPageDetailResult) SetHar(v map[string]interface{}) {
	o.Har = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RealUserEndpointTestPageDetailResult) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestPageDetailResult) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RealUserEndpointTestPageDetailResult) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *RealUserEndpointTestPageDetailResult) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o RealUserEndpointTestPageDetailResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RealUserEndpointTestPageDetailResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Har) {
		toSerialize["har"] = o.Har
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableRealUserEndpointTestPageDetailResult struct {
	value *RealUserEndpointTestPageDetailResult
	isSet bool
}

func (v NullableRealUserEndpointTestPageDetailResult) Get() *RealUserEndpointTestPageDetailResult {
	return v.value
}

func (v *NullableRealUserEndpointTestPageDetailResult) Set(val *RealUserEndpointTestPageDetailResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRealUserEndpointTestPageDetailResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRealUserEndpointTestPageDetailResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRealUserEndpointTestPageDetailResult(val *RealUserEndpointTestPageDetailResult) *NullableRealUserEndpointTestPageDetailResult {
	return &NullableRealUserEndpointTestPageDetailResult{value: val, isSet: true}
}

func (v NullableRealUserEndpointTestPageDetailResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRealUserEndpointTestPageDetailResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


