/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the NetworkWirelessProfile type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &NetworkWirelessProfile{}

// NetworkWirelessProfile struct for NetworkWirelessProfile
type NetworkWirelessProfile struct {
	// Wireless network SSID.
	Ssid *string `json:"ssid,omitempty"`
	// Wireless network BSSID.
	Bssid *string `json:"bssid,omitempty"`
	// Wireless network channel.
	Channel *int32 `json:"channel,omitempty"`
	// Wireless network PHY mode.
	PhyMode *string `json:"phyMode,omitempty"`
	// Wireless network RSSI.
	Rssi *int32 `json:"rssi,omitempty"`
	// Wireless network noise.
	Noise *int32 `json:"noise,omitempty"`
	// Wireless network quality.
	Quality *int32 `json:"quality,omitempty"`
	// Wireless network transmitted rate.
	TxRate *int32 `json:"txRate,omitempty"`
	// Wireless network device vendor.
	Vendor *string `json:"vendor,omitempty"`
}

// NewNetworkWirelessProfile instantiates a new NetworkWirelessProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkWirelessProfile() *NetworkWirelessProfile {
	this := NetworkWirelessProfile{}
	return &this
}

// NewNetworkWirelessProfileWithDefaults instantiates a new NetworkWirelessProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkWirelessProfileWithDefaults() *NetworkWirelessProfile {
	this := NetworkWirelessProfile{}
	return &this
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetSsid() string {
	if o == nil || utils.IsNil(o.Ssid) {
		var ret string
		return ret
	}
	return *o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetSsidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasSsid() bool {
	if o != nil && !utils.IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given string and assigns it to the Ssid field.
func (o *NetworkWirelessProfile) SetSsid(v string) {
	o.Ssid = &v
}

// GetBssid returns the Bssid field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetBssid() string {
	if o == nil || utils.IsNil(o.Bssid) {
		var ret string
		return ret
	}
	return *o.Bssid
}

// GetBssidOk returns a tuple with the Bssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetBssidOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Bssid) {
		return nil, false
	}
	return o.Bssid, true
}

// HasBssid returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasBssid() bool {
	if o != nil && !utils.IsNil(o.Bssid) {
		return true
	}

	return false
}

// SetBssid gets a reference to the given string and assigns it to the Bssid field.
func (o *NetworkWirelessProfile) SetBssid(v string) {
	o.Bssid = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetChannel() int32 {
	if o == nil || utils.IsNil(o.Channel) {
		var ret int32
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetChannelOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasChannel() bool {
	if o != nil && !utils.IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given int32 and assigns it to the Channel field.
func (o *NetworkWirelessProfile) SetChannel(v int32) {
	o.Channel = &v
}

// GetPhyMode returns the PhyMode field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetPhyMode() string {
	if o == nil || utils.IsNil(o.PhyMode) {
		var ret string
		return ret
	}
	return *o.PhyMode
}

// GetPhyModeOk returns a tuple with the PhyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetPhyModeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PhyMode) {
		return nil, false
	}
	return o.PhyMode, true
}

// HasPhyMode returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasPhyMode() bool {
	if o != nil && !utils.IsNil(o.PhyMode) {
		return true
	}

	return false
}

// SetPhyMode gets a reference to the given string and assigns it to the PhyMode field.
func (o *NetworkWirelessProfile) SetPhyMode(v string) {
	o.PhyMode = &v
}

// GetRssi returns the Rssi field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetRssi() int32 {
	if o == nil || utils.IsNil(o.Rssi) {
		var ret int32
		return ret
	}
	return *o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetRssiOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Rssi) {
		return nil, false
	}
	return o.Rssi, true
}

// HasRssi returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasRssi() bool {
	if o != nil && !utils.IsNil(o.Rssi) {
		return true
	}

	return false
}

// SetRssi gets a reference to the given int32 and assigns it to the Rssi field.
func (o *NetworkWirelessProfile) SetRssi(v int32) {
	o.Rssi = &v
}

// GetNoise returns the Noise field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetNoise() int32 {
	if o == nil || utils.IsNil(o.Noise) {
		var ret int32
		return ret
	}
	return *o.Noise
}

// GetNoiseOk returns a tuple with the Noise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetNoiseOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Noise) {
		return nil, false
	}
	return o.Noise, true
}

// HasNoise returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasNoise() bool {
	if o != nil && !utils.IsNil(o.Noise) {
		return true
	}

	return false
}

// SetNoise gets a reference to the given int32 and assigns it to the Noise field.
func (o *NetworkWirelessProfile) SetNoise(v int32) {
	o.Noise = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetQuality() int32 {
	if o == nil || utils.IsNil(o.Quality) {
		var ret int32
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetQualityOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasQuality() bool {
	if o != nil && !utils.IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given int32 and assigns it to the Quality field.
func (o *NetworkWirelessProfile) SetQuality(v int32) {
	o.Quality = &v
}

// GetTxRate returns the TxRate field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetTxRate() int32 {
	if o == nil || utils.IsNil(o.TxRate) {
		var ret int32
		return ret
	}
	return *o.TxRate
}

// GetTxRateOk returns a tuple with the TxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetTxRateOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.TxRate) {
		return nil, false
	}
	return o.TxRate, true
}

// HasTxRate returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasTxRate() bool {
	if o != nil && !utils.IsNil(o.TxRate) {
		return true
	}

	return false
}

// SetTxRate gets a reference to the given int32 and assigns it to the TxRate field.
func (o *NetworkWirelessProfile) SetTxRate(v int32) {
	o.TxRate = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *NetworkWirelessProfile) GetVendor() string {
	if o == nil || utils.IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkWirelessProfile) GetVendorOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *NetworkWirelessProfile) HasVendor() bool {
	if o != nil && !utils.IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *NetworkWirelessProfile) SetVendor(v string) {
	o.Vendor = &v
}

func (o NetworkWirelessProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkWirelessProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !utils.IsNil(o.Bssid) {
		toSerialize["bssid"] = o.Bssid
	}
	if !utils.IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !utils.IsNil(o.PhyMode) {
		toSerialize["phyMode"] = o.PhyMode
	}
	if !utils.IsNil(o.Rssi) {
		toSerialize["rssi"] = o.Rssi
	}
	if !utils.IsNil(o.Noise) {
		toSerialize["noise"] = o.Noise
	}
	if !utils.IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !utils.IsNil(o.TxRate) {
		toSerialize["txRate"] = o.TxRate
	}
	if !utils.IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	return toSerialize, nil
}

type NullableNetworkWirelessProfile struct {
	value *NetworkWirelessProfile
	isSet bool
}

func (v NullableNetworkWirelessProfile) Get() *NetworkWirelessProfile {
	return v.value
}

func (v *NullableNetworkWirelessProfile) Set(val *NetworkWirelessProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkWirelessProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkWirelessProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkWirelessProfile(val *NetworkWirelessProfile) *NullableNetworkWirelessProfile {
	return &NullableNetworkWirelessProfile{value: val, isSet: true}
}

func (v NullableNetworkWirelessProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkWirelessProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


