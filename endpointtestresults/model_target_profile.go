/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the TargetProfile type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TargetProfile{}

// TargetProfile struct for TargetProfile
type TargetProfile struct {
	// The remote port of a network flow towards the target.
	RemotePort *int32 `json:"remotePort,omitempty"`
	// The remote IP address of a network flow towards the target.
	RemoteIpAddress *string `json:"remoteIpAddress,omitempty"`
	Protocol *TestProtocol `json:"protocol,omitempty"`
}

// NewTargetProfile instantiates a new TargetProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetProfile() *TargetProfile {
	this := TargetProfile{}
	var protocol TestProtocol = TESTPROTOCOL_TCP
	this.Protocol = &protocol
	return &this
}

// NewTargetProfileWithDefaults instantiates a new TargetProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetProfileWithDefaults() *TargetProfile {
	this := TargetProfile{}
	var protocol TestProtocol = TESTPROTOCOL_TCP
	this.Protocol = &protocol
	return &this
}

// GetRemotePort returns the RemotePort field value if set, zero value otherwise.
func (o *TargetProfile) GetRemotePort() int32 {
	if o == nil || utils.IsNil(o.RemotePort) {
		var ret int32
		return ret
	}
	return *o.RemotePort
}

// GetRemotePortOk returns a tuple with the RemotePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetProfile) GetRemotePortOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RemotePort) {
		return nil, false
	}
	return o.RemotePort, true
}

// HasRemotePort returns a boolean if a field has been set.
func (o *TargetProfile) HasRemotePort() bool {
	if o != nil && !utils.IsNil(o.RemotePort) {
		return true
	}

	return false
}

// SetRemotePort gets a reference to the given int32 and assigns it to the RemotePort field.
func (o *TargetProfile) SetRemotePort(v int32) {
	o.RemotePort = &v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value if set, zero value otherwise.
func (o *TargetProfile) GetRemoteIpAddress() string {
	if o == nil || utils.IsNil(o.RemoteIpAddress) {
		var ret string
		return ret
	}
	return *o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetProfile) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil || utils.IsNil(o.RemoteIpAddress) {
		return nil, false
	}
	return o.RemoteIpAddress, true
}

// HasRemoteIpAddress returns a boolean if a field has been set.
func (o *TargetProfile) HasRemoteIpAddress() bool {
	if o != nil && !utils.IsNil(o.RemoteIpAddress) {
		return true
	}

	return false
}

// SetRemoteIpAddress gets a reference to the given string and assigns it to the RemoteIpAddress field.
func (o *TargetProfile) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *TargetProfile) GetProtocol() TestProtocol {
	if o == nil || utils.IsNil(o.Protocol) {
		var ret TestProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetProfile) GetProtocolOk() (*TestProtocol, bool) {
	if o == nil || utils.IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *TargetProfile) HasProtocol() bool {
	if o != nil && !utils.IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given TestProtocol and assigns it to the Protocol field.
func (o *TargetProfile) SetProtocol(v TestProtocol) {
	o.Protocol = &v
}

func (o TargetProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.RemotePort) {
		toSerialize["remotePort"] = o.RemotePort
	}
	if !utils.IsNil(o.RemoteIpAddress) {
		toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	}
	if !utils.IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return toSerialize, nil
}

type NullableTargetProfile struct {
	value *TargetProfile
	isSet bool
}

func (v NullableTargetProfile) Get() *TargetProfile {
	return v.value
}

func (v *NullableTargetProfile) Set(val *TargetProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetProfile(val *TargetProfile) *NullableTargetProfile {
	return &NullableTargetProfile{value: val, isSet: true}
}

func (v NullableTargetProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


