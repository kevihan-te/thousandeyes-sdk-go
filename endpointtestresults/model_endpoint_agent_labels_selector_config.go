/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"fmt"
)

// checks if the EndpointAgentLabelsSelectorConfig type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointAgentLabelsSelectorConfig{}

// EndpointAgentLabelsSelectorConfig Agent labels selection object.
type EndpointAgentLabelsSelectorConfig struct {
	AgentSelectorType string `json:"agentSelectorType"`
	// Maximum number of agents which can execute the test.
	MaxMachines *int32 `json:"maxMachines,omitempty"`
	// List of endpoint agent label IDs (obtained from `/endpoint/labels` endpoint), required when `agentSelectorType` is set to `agent-labels`.
	EndpointAgentLabels []string `json:"endpointAgentLabels,omitempty"`
}

type _EndpointAgentLabelsSelectorConfig EndpointAgentLabelsSelectorConfig

// NewEndpointAgentLabelsSelectorConfig instantiates a new EndpointAgentLabelsSelectorConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointAgentLabelsSelectorConfig(agentSelectorType string) *EndpointAgentLabelsSelectorConfig {
	this := EndpointAgentLabelsSelectorConfig{}
	this.AgentSelectorType = agentSelectorType
	var maxMachines int32 = 25
	this.MaxMachines = &maxMachines
	return &this
}

// NewEndpointAgentLabelsSelectorConfigWithDefaults instantiates a new EndpointAgentLabelsSelectorConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointAgentLabelsSelectorConfigWithDefaults() *EndpointAgentLabelsSelectorConfig {
	this := EndpointAgentLabelsSelectorConfig{}
	var maxMachines int32 = 25
	this.MaxMachines = &maxMachines
	return &this
}

// GetAgentSelectorType returns the AgentSelectorType field value
func (o *EndpointAgentLabelsSelectorConfig) GetAgentSelectorType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentSelectorType
}

// GetAgentSelectorTypeOk returns a tuple with the AgentSelectorType field value
// and a boolean to check if the value has been set.
func (o *EndpointAgentLabelsSelectorConfig) GetAgentSelectorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentSelectorType, true
}

// SetAgentSelectorType sets field value
func (o *EndpointAgentLabelsSelectorConfig) SetAgentSelectorType(v string) {
	o.AgentSelectorType = v
}

// GetMaxMachines returns the MaxMachines field value if set, zero value otherwise.
func (o *EndpointAgentLabelsSelectorConfig) GetMaxMachines() int32 {
	if o == nil || utils.IsNil(o.MaxMachines) {
		var ret int32
		return ret
	}
	return *o.MaxMachines
}

// GetMaxMachinesOk returns a tuple with the MaxMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentLabelsSelectorConfig) GetMaxMachinesOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.MaxMachines) {
		return nil, false
	}
	return o.MaxMachines, true
}

// HasMaxMachines returns a boolean if a field has been set.
func (o *EndpointAgentLabelsSelectorConfig) HasMaxMachines() bool {
	if o != nil && !utils.IsNil(o.MaxMachines) {
		return true
	}

	return false
}

// SetMaxMachines gets a reference to the given int32 and assigns it to the MaxMachines field.
func (o *EndpointAgentLabelsSelectorConfig) SetMaxMachines(v int32) {
	o.MaxMachines = &v
}

// GetEndpointAgentLabels returns the EndpointAgentLabels field value if set, zero value otherwise.
func (o *EndpointAgentLabelsSelectorConfig) GetEndpointAgentLabels() []string {
	if o == nil || utils.IsNil(o.EndpointAgentLabels) {
		var ret []string
		return ret
	}
	return o.EndpointAgentLabels
}

// GetEndpointAgentLabelsOk returns a tuple with the EndpointAgentLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointAgentLabelsSelectorConfig) GetEndpointAgentLabelsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.EndpointAgentLabels) {
		return nil, false
	}
	return o.EndpointAgentLabels, true
}

// HasEndpointAgentLabels returns a boolean if a field has been set.
func (o *EndpointAgentLabelsSelectorConfig) HasEndpointAgentLabels() bool {
	if o != nil && !utils.IsNil(o.EndpointAgentLabels) {
		return true
	}

	return false
}

// SetEndpointAgentLabels gets a reference to the given []string and assigns it to the EndpointAgentLabels field.
func (o *EndpointAgentLabelsSelectorConfig) SetEndpointAgentLabels(v []string) {
	o.EndpointAgentLabels = v
}

func (o EndpointAgentLabelsSelectorConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointAgentLabelsSelectorConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agentSelectorType"] = o.AgentSelectorType
	if !utils.IsNil(o.MaxMachines) {
		toSerialize["maxMachines"] = o.MaxMachines
	}
	if !utils.IsNil(o.EndpointAgentLabels) {
		toSerialize["endpointAgentLabels"] = o.EndpointAgentLabels
	}
	return toSerialize, nil
}

func (o *EndpointAgentLabelsSelectorConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agentSelectorType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointAgentLabelsSelectorConfig := _EndpointAgentLabelsSelectorConfig{}

    err = json.Unmarshal(data, &varEndpointAgentLabelsSelectorConfig)

	if err != nil {
		return err
	}

	*o = EndpointAgentLabelsSelectorConfig(varEndpointAgentLabelsSelectorConfig)

	return err
}

type NullableEndpointAgentLabelsSelectorConfig struct {
	value *EndpointAgentLabelsSelectorConfig
	isSet bool
}

func (v NullableEndpointAgentLabelsSelectorConfig) Get() *EndpointAgentLabelsSelectorConfig {
	return v.value
}

func (v *NullableEndpointAgentLabelsSelectorConfig) Set(val *EndpointAgentLabelsSelectorConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointAgentLabelsSelectorConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointAgentLabelsSelectorConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointAgentLabelsSelectorConfig(val *EndpointAgentLabelsSelectorConfig) *NullableEndpointAgentLabelsSelectorConfig {
	return &NullableEndpointAgentLabelsSelectorConfig{value: val, isSet: true}
}

func (v NullableEndpointAgentLabelsSelectorConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointAgentLabelsSelectorConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


