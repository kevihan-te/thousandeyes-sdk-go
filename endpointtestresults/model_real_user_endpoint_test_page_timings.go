/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the RealUserEndpointTestPageTimings type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &RealUserEndpointTestPageTimings{}

// RealUserEndpointTestPageTimings struct for RealUserEndpointTestPageTimings
type RealUserEndpointTestPageTimings struct {
	// DOM load time in milliseconds.
	OnContentLoad *int32 `json:"onContentLoad,omitempty"`
	// Page load time in milliseconds.
	OnLoad *int32 `json:"onLoad,omitempty"`
}

// NewRealUserEndpointTestPageTimings instantiates a new RealUserEndpointTestPageTimings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRealUserEndpointTestPageTimings() *RealUserEndpointTestPageTimings {
	this := RealUserEndpointTestPageTimings{}
	return &this
}

// NewRealUserEndpointTestPageTimingsWithDefaults instantiates a new RealUserEndpointTestPageTimings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRealUserEndpointTestPageTimingsWithDefaults() *RealUserEndpointTestPageTimings {
	this := RealUserEndpointTestPageTimings{}
	return &this
}

// GetOnContentLoad returns the OnContentLoad field value if set, zero value otherwise.
func (o *RealUserEndpointTestPageTimings) GetOnContentLoad() int32 {
	if o == nil || utils.IsNil(o.OnContentLoad) {
		var ret int32
		return ret
	}
	return *o.OnContentLoad
}

// GetOnContentLoadOk returns a tuple with the OnContentLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestPageTimings) GetOnContentLoadOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.OnContentLoad) {
		return nil, false
	}
	return o.OnContentLoad, true
}

// HasOnContentLoad returns a boolean if a field has been set.
func (o *RealUserEndpointTestPageTimings) HasOnContentLoad() bool {
	if o != nil && !utils.IsNil(o.OnContentLoad) {
		return true
	}

	return false
}

// SetOnContentLoad gets a reference to the given int32 and assigns it to the OnContentLoad field.
func (o *RealUserEndpointTestPageTimings) SetOnContentLoad(v int32) {
	o.OnContentLoad = &v
}

// GetOnLoad returns the OnLoad field value if set, zero value otherwise.
func (o *RealUserEndpointTestPageTimings) GetOnLoad() int32 {
	if o == nil || utils.IsNil(o.OnLoad) {
		var ret int32
		return ret
	}
	return *o.OnLoad
}

// GetOnLoadOk returns a tuple with the OnLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealUserEndpointTestPageTimings) GetOnLoadOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.OnLoad) {
		return nil, false
	}
	return o.OnLoad, true
}

// HasOnLoad returns a boolean if a field has been set.
func (o *RealUserEndpointTestPageTimings) HasOnLoad() bool {
	if o != nil && !utils.IsNil(o.OnLoad) {
		return true
	}

	return false
}

// SetOnLoad gets a reference to the given int32 and assigns it to the OnLoad field.
func (o *RealUserEndpointTestPageTimings) SetOnLoad(v int32) {
	o.OnLoad = &v
}

func (o RealUserEndpointTestPageTimings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RealUserEndpointTestPageTimings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.OnContentLoad) {
		toSerialize["onContentLoad"] = o.OnContentLoad
	}
	if !utils.IsNil(o.OnLoad) {
		toSerialize["onLoad"] = o.OnLoad
	}
	return toSerialize, nil
}

type NullableRealUserEndpointTestPageTimings struct {
	value *RealUserEndpointTestPageTimings
	isSet bool
}

func (v NullableRealUserEndpointTestPageTimings) Get() *RealUserEndpointTestPageTimings {
	return v.value
}

func (v *NullableRealUserEndpointTestPageTimings) Set(val *RealUserEndpointTestPageTimings) {
	v.value = val
	v.isSet = true
}

func (v NullableRealUserEndpointTestPageTimings) IsSet() bool {
	return v.isSet
}

func (v *NullableRealUserEndpointTestPageTimings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRealUserEndpointTestPageTimings(val *RealUserEndpointTestPageTimings) *NullableRealUserEndpointTestPageTimings {
	return &NullableRealUserEndpointTestPageTimings{value: val, isSet: true}
}

func (v NullableRealUserEndpointTestPageTimings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRealUserEndpointTestPageTimings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


