/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the EndpointPathVisHop type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &EndpointPathVisHop{}

// EndpointPathVisHop struct for EndpointPathVisHop
type EndpointPathVisHop struct {
	// The hop index.
	Hop *int32 `json:"hop,omitempty"`
	// IP address of the hop.
	IpAddress *string `json:"ipAddress,omitempty"`
	// Prefix of IP address shown in CIDR.
	Prefix *string `json:"prefix,omitempty"`
	// Reverse DNS entry of IP, if available.
	Rdns *string `json:"rdns,omitempty"`
	// Autonomous System originating the prefix.
	Network *string `json:"network,omitempty"`
	// RTT to the hopâ€™s IP in milliseconds.
	ResponseTime *int32 `json:"responseTime,omitempty"`
	// Location information for the hop.
	Location *string `json:"location,omitempty"`
}

// NewEndpointPathVisHop instantiates a new EndpointPathVisHop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointPathVisHop() *EndpointPathVisHop {
	this := EndpointPathVisHop{}
	return &this
}

// NewEndpointPathVisHopWithDefaults instantiates a new EndpointPathVisHop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointPathVisHopWithDefaults() *EndpointPathVisHop {
	this := EndpointPathVisHop{}
	return &this
}

// GetHop returns the Hop field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetHop() int32 {
	if o == nil || utils.IsNil(o.Hop) {
		var ret int32
		return ret
	}
	return *o.Hop
}

// GetHopOk returns a tuple with the Hop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetHopOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Hop) {
		return nil, false
	}
	return o.Hop, true
}

// HasHop returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasHop() bool {
	if o != nil && !utils.IsNil(o.Hop) {
		return true
	}

	return false
}

// SetHop gets a reference to the given int32 and assigns it to the Hop field.
func (o *EndpointPathVisHop) SetHop(v int32) {
	o.Hop = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetIpAddress() string {
	if o == nil || utils.IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetIpAddressOk() (*string, bool) {
	if o == nil || utils.IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasIpAddress() bool {
	if o != nil && !utils.IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *EndpointPathVisHop) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetPrefix() string {
	if o == nil || utils.IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetPrefixOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasPrefix() bool {
	if o != nil && !utils.IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *EndpointPathVisHop) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRdns returns the Rdns field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetRdns() string {
	if o == nil || utils.IsNil(o.Rdns) {
		var ret string
		return ret
	}
	return *o.Rdns
}

// GetRdnsOk returns a tuple with the Rdns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetRdnsOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Rdns) {
		return nil, false
	}
	return o.Rdns, true
}

// HasRdns returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasRdns() bool {
	if o != nil && !utils.IsNil(o.Rdns) {
		return true
	}

	return false
}

// SetRdns gets a reference to the given string and assigns it to the Rdns field.
func (o *EndpointPathVisHop) SetRdns(v string) {
	o.Rdns = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetNetwork() string {
	if o == nil || utils.IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetNetworkOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasNetwork() bool {
	if o != nil && !utils.IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *EndpointPathVisHop) SetNetwork(v string) {
	o.Network = &v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetResponseTime() int32 {
	if o == nil || utils.IsNil(o.ResponseTime) {
		var ret int32
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetResponseTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ResponseTime) {
		return nil, false
	}
	return o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasResponseTime() bool {
	if o != nil && !utils.IsNil(o.ResponseTime) {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given int32 and assigns it to the ResponseTime field.
func (o *EndpointPathVisHop) SetResponseTime(v int32) {
	o.ResponseTime = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *EndpointPathVisHop) GetLocation() string {
	if o == nil || utils.IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointPathVisHop) GetLocationOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *EndpointPathVisHop) HasLocation() bool {
	if o != nil && !utils.IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *EndpointPathVisHop) SetLocation(v string) {
	o.Location = &v
}

func (o EndpointPathVisHop) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointPathVisHop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Hop) {
		toSerialize["hop"] = o.Hop
	}
	if !utils.IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !utils.IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !utils.IsNil(o.Rdns) {
		toSerialize["rdns"] = o.Rdns
	}
	if !utils.IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !utils.IsNil(o.ResponseTime) {
		toSerialize["responseTime"] = o.ResponseTime
	}
	if !utils.IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullableEndpointPathVisHop struct {
	value *EndpointPathVisHop
	isSet bool
}

func (v NullableEndpointPathVisHop) Get() *EndpointPathVisHop {
	return v.value
}

func (v *NullableEndpointPathVisHop) Set(val *EndpointPathVisHop) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointPathVisHop) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointPathVisHop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointPathVisHop(val *EndpointPathVisHop) *NullableEndpointPathVisHop {
	return &NullableEndpointPathVisHop{value: val, isSet: true}
}

func (v NullableEndpointPathVisHop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointPathVisHop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


