/*
Endpoint Test Results API

Retrieve results for scheduled and dynamic tests on endpoint agents.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpointtestresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the LocalNetworkTopologyResults type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &LocalNetworkTopologyResults{}

// LocalNetworkTopologyResults struct for LocalNetworkTopologyResults
type LocalNetworkTopologyResults struct {
	Results []LocalNetworkTopologyResultBase `json:"results,omitempty"`
	// (Optional) When passing `window` or `startDate` parameter,  the client will also receive the `startDate` field indicating the UTC start date of the data's time range being retrieved  (ISO date-time format).
	StartDate *time.Time `json:"startDate,omitempty"`
	// (Optional) When passing `window` or `endDate` parameter,  the client will also receive the `endDate` field indicating the UTC end date of the data's time range being retrieved  (ISO date-time format).
	EndDate *time.Time `json:"endDate,omitempty"`
	Links *PaginationNextLink `json:"_links,omitempty"`
}

// NewLocalNetworkTopologyResults instantiates a new LocalNetworkTopologyResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalNetworkTopologyResults() *LocalNetworkTopologyResults {
	this := LocalNetworkTopologyResults{}
	return &this
}

// NewLocalNetworkTopologyResultsWithDefaults instantiates a new LocalNetworkTopologyResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalNetworkTopologyResultsWithDefaults() *LocalNetworkTopologyResults {
	this := LocalNetworkTopologyResults{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *LocalNetworkTopologyResults) GetResults() []LocalNetworkTopologyResultBase {
	if o == nil || utils.IsNil(o.Results) {
		var ret []LocalNetworkTopologyResultBase
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkTopologyResults) GetResultsOk() ([]LocalNetworkTopologyResultBase, bool) {
	if o == nil || utils.IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *LocalNetworkTopologyResults) HasResults() bool {
	if o != nil && !utils.IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []LocalNetworkTopologyResultBase and assigns it to the Results field.
func (o *LocalNetworkTopologyResults) SetResults(v []LocalNetworkTopologyResultBase) {
	o.Results = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *LocalNetworkTopologyResults) GetStartDate() time.Time {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkTopologyResults) GetStartDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *LocalNetworkTopologyResults) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *LocalNetworkTopologyResults) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *LocalNetworkTopologyResults) GetEndDate() time.Time {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkTopologyResults) GetEndDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *LocalNetworkTopologyResults) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *LocalNetworkTopologyResults) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *LocalNetworkTopologyResults) GetLinks() PaginationNextLink {
	if o == nil || utils.IsNil(o.Links) {
		var ret PaginationNextLink
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNetworkTopologyResults) GetLinksOk() (*PaginationNextLink, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *LocalNetworkTopologyResults) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given PaginationNextLink and assigns it to the Links field.
func (o *LocalNetworkTopologyResults) SetLinks(v PaginationNextLink) {
	o.Links = &v
}

func (o LocalNetworkTopologyResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalNetworkTopologyResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !utils.IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableLocalNetworkTopologyResults struct {
	value *LocalNetworkTopologyResults
	isSet bool
}

func (v NullableLocalNetworkTopologyResults) Get() *LocalNetworkTopologyResults {
	return v.value
}

func (v *NullableLocalNetworkTopologyResults) Set(val *LocalNetworkTopologyResults) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalNetworkTopologyResults) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalNetworkTopologyResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalNetworkTopologyResults(val *LocalNetworkTopologyResults) *NullableLocalNetworkTopologyResults {
	return &NullableLocalNetworkTopologyResults{value: val, isSet: true}
}

func (v NullableLocalNetworkTopologyResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalNetworkTopologyResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


