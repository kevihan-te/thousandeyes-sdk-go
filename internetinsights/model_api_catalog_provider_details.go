/*
Internet Insights API

We are happy to announce the release of the Internet Insights API set. This limited release includes endpoints that:  * Make our catalog provider and Internet outage data accessible to API users. * Provide access to advanced filtering, which is part of our next-generation API efforts to allow API users to fine-tune queries across all of our APIs in a consistent manner.  Internet Insights provide visibility into core Internet infrastructure, including ISPs, DNS providers, IaaS, CDNs , and SaaS providers. It tracks the macro-level impact of Internet events on individual users and enterprise networks connecting at the edge of the Internet. These events include Outages, Routing hijacks and leaks, DDoS attacks, And political interference, among others.  Future releases of the Internet Insights API set will further unlock access to core Internet Insights functionality, unlocking potential integrations to enrich customer process flows.  For more information about Internet Insights, see the [Internet Insights](https://docs.thousandeyes.com/product-documentation/internet-insights). 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package internetinsights

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiCatalogProviderDetails type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiCatalogProviderDetails{}

// ApiCatalogProviderDetails struct for ApiCatalogProviderDetails
type ApiCatalogProviderDetails struct {
	// The catalog provider ID.
	Id *string `json:"id,omitempty"`
	// The name of the catalog provider.
	ProviderName *string `json:"providerName,omitempty"`
	// The type of catalog provider.
	ProviderType *string `json:"providerType,omitempty"`
	// The catalog provider region.
	Region *string `json:"region,omitempty"`
	// The type of data produced by the provider.
	DataType *string `json:"dataType,omitempty"`
	// List of ASN's covered by the Provider.
	Asns []ApiAsn `json:"asns,omitempty"`
	// List of locations covered by the Provider.
	Locations []ProviderLocation `json:"locations,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

// NewApiCatalogProviderDetails instantiates a new ApiCatalogProviderDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCatalogProviderDetails() *ApiCatalogProviderDetails {
	this := ApiCatalogProviderDetails{}
	return &this
}

// NewApiCatalogProviderDetailsWithDefaults instantiates a new ApiCatalogProviderDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCatalogProviderDetailsWithDefaults() *ApiCatalogProviderDetails {
	this := ApiCatalogProviderDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetId() string {
	if o == nil || utils.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiCatalogProviderDetails) SetId(v string) {
	o.Id = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetProviderName() string {
	if o == nil || utils.IsNil(o.ProviderName) {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetProviderNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProviderName) {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasProviderName() bool {
	if o != nil && !utils.IsNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *ApiCatalogProviderDetails) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetProviderType() string {
	if o == nil || utils.IsNil(o.ProviderType) {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetProviderTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProviderType) {
		return nil, false
	}
	return o.ProviderType, true
}

// HasProviderType returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasProviderType() bool {
	if o != nil && !utils.IsNil(o.ProviderType) {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *ApiCatalogProviderDetails) SetProviderType(v string) {
	o.ProviderType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetRegion() string {
	if o == nil || utils.IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetRegionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasRegion() bool {
	if o != nil && !utils.IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ApiCatalogProviderDetails) SetRegion(v string) {
	o.Region = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetDataType() string {
	if o == nil || utils.IsNil(o.DataType) {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetDataTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.DataType) {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasDataType() bool {
	if o != nil && !utils.IsNil(o.DataType) {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *ApiCatalogProviderDetails) SetDataType(v string) {
	o.DataType = &v
}

// GetAsns returns the Asns field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetAsns() []ApiAsn {
	if o == nil || utils.IsNil(o.Asns) {
		var ret []ApiAsn
		return ret
	}
	return o.Asns
}

// GetAsnsOk returns a tuple with the Asns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetAsnsOk() ([]ApiAsn, bool) {
	if o == nil || utils.IsNil(o.Asns) {
		return nil, false
	}
	return o.Asns, true
}

// HasAsns returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasAsns() bool {
	if o != nil && !utils.IsNil(o.Asns) {
		return true
	}

	return false
}

// SetAsns gets a reference to the given []ApiAsn and assigns it to the Asns field.
func (o *ApiCatalogProviderDetails) SetAsns(v []ApiAsn) {
	o.Asns = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetLocations() []ProviderLocation {
	if o == nil || utils.IsNil(o.Locations) {
		var ret []ProviderLocation
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetLocationsOk() ([]ProviderLocation, bool) {
	if o == nil || utils.IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasLocations() bool {
	if o != nil && !utils.IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []ProviderLocation and assigns it to the Locations field.
func (o *ApiCatalogProviderDetails) SetLocations(v []ProviderLocation) {
	o.Locations = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApiCatalogProviderDetails) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCatalogProviderDetails) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApiCatalogProviderDetails) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *ApiCatalogProviderDetails) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o ApiCatalogProviderDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCatalogProviderDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !utils.IsNil(o.ProviderName) {
		toSerialize["providerName"] = o.ProviderName
	}
	if !utils.IsNil(o.ProviderType) {
		toSerialize["providerType"] = o.ProviderType
	}
	if !utils.IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !utils.IsNil(o.DataType) {
		toSerialize["dataType"] = o.DataType
	}
	if !utils.IsNil(o.Asns) {
		toSerialize["asns"] = o.Asns
	}
	if !utils.IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableApiCatalogProviderDetails struct {
	value *ApiCatalogProviderDetails
	isSet bool
}

func (v NullableApiCatalogProviderDetails) Get() *ApiCatalogProviderDetails {
	return v.value
}

func (v *NullableApiCatalogProviderDetails) Set(val *ApiCatalogProviderDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCatalogProviderDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCatalogProviderDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCatalogProviderDetails(val *ApiCatalogProviderDetails) *NullableApiCatalogProviderDetails {
	return &NullableApiCatalogProviderDetails{value: val, isSet: true}
}

func (v NullableApiCatalogProviderDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCatalogProviderDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


