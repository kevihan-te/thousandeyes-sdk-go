/*
Internet Insights API

We are happy to announce the release of the Internet Insights API set. This limited release includes endpoints that:  * Make our catalog provider and Internet outage data accessible to API users. * Provide access to advanced filtering, which is part of our next-generation API efforts to allow API users to fine-tune queries across all of our APIs in a consistent manner.  Internet Insights provide visibility into core Internet infrastructure, including ISPs, DNS providers, IaaS, CDNs , and SaaS providers. It tracks the macro-level impact of Internet events on individual users and enterprise networks connecting at the edge of the Internet. These events include Outages, Routing hijacks and leaks, DDoS attacks, And political interference, among others.  Future releases of the Internet Insights API set will further unlock access to core Internet Insights functionality, unlocking potential integrations to enrich customer process flows.  For more information about Internet Insights, see the [Internet Insights](https://docs.thousandeyes.com/product-documentation/internet-insights). 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package internetinsights

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiOutage type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiOutage{}

// ApiOutage List of outages.
type ApiOutage struct {
	// The ID of the outage.
	Id *string `json:"id,omitempty"`
	// The type of outage e.g. app.
	Type *string `json:"type,omitempty"`
	// The name of the affected provider.
	ProviderName *string `json:"providerName,omitempty"`
	// The type of the affected provider.
	ProviderType *string `json:"providerType,omitempty"`
	// The name of the affected application.
	Name *string `json:"name,omitempty"`
	// Date and time when the outage started.
	StartDate *string `json:"startDate,omitempty"`
	// Epoch time (seconds) when the outage started.
	StartRoundId *int64 `json:"startRoundId,omitempty"`
	// Date and time when the outage ended.
	EndDate *string `json:"endDate,omitempty"`
	// Epoch time (seconds) when the outage ended.
	EndRoundId *int64 `json:"endRoundId,omitempty"`
	// Duration of the outage (seconds)
	Duration *int64 `json:"duration,omitempty"`
	// The number of affected tests
	AffectedTestsCount *int32 `json:"affectedTestsCount,omitempty"`
	// The number of affected servers
	AffectedServersCount *int32 `json:"affectedServersCount,omitempty"`
	// The number of affected locations.
	AffectedLocationsCount *int32 `json:"affectedLocationsCount,omitempty"`
	// The number of affected interfaces.
	AffectedInterfacesCount *int32 `json:"affectedInterfacesCount,omitempty"`
	// ASN number.
	Asn *int32 `json:"asn,omitempty"`
	Links *SelfLinks `json:"_links,omitempty"`
}

// NewApiOutage instantiates a new ApiOutage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOutage() *ApiOutage {
	this := ApiOutage{}
	return &this
}

// NewApiOutageWithDefaults instantiates a new ApiOutage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOutageWithDefaults() *ApiOutage {
	this := ApiOutage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiOutage) GetId() string {
	if o == nil || utils.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiOutage) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiOutage) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiOutage) GetType() string {
	if o == nil || utils.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiOutage) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiOutage) SetType(v string) {
	o.Type = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *ApiOutage) GetProviderName() string {
	if o == nil || utils.IsNil(o.ProviderName) {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetProviderNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProviderName) {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *ApiOutage) HasProviderName() bool {
	if o != nil && !utils.IsNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *ApiOutage) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *ApiOutage) GetProviderType() string {
	if o == nil || utils.IsNil(o.ProviderType) {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetProviderTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProviderType) {
		return nil, false
	}
	return o.ProviderType, true
}

// HasProviderType returns a boolean if a field has been set.
func (o *ApiOutage) HasProviderType() bool {
	if o != nil && !utils.IsNil(o.ProviderType) {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *ApiOutage) SetProviderType(v string) {
	o.ProviderType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiOutage) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiOutage) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiOutage) SetName(v string) {
	o.Name = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ApiOutage) GetStartDate() string {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ApiOutage) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ApiOutage) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStartRoundId returns the StartRoundId field value if set, zero value otherwise.
func (o *ApiOutage) GetStartRoundId() int64 {
	if o == nil || utils.IsNil(o.StartRoundId) {
		var ret int64
		return ret
	}
	return *o.StartRoundId
}

// GetStartRoundIdOk returns a tuple with the StartRoundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetStartRoundIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.StartRoundId) {
		return nil, false
	}
	return o.StartRoundId, true
}

// HasStartRoundId returns a boolean if a field has been set.
func (o *ApiOutage) HasStartRoundId() bool {
	if o != nil && !utils.IsNil(o.StartRoundId) {
		return true
	}

	return false
}

// SetStartRoundId gets a reference to the given int64 and assigns it to the StartRoundId field.
func (o *ApiOutage) SetStartRoundId(v int64) {
	o.StartRoundId = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ApiOutage) GetEndDate() string {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ApiOutage) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ApiOutage) SetEndDate(v string) {
	o.EndDate = &v
}

// GetEndRoundId returns the EndRoundId field value if set, zero value otherwise.
func (o *ApiOutage) GetEndRoundId() int64 {
	if o == nil || utils.IsNil(o.EndRoundId) {
		var ret int64
		return ret
	}
	return *o.EndRoundId
}

// GetEndRoundIdOk returns a tuple with the EndRoundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetEndRoundIdOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.EndRoundId) {
		return nil, false
	}
	return o.EndRoundId, true
}

// HasEndRoundId returns a boolean if a field has been set.
func (o *ApiOutage) HasEndRoundId() bool {
	if o != nil && !utils.IsNil(o.EndRoundId) {
		return true
	}

	return false
}

// SetEndRoundId gets a reference to the given int64 and assigns it to the EndRoundId field.
func (o *ApiOutage) SetEndRoundId(v int64) {
	o.EndRoundId = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ApiOutage) GetDuration() int64 {
	if o == nil || utils.IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetDurationOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ApiOutage) HasDuration() bool {
	if o != nil && !utils.IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *ApiOutage) SetDuration(v int64) {
	o.Duration = &v
}

// GetAffectedTestsCount returns the AffectedTestsCount field value if set, zero value otherwise.
func (o *ApiOutage) GetAffectedTestsCount() int32 {
	if o == nil || utils.IsNil(o.AffectedTestsCount) {
		var ret int32
		return ret
	}
	return *o.AffectedTestsCount
}

// GetAffectedTestsCountOk returns a tuple with the AffectedTestsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetAffectedTestsCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.AffectedTestsCount) {
		return nil, false
	}
	return o.AffectedTestsCount, true
}

// HasAffectedTestsCount returns a boolean if a field has been set.
func (o *ApiOutage) HasAffectedTestsCount() bool {
	if o != nil && !utils.IsNil(o.AffectedTestsCount) {
		return true
	}

	return false
}

// SetAffectedTestsCount gets a reference to the given int32 and assigns it to the AffectedTestsCount field.
func (o *ApiOutage) SetAffectedTestsCount(v int32) {
	o.AffectedTestsCount = &v
}

// GetAffectedServersCount returns the AffectedServersCount field value if set, zero value otherwise.
func (o *ApiOutage) GetAffectedServersCount() int32 {
	if o == nil || utils.IsNil(o.AffectedServersCount) {
		var ret int32
		return ret
	}
	return *o.AffectedServersCount
}

// GetAffectedServersCountOk returns a tuple with the AffectedServersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetAffectedServersCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.AffectedServersCount) {
		return nil, false
	}
	return o.AffectedServersCount, true
}

// HasAffectedServersCount returns a boolean if a field has been set.
func (o *ApiOutage) HasAffectedServersCount() bool {
	if o != nil && !utils.IsNil(o.AffectedServersCount) {
		return true
	}

	return false
}

// SetAffectedServersCount gets a reference to the given int32 and assigns it to the AffectedServersCount field.
func (o *ApiOutage) SetAffectedServersCount(v int32) {
	o.AffectedServersCount = &v
}

// GetAffectedLocationsCount returns the AffectedLocationsCount field value if set, zero value otherwise.
func (o *ApiOutage) GetAffectedLocationsCount() int32 {
	if o == nil || utils.IsNil(o.AffectedLocationsCount) {
		var ret int32
		return ret
	}
	return *o.AffectedLocationsCount
}

// GetAffectedLocationsCountOk returns a tuple with the AffectedLocationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetAffectedLocationsCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.AffectedLocationsCount) {
		return nil, false
	}
	return o.AffectedLocationsCount, true
}

// HasAffectedLocationsCount returns a boolean if a field has been set.
func (o *ApiOutage) HasAffectedLocationsCount() bool {
	if o != nil && !utils.IsNil(o.AffectedLocationsCount) {
		return true
	}

	return false
}

// SetAffectedLocationsCount gets a reference to the given int32 and assigns it to the AffectedLocationsCount field.
func (o *ApiOutage) SetAffectedLocationsCount(v int32) {
	o.AffectedLocationsCount = &v
}

// GetAffectedInterfacesCount returns the AffectedInterfacesCount field value if set, zero value otherwise.
func (o *ApiOutage) GetAffectedInterfacesCount() int32 {
	if o == nil || utils.IsNil(o.AffectedInterfacesCount) {
		var ret int32
		return ret
	}
	return *o.AffectedInterfacesCount
}

// GetAffectedInterfacesCountOk returns a tuple with the AffectedInterfacesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetAffectedInterfacesCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.AffectedInterfacesCount) {
		return nil, false
	}
	return o.AffectedInterfacesCount, true
}

// HasAffectedInterfacesCount returns a boolean if a field has been set.
func (o *ApiOutage) HasAffectedInterfacesCount() bool {
	if o != nil && !utils.IsNil(o.AffectedInterfacesCount) {
		return true
	}

	return false
}

// SetAffectedInterfacesCount gets a reference to the given int32 and assigns it to the AffectedInterfacesCount field.
func (o *ApiOutage) SetAffectedInterfacesCount(v int32) {
	o.AffectedInterfacesCount = &v
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *ApiOutage) GetAsn() int32 {
	if o == nil || utils.IsNil(o.Asn) {
		var ret int32
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetAsnOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Asn) {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *ApiOutage) HasAsn() bool {
	if o != nil && !utils.IsNil(o.Asn) {
		return true
	}

	return false
}

// SetAsn gets a reference to the given int32 and assigns it to the Asn field.
func (o *ApiOutage) SetAsn(v int32) {
	o.Asn = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApiOutage) GetLinks() SelfLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret SelfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutage) GetLinksOk() (*SelfLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApiOutage) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLinks and assigns it to the Links field.
func (o *ApiOutage) SetLinks(v SelfLinks) {
	o.Links = &v
}

func (o ApiOutage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOutage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !utils.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !utils.IsNil(o.ProviderName) {
		toSerialize["providerName"] = o.ProviderName
	}
	if !utils.IsNil(o.ProviderType) {
		toSerialize["providerType"] = o.ProviderType
	}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !utils.IsNil(o.StartRoundId) {
		toSerialize["startRoundId"] = o.StartRoundId
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !utils.IsNil(o.EndRoundId) {
		toSerialize["endRoundId"] = o.EndRoundId
	}
	if !utils.IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !utils.IsNil(o.AffectedTestsCount) {
		toSerialize["affectedTestsCount"] = o.AffectedTestsCount
	}
	if !utils.IsNil(o.AffectedServersCount) {
		toSerialize["affectedServersCount"] = o.AffectedServersCount
	}
	if !utils.IsNil(o.AffectedLocationsCount) {
		toSerialize["affectedLocationsCount"] = o.AffectedLocationsCount
	}
	if !utils.IsNil(o.AffectedInterfacesCount) {
		toSerialize["affectedInterfacesCount"] = o.AffectedInterfacesCount
	}
	if !utils.IsNil(o.Asn) {
		toSerialize["asn"] = o.Asn
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableApiOutage struct {
	value *ApiOutage
	isSet bool
}

func (v NullableApiOutage) Get() *ApiOutage {
	return v.value
}

func (v *NullableApiOutage) Set(val *ApiOutage) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOutage) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOutage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOutage(val *ApiOutage) *NullableApiOutage {
	return &NullableApiOutage{value: val, isSet: true}
}

func (v NullableApiOutage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOutage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


