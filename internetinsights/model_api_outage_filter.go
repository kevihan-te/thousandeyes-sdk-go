/*
Internet Insights API

We are happy to announce the release of the Internet Insights API set. This limited release includes endpoints that:  * Make our catalog provider and Internet outage data accessible to API users. * Provide access to advanced filtering, which is part of our next-generation API efforts to allow API users to fine-tune queries across all of our APIs in a consistent manner.  Internet Insights provide visibility into core Internet infrastructure, including ISPs, DNS providers, IaaS, CDNs , and SaaS providers. It tracks the macro-level impact of Internet events on individual users and enterprise networks connecting at the edge of the Internet. These events include Outages, Routing hijacks and leaks, DDoS attacks, And political interference, among others.  Future releases of the Internet Insights API set will further unlock access to core Internet Insights functionality, unlocking potential integrations to enrich customer process flows.  For more information about Internet Insights, see the [Internet Insights](https://docs.thousandeyes.com/product-documentation/internet-insights). 

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package internetinsights

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiOutageFilter type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiOutageFilter{}

// ApiOutageFilter Advanced filter query used to filter the response. Can filter on: - outageScope (all, affected tests (e.g. my tests only)). - providerName - interfaceNetwork - applicationName - startDate, endDate - window
type ApiOutageFilter struct {
	// Start of the time range. Must be paired with `endDate`.
	StartDate *string `json:"startDate,omitempty"`
	// End of the time range. Must be paired with `startDate`.
	EndDate *string `json:"endDate,omitempty"`
	// Specify a time period in the past for which to retrieve data. Alternative to specifying `startDate` and `endDate`.
	Window *string `json:"window,omitempty"`
	OutageScope *OutageScope `json:"outageScope,omitempty"`
	// The name used to identify the provider.
	ProviderName []string `json:"providerName,omitempty"`
	// The name to identify the application.
	ApplicationName []string `json:"applicationName,omitempty"`
	// The name of the ASN (Interface Network).
	InterfaceNetwork []string `json:"interfaceNetwork,omitempty"`
}

// NewApiOutageFilter instantiates a new ApiOutageFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOutageFilter() *ApiOutageFilter {
	this := ApiOutageFilter{}
	return &this
}

// NewApiOutageFilterWithDefaults instantiates a new ApiOutageFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOutageFilterWithDefaults() *ApiOutageFilter {
	this := ApiOutageFilter{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetStartDate() string {
	if o == nil || utils.IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetStartDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasStartDate() bool {
	if o != nil && !utils.IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ApiOutageFilter) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetEndDate() string {
	if o == nil || utils.IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetEndDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasEndDate() bool {
	if o != nil && !utils.IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ApiOutageFilter) SetEndDate(v string) {
	o.EndDate = &v
}

// GetWindow returns the Window field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetWindow() string {
	if o == nil || utils.IsNil(o.Window) {
		var ret string
		return ret
	}
	return *o.Window
}

// GetWindowOk returns a tuple with the Window field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetWindowOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Window) {
		return nil, false
	}
	return o.Window, true
}

// HasWindow returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasWindow() bool {
	if o != nil && !utils.IsNil(o.Window) {
		return true
	}

	return false
}

// SetWindow gets a reference to the given string and assigns it to the Window field.
func (o *ApiOutageFilter) SetWindow(v string) {
	o.Window = &v
}

// GetOutageScope returns the OutageScope field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetOutageScope() OutageScope {
	if o == nil || utils.IsNil(o.OutageScope) {
		var ret OutageScope
		return ret
	}
	return *o.OutageScope
}

// GetOutageScopeOk returns a tuple with the OutageScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetOutageScopeOk() (*OutageScope, bool) {
	if o == nil || utils.IsNil(o.OutageScope) {
		return nil, false
	}
	return o.OutageScope, true
}

// HasOutageScope returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasOutageScope() bool {
	if o != nil && !utils.IsNil(o.OutageScope) {
		return true
	}

	return false
}

// SetOutageScope gets a reference to the given OutageScope and assigns it to the OutageScope field.
func (o *ApiOutageFilter) SetOutageScope(v OutageScope) {
	o.OutageScope = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetProviderName() []string {
	if o == nil || utils.IsNil(o.ProviderName) {
		var ret []string
		return ret
	}
	return o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetProviderNameOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.ProviderName) {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasProviderName() bool {
	if o != nil && !utils.IsNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given []string and assigns it to the ProviderName field.
func (o *ApiOutageFilter) SetProviderName(v []string) {
	o.ProviderName = v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetApplicationName() []string {
	if o == nil || utils.IsNil(o.ApplicationName) {
		var ret []string
		return ret
	}
	return o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetApplicationNameOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasApplicationName() bool {
	if o != nil && !utils.IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given []string and assigns it to the ApplicationName field.
func (o *ApiOutageFilter) SetApplicationName(v []string) {
	o.ApplicationName = v
}

// GetInterfaceNetwork returns the InterfaceNetwork field value if set, zero value otherwise.
func (o *ApiOutageFilter) GetInterfaceNetwork() []string {
	if o == nil || utils.IsNil(o.InterfaceNetwork) {
		var ret []string
		return ret
	}
	return o.InterfaceNetwork
}

// GetInterfaceNetworkOk returns a tuple with the InterfaceNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOutageFilter) GetInterfaceNetworkOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.InterfaceNetwork) {
		return nil, false
	}
	return o.InterfaceNetwork, true
}

// HasInterfaceNetwork returns a boolean if a field has been set.
func (o *ApiOutageFilter) HasInterfaceNetwork() bool {
	if o != nil && !utils.IsNil(o.InterfaceNetwork) {
		return true
	}

	return false
}

// SetInterfaceNetwork gets a reference to the given []string and assigns it to the InterfaceNetwork field.
func (o *ApiOutageFilter) SetInterfaceNetwork(v []string) {
	o.InterfaceNetwork = v
}

func (o ApiOutageFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOutageFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !utils.IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !utils.IsNil(o.Window) {
		toSerialize["window"] = o.Window
	}
	if !utils.IsNil(o.OutageScope) {
		toSerialize["outageScope"] = o.OutageScope
	}
	if !utils.IsNil(o.ProviderName) {
		toSerialize["providerName"] = o.ProviderName
	}
	if !utils.IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if !utils.IsNil(o.InterfaceNetwork) {
		toSerialize["interfaceNetwork"] = o.InterfaceNetwork
	}
	return toSerialize, nil
}

type NullableApiOutageFilter struct {
	value *ApiOutageFilter
	isSet bool
}

func (v NullableApiOutageFilter) Get() *ApiOutageFilter {
	return v.value
}

func (v *NullableApiOutageFilter) Set(val *ApiOutageFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOutageFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOutageFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOutageFilter(val *ApiOutageFilter) *NullableApiOutageFilter {
	return &NullableApiOutageFilter{value: val, isSet: true}
}

func (v NullableApiOutageFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOutageFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


