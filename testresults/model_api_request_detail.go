/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiRequestDetail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiRequestDetail{}

// ApiRequestDetail struct for ApiRequestDetail
type ApiRequestDetail struct {
	// Total time specific to the API call.
	ApiCallTime *float32 `json:"apiCallTime,omitempty"`
	// Count of assertion errors.
	AssertErrorCount *int32 `json:"assertErrorCount,omitempty"`
	// Time to establish a socket connection for this request.
	BlockedTime *float32 `json:"blockedTime,omitempty"`
	// Time to establish a TCP connection.
	ConnectTime *float32 `json:"connectTime,omitempty"`
	// 100 if the request responded with no assertion errors, otherwise 0.
	Completion *float32 `json:"completion,omitempty"`
	// Time for the agent to perform a DNS resolution of the hostname in the URL.
	DnsTime *float32 `json:"dnsTime,omitempty"`
	// Name of the API step.
	Name *string `json:"name,omitempty"`
	// Time for the agent to process the API step, including the waitTimeMs delay specified in the post request options.
	ProcessingTime *float32 `json:"processingTime,omitempty"`
	// Time to receive the response from the server.
	ReceiveTime *float32 `json:"receiveTime,omitempty"`
	// Time for server to send the response.
	ResponseTime *float32 `json:"responseTime,omitempty"`
	// Time to send the request.
	SendTime *float32 `json:"sendTime,omitempty"`
	// Index of the API step within requests, starting at 1.
	StepNumber *int32 `json:"stepNumber,omitempty"`
	// Total time for an API step, including API call time and processing time.
	StepTime *float32 `json:"stepTime,omitempty"`
	StepType *ApiRequestStepType `json:"stepType,omitempty"`
	// URL of request
	Url *string `json:"url,omitempty"`
	// Total time between when the agent completes sending the HTTP request to the web server and when the agent receives the first byte of the response from the web server.
	WaitTime *float32 `json:"waitTime,omitempty"`
	Assertions []ApiRequestDetailAssertion `json:"assertions,omitempty"`
}

// NewApiRequestDetail instantiates a new ApiRequestDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRequestDetail() *ApiRequestDetail {
	this := ApiRequestDetail{}
	return &this
}

// NewApiRequestDetailWithDefaults instantiates a new ApiRequestDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRequestDetailWithDefaults() *ApiRequestDetail {
	this := ApiRequestDetail{}
	return &this
}

// GetApiCallTime returns the ApiCallTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetApiCallTime() float32 {
	if o == nil || utils.IsNil(o.ApiCallTime) {
		var ret float32
		return ret
	}
	return *o.ApiCallTime
}

// GetApiCallTimeOk returns a tuple with the ApiCallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetApiCallTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.ApiCallTime) {
		return nil, false
	}
	return o.ApiCallTime, true
}

// HasApiCallTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasApiCallTime() bool {
	if o != nil && !utils.IsNil(o.ApiCallTime) {
		return true
	}

	return false
}

// SetApiCallTime gets a reference to the given float32 and assigns it to the ApiCallTime field.
func (o *ApiRequestDetail) SetApiCallTime(v float32) {
	o.ApiCallTime = &v
}

// GetAssertErrorCount returns the AssertErrorCount field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetAssertErrorCount() int32 {
	if o == nil || utils.IsNil(o.AssertErrorCount) {
		var ret int32
		return ret
	}
	return *o.AssertErrorCount
}

// GetAssertErrorCountOk returns a tuple with the AssertErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetAssertErrorCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.AssertErrorCount) {
		return nil, false
	}
	return o.AssertErrorCount, true
}

// HasAssertErrorCount returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasAssertErrorCount() bool {
	if o != nil && !utils.IsNil(o.AssertErrorCount) {
		return true
	}

	return false
}

// SetAssertErrorCount gets a reference to the given int32 and assigns it to the AssertErrorCount field.
func (o *ApiRequestDetail) SetAssertErrorCount(v int32) {
	o.AssertErrorCount = &v
}

// GetBlockedTime returns the BlockedTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetBlockedTime() float32 {
	if o == nil || utils.IsNil(o.BlockedTime) {
		var ret float32
		return ret
	}
	return *o.BlockedTime
}

// GetBlockedTimeOk returns a tuple with the BlockedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetBlockedTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.BlockedTime) {
		return nil, false
	}
	return o.BlockedTime, true
}

// HasBlockedTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasBlockedTime() bool {
	if o != nil && !utils.IsNil(o.BlockedTime) {
		return true
	}

	return false
}

// SetBlockedTime gets a reference to the given float32 and assigns it to the BlockedTime field.
func (o *ApiRequestDetail) SetBlockedTime(v float32) {
	o.BlockedTime = &v
}

// GetConnectTime returns the ConnectTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetConnectTime() float32 {
	if o == nil || utils.IsNil(o.ConnectTime) {
		var ret float32
		return ret
	}
	return *o.ConnectTime
}

// GetConnectTimeOk returns a tuple with the ConnectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetConnectTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.ConnectTime) {
		return nil, false
	}
	return o.ConnectTime, true
}

// HasConnectTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasConnectTime() bool {
	if o != nil && !utils.IsNil(o.ConnectTime) {
		return true
	}

	return false
}

// SetConnectTime gets a reference to the given float32 and assigns it to the ConnectTime field.
func (o *ApiRequestDetail) SetConnectTime(v float32) {
	o.ConnectTime = &v
}

// GetCompletion returns the Completion field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetCompletion() float32 {
	if o == nil || utils.IsNil(o.Completion) {
		var ret float32
		return ret
	}
	return *o.Completion
}

// GetCompletionOk returns a tuple with the Completion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetCompletionOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.Completion) {
		return nil, false
	}
	return o.Completion, true
}

// HasCompletion returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasCompletion() bool {
	if o != nil && !utils.IsNil(o.Completion) {
		return true
	}

	return false
}

// SetCompletion gets a reference to the given float32 and assigns it to the Completion field.
func (o *ApiRequestDetail) SetCompletion(v float32) {
	o.Completion = &v
}

// GetDnsTime returns the DnsTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetDnsTime() float32 {
	if o == nil || utils.IsNil(o.DnsTime) {
		var ret float32
		return ret
	}
	return *o.DnsTime
}

// GetDnsTimeOk returns a tuple with the DnsTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetDnsTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.DnsTime) {
		return nil, false
	}
	return o.DnsTime, true
}

// HasDnsTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasDnsTime() bool {
	if o != nil && !utils.IsNil(o.DnsTime) {
		return true
	}

	return false
}

// SetDnsTime gets a reference to the given float32 and assigns it to the DnsTime field.
func (o *ApiRequestDetail) SetDnsTime(v float32) {
	o.DnsTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiRequestDetail) SetName(v string) {
	o.Name = &v
}

// GetProcessingTime returns the ProcessingTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetProcessingTime() float32 {
	if o == nil || utils.IsNil(o.ProcessingTime) {
		var ret float32
		return ret
	}
	return *o.ProcessingTime
}

// GetProcessingTimeOk returns a tuple with the ProcessingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetProcessingTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.ProcessingTime) {
		return nil, false
	}
	return o.ProcessingTime, true
}

// HasProcessingTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasProcessingTime() bool {
	if o != nil && !utils.IsNil(o.ProcessingTime) {
		return true
	}

	return false
}

// SetProcessingTime gets a reference to the given float32 and assigns it to the ProcessingTime field.
func (o *ApiRequestDetail) SetProcessingTime(v float32) {
	o.ProcessingTime = &v
}

// GetReceiveTime returns the ReceiveTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetReceiveTime() float32 {
	if o == nil || utils.IsNil(o.ReceiveTime) {
		var ret float32
		return ret
	}
	return *o.ReceiveTime
}

// GetReceiveTimeOk returns a tuple with the ReceiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetReceiveTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.ReceiveTime) {
		return nil, false
	}
	return o.ReceiveTime, true
}

// HasReceiveTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasReceiveTime() bool {
	if o != nil && !utils.IsNil(o.ReceiveTime) {
		return true
	}

	return false
}

// SetReceiveTime gets a reference to the given float32 and assigns it to the ReceiveTime field.
func (o *ApiRequestDetail) SetReceiveTime(v float32) {
	o.ReceiveTime = &v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetResponseTime() float32 {
	if o == nil || utils.IsNil(o.ResponseTime) {
		var ret float32
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetResponseTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.ResponseTime) {
		return nil, false
	}
	return o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasResponseTime() bool {
	if o != nil && !utils.IsNil(o.ResponseTime) {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given float32 and assigns it to the ResponseTime field.
func (o *ApiRequestDetail) SetResponseTime(v float32) {
	o.ResponseTime = &v
}

// GetSendTime returns the SendTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetSendTime() float32 {
	if o == nil || utils.IsNil(o.SendTime) {
		var ret float32
		return ret
	}
	return *o.SendTime
}

// GetSendTimeOk returns a tuple with the SendTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetSendTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.SendTime) {
		return nil, false
	}
	return o.SendTime, true
}

// HasSendTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasSendTime() bool {
	if o != nil && !utils.IsNil(o.SendTime) {
		return true
	}

	return false
}

// SetSendTime gets a reference to the given float32 and assigns it to the SendTime field.
func (o *ApiRequestDetail) SetSendTime(v float32) {
	o.SendTime = &v
}

// GetStepNumber returns the StepNumber field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetStepNumber() int32 {
	if o == nil || utils.IsNil(o.StepNumber) {
		var ret int32
		return ret
	}
	return *o.StepNumber
}

// GetStepNumberOk returns a tuple with the StepNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetStepNumberOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.StepNumber) {
		return nil, false
	}
	return o.StepNumber, true
}

// HasStepNumber returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasStepNumber() bool {
	if o != nil && !utils.IsNil(o.StepNumber) {
		return true
	}

	return false
}

// SetStepNumber gets a reference to the given int32 and assigns it to the StepNumber field.
func (o *ApiRequestDetail) SetStepNumber(v int32) {
	o.StepNumber = &v
}

// GetStepTime returns the StepTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetStepTime() float32 {
	if o == nil || utils.IsNil(o.StepTime) {
		var ret float32
		return ret
	}
	return *o.StepTime
}

// GetStepTimeOk returns a tuple with the StepTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetStepTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.StepTime) {
		return nil, false
	}
	return o.StepTime, true
}

// HasStepTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasStepTime() bool {
	if o != nil && !utils.IsNil(o.StepTime) {
		return true
	}

	return false
}

// SetStepTime gets a reference to the given float32 and assigns it to the StepTime field.
func (o *ApiRequestDetail) SetStepTime(v float32) {
	o.StepTime = &v
}

// GetStepType returns the StepType field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetStepType() ApiRequestStepType {
	if o == nil || utils.IsNil(o.StepType) {
		var ret ApiRequestStepType
		return ret
	}
	return *o.StepType
}

// GetStepTypeOk returns a tuple with the StepType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetStepTypeOk() (*ApiRequestStepType, bool) {
	if o == nil || utils.IsNil(o.StepType) {
		return nil, false
	}
	return o.StepType, true
}

// HasStepType returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasStepType() bool {
	if o != nil && !utils.IsNil(o.StepType) {
		return true
	}

	return false
}

// SetStepType gets a reference to the given ApiRequestStepType and assigns it to the StepType field.
func (o *ApiRequestDetail) SetStepType(v ApiRequestStepType) {
	o.StepType = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetUrl() string {
	if o == nil || utils.IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetUrlOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasUrl() bool {
	if o != nil && !utils.IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiRequestDetail) SetUrl(v string) {
	o.Url = &v
}

// GetWaitTime returns the WaitTime field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetWaitTime() float32 {
	if o == nil || utils.IsNil(o.WaitTime) {
		var ret float32
		return ret
	}
	return *o.WaitTime
}

// GetWaitTimeOk returns a tuple with the WaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetWaitTimeOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.WaitTime) {
		return nil, false
	}
	return o.WaitTime, true
}

// HasWaitTime returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasWaitTime() bool {
	if o != nil && !utils.IsNil(o.WaitTime) {
		return true
	}

	return false
}

// SetWaitTime gets a reference to the given float32 and assigns it to the WaitTime field.
func (o *ApiRequestDetail) SetWaitTime(v float32) {
	o.WaitTime = &v
}

// GetAssertions returns the Assertions field value if set, zero value otherwise.
func (o *ApiRequestDetail) GetAssertions() []ApiRequestDetailAssertion {
	if o == nil || utils.IsNil(o.Assertions) {
		var ret []ApiRequestDetailAssertion
		return ret
	}
	return o.Assertions
}

// GetAssertionsOk returns a tuple with the Assertions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetail) GetAssertionsOk() ([]ApiRequestDetailAssertion, bool) {
	if o == nil || utils.IsNil(o.Assertions) {
		return nil, false
	}
	return o.Assertions, true
}

// HasAssertions returns a boolean if a field has been set.
func (o *ApiRequestDetail) HasAssertions() bool {
	if o != nil && !utils.IsNil(o.Assertions) {
		return true
	}

	return false
}

// SetAssertions gets a reference to the given []ApiRequestDetailAssertion and assigns it to the Assertions field.
func (o *ApiRequestDetail) SetAssertions(v []ApiRequestDetailAssertion) {
	o.Assertions = v
}

func (o ApiRequestDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRequestDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.ApiCallTime) {
		toSerialize["apiCallTime"] = o.ApiCallTime
	}
	if !utils.IsNil(o.AssertErrorCount) {
		toSerialize["assertErrorCount"] = o.AssertErrorCount
	}
	if !utils.IsNil(o.BlockedTime) {
		toSerialize["blockedTime"] = o.BlockedTime
	}
	if !utils.IsNil(o.ConnectTime) {
		toSerialize["connectTime"] = o.ConnectTime
	}
	if !utils.IsNil(o.Completion) {
		toSerialize["completion"] = o.Completion
	}
	if !utils.IsNil(o.DnsTime) {
		toSerialize["dnsTime"] = o.DnsTime
	}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.ProcessingTime) {
		toSerialize["processingTime"] = o.ProcessingTime
	}
	if !utils.IsNil(o.ReceiveTime) {
		toSerialize["receiveTime"] = o.ReceiveTime
	}
	if !utils.IsNil(o.ResponseTime) {
		toSerialize["responseTime"] = o.ResponseTime
	}
	if !utils.IsNil(o.SendTime) {
		toSerialize["sendTime"] = o.SendTime
	}
	if !utils.IsNil(o.StepNumber) {
		toSerialize["stepNumber"] = o.StepNumber
	}
	if !utils.IsNil(o.StepTime) {
		toSerialize["stepTime"] = o.StepTime
	}
	if !utils.IsNil(o.StepType) {
		toSerialize["stepType"] = o.StepType
	}
	if !utils.IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !utils.IsNil(o.WaitTime) {
		toSerialize["waitTime"] = o.WaitTime
	}
	if !utils.IsNil(o.Assertions) {
		toSerialize["assertions"] = o.Assertions
	}
	return toSerialize, nil
}

type NullableApiRequestDetail struct {
	value *ApiRequestDetail
	isSet bool
}

func (v NullableApiRequestDetail) Get() *ApiRequestDetail {
	return v.value
}

func (v *NullableApiRequestDetail) Set(val *ApiRequestDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRequestDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRequestDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRequestDetail(val *ApiRequestDetail) *NullableApiRequestDetail {
	return &NullableApiRequestDetail{value: val, isSet: true}
}

func (v NullableApiRequestDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRequestDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


