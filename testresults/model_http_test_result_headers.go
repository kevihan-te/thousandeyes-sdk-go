/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the HttpTestResultHeaders type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HttpTestResultHeaders{}

// HttpTestResultHeaders Expandable object containing both request and response headers
type HttpTestResultHeaders struct {
	// Crlf-delimited list of request headers in header: value format
	RequestHeaders *string `json:"requestHeaders,omitempty"`
	// crlf-delimited list of response headers in header: value format
	ResponseHeaders *string `json:"responseHeaders,omitempty"`
}

// NewHttpTestResultHeaders instantiates a new HttpTestResultHeaders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpTestResultHeaders() *HttpTestResultHeaders {
	this := HttpTestResultHeaders{}
	return &this
}

// NewHttpTestResultHeadersWithDefaults instantiates a new HttpTestResultHeaders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpTestResultHeadersWithDefaults() *HttpTestResultHeaders {
	this := HttpTestResultHeaders{}
	return &this
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *HttpTestResultHeaders) GetRequestHeaders() string {
	if o == nil || utils.IsNil(o.RequestHeaders) {
		var ret string
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpTestResultHeaders) GetRequestHeadersOk() (*string, bool) {
	if o == nil || utils.IsNil(o.RequestHeaders) {
		return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *HttpTestResultHeaders) HasRequestHeaders() bool {
	if o != nil && !utils.IsNil(o.RequestHeaders) {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given string and assigns it to the RequestHeaders field.
func (o *HttpTestResultHeaders) SetRequestHeaders(v string) {
	o.RequestHeaders = &v
}

// GetResponseHeaders returns the ResponseHeaders field value if set, zero value otherwise.
func (o *HttpTestResultHeaders) GetResponseHeaders() string {
	if o == nil || utils.IsNil(o.ResponseHeaders) {
		var ret string
		return ret
	}
	return *o.ResponseHeaders
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpTestResultHeaders) GetResponseHeadersOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ResponseHeaders) {
		return nil, false
	}
	return o.ResponseHeaders, true
}

// HasResponseHeaders returns a boolean if a field has been set.
func (o *HttpTestResultHeaders) HasResponseHeaders() bool {
	if o != nil && !utils.IsNil(o.ResponseHeaders) {
		return true
	}

	return false
}

// SetResponseHeaders gets a reference to the given string and assigns it to the ResponseHeaders field.
func (o *HttpTestResultHeaders) SetResponseHeaders(v string) {
	o.ResponseHeaders = &v
}

func (o HttpTestResultHeaders) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpTestResultHeaders) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.RequestHeaders) {
		toSerialize["requestHeaders"] = o.RequestHeaders
	}
	if !utils.IsNil(o.ResponseHeaders) {
		toSerialize["responseHeaders"] = o.ResponseHeaders
	}
	return toSerialize, nil
}

type NullableHttpTestResultHeaders struct {
	value *HttpTestResultHeaders
	isSet bool
}

func (v NullableHttpTestResultHeaders) Get() *HttpTestResultHeaders {
	return v.value
}

func (v *NullableHttpTestResultHeaders) Set(val *HttpTestResultHeaders) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpTestResultHeaders) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpTestResultHeaders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpTestResultHeaders(val *HttpTestResultHeaders) *NullableHttpTestResultHeaders {
	return &NullableHttpTestResultHeaders{value: val, isSet: true}
}

func (v NullableHttpTestResultHeaders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpTestResultHeaders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


