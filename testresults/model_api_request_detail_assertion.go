/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the ApiRequestDetailAssertion type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApiRequestDetailAssertion{}

// ApiRequestDetailAssertion struct for ApiRequestDetailAssertion
type ApiRequestDetailAssertion struct {
	// Index of the assertion, starting at 1.
	Step *int32 `json:"step,omitempty"`
	// Indicates if the assertion passed or failed. `true` if the assertion failed; `false` if the assertion passed.
	HasFailed *bool `json:"hasFailed,omitempty"`
}

// NewApiRequestDetailAssertion instantiates a new ApiRequestDetailAssertion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRequestDetailAssertion() *ApiRequestDetailAssertion {
	this := ApiRequestDetailAssertion{}
	return &this
}

// NewApiRequestDetailAssertionWithDefaults instantiates a new ApiRequestDetailAssertion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRequestDetailAssertionWithDefaults() *ApiRequestDetailAssertion {
	this := ApiRequestDetailAssertion{}
	return &this
}

// GetStep returns the Step field value if set, zero value otherwise.
func (o *ApiRequestDetailAssertion) GetStep() int32 {
	if o == nil || utils.IsNil(o.Step) {
		var ret int32
		return ret
	}
	return *o.Step
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetailAssertion) GetStepOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Step) {
		return nil, false
	}
	return o.Step, true
}

// HasStep returns a boolean if a field has been set.
func (o *ApiRequestDetailAssertion) HasStep() bool {
	if o != nil && !utils.IsNil(o.Step) {
		return true
	}

	return false
}

// SetStep gets a reference to the given int32 and assigns it to the Step field.
func (o *ApiRequestDetailAssertion) SetStep(v int32) {
	o.Step = &v
}

// GetHasFailed returns the HasFailed field value if set, zero value otherwise.
func (o *ApiRequestDetailAssertion) GetHasFailed() bool {
	if o == nil || utils.IsNil(o.HasFailed) {
		var ret bool
		return ret
	}
	return *o.HasFailed
}

// GetHasFailedOk returns a tuple with the HasFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestDetailAssertion) GetHasFailedOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.HasFailed) {
		return nil, false
	}
	return o.HasFailed, true
}

// HasHasFailed returns a boolean if a field has been set.
func (o *ApiRequestDetailAssertion) HasHasFailed() bool {
	if o != nil && !utils.IsNil(o.HasFailed) {
		return true
	}

	return false
}

// SetHasFailed gets a reference to the given bool and assigns it to the HasFailed field.
func (o *ApiRequestDetailAssertion) SetHasFailed(v bool) {
	o.HasFailed = &v
}

func (o ApiRequestDetailAssertion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRequestDetailAssertion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Step) {
		toSerialize["step"] = o.Step
	}
	if !utils.IsNil(o.HasFailed) {
		toSerialize["hasFailed"] = o.HasFailed
	}
	return toSerialize, nil
}

type NullableApiRequestDetailAssertion struct {
	value *ApiRequestDetailAssertion
	isSet bool
}

func (v NullableApiRequestDetailAssertion) Get() *ApiRequestDetailAssertion {
	return v.value
}

func (v *NullableApiRequestDetailAssertion) Set(val *ApiRequestDetailAssertion) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRequestDetailAssertion) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRequestDetailAssertion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRequestDetailAssertion(val *ApiRequestDetailAssertion) *NullableApiRequestDetailAssertion {
	return &NullableApiRequestDetailAssertion{value: val, isSet: true}
}

func (v NullableApiRequestDetailAssertion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRequestDetailAssertion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


