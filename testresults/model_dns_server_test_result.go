/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the DnsServerTestResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DnsServerTestResult{}

// DnsServerTestResult struct for DnsServerTestResult
type DnsServerTestResult struct {
	// Data point date UTC (ISO date-time format).
	Date *time.Time `json:"date,omitempty"`
	// Epoch time (seconds) indicating the start time of the round
	RoundId *int32 `json:"roundId,omitempty"`
	Links *TestResultAppLinks `json:"_links,omitempty"`
	// Epoch time (seconds) indicating the start time of the round
	StartTime *int32 `json:"startTime,omitempty"`
	// Epoch time (seconds) indicating the end time of the round
	EndTime *int32 `json:"endTime,omitempty"`
	Agent *TestResultAgent `json:"agent,omitempty"`
	// Internal ID of DNS server being tested
	ServerId *string `json:"serverId,omitempty"`
	// Canonical name of server being tested
	Server *string `json:"server,omitempty"`
	// How long it took to run the query against the serverow long it took to run the query against the server
	ResolutionTime *int32 `json:"resolutionTime,omitempty"`
	// Error details, if an error were encountered
	ErrorDetails *string `json:"errorDetails,omitempty"`
	// Final mappings returned from the request
	Mappings *string `json:"mappings,omitempty"`
}

// NewDnsServerTestResult instantiates a new DnsServerTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsServerTestResult() *DnsServerTestResult {
	this := DnsServerTestResult{}
	return &this
}

// NewDnsServerTestResultWithDefaults instantiates a new DnsServerTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsServerTestResultWithDefaults() *DnsServerTestResult {
	this := DnsServerTestResult{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetDate() time.Time {
	if o == nil || utils.IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasDate() bool {
	if o != nil && !utils.IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *DnsServerTestResult) SetDate(v time.Time) {
	o.Date = &v
}

// GetRoundId returns the RoundId field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetRoundId() int32 {
	if o == nil || utils.IsNil(o.RoundId) {
		var ret int32
		return ret
	}
	return *o.RoundId
}

// GetRoundIdOk returns a tuple with the RoundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetRoundIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RoundId) {
		return nil, false
	}
	return o.RoundId, true
}

// HasRoundId returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasRoundId() bool {
	if o != nil && !utils.IsNil(o.RoundId) {
		return true
	}

	return false
}

// SetRoundId gets a reference to the given int32 and assigns it to the RoundId field.
func (o *DnsServerTestResult) SetRoundId(v int32) {
	o.RoundId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetLinks() TestResultAppLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret TestResultAppLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetLinksOk() (*TestResultAppLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given TestResultAppLinks and assigns it to the Links field.
func (o *DnsServerTestResult) SetLinks(v TestResultAppLinks) {
	o.Links = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetStartTime() int32 {
	if o == nil || utils.IsNil(o.StartTime) {
		var ret int32
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetStartTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasStartTime() bool {
	if o != nil && !utils.IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int32 and assigns it to the StartTime field.
func (o *DnsServerTestResult) SetStartTime(v int32) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetEndTime() int32 {
	if o == nil || utils.IsNil(o.EndTime) {
		var ret int32
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetEndTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasEndTime() bool {
	if o != nil && !utils.IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int32 and assigns it to the EndTime field.
func (o *DnsServerTestResult) SetEndTime(v int32) {
	o.EndTime = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetAgent() TestResultAgent {
	if o == nil || utils.IsNil(o.Agent) {
		var ret TestResultAgent
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetAgentOk() (*TestResultAgent, bool) {
	if o == nil || utils.IsNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasAgent() bool {
	if o != nil && !utils.IsNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given TestResultAgent and assigns it to the Agent field.
func (o *DnsServerTestResult) SetAgent(v TestResultAgent) {
	o.Agent = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetServerId() string {
	if o == nil || utils.IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetServerIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasServerId() bool {
	if o != nil && !utils.IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *DnsServerTestResult) SetServerId(v string) {
	o.ServerId = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetServer() string {
	if o == nil || utils.IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetServerOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasServer() bool {
	if o != nil && !utils.IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *DnsServerTestResult) SetServer(v string) {
	o.Server = &v
}

// GetResolutionTime returns the ResolutionTime field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetResolutionTime() int32 {
	if o == nil || utils.IsNil(o.ResolutionTime) {
		var ret int32
		return ret
	}
	return *o.ResolutionTime
}

// GetResolutionTimeOk returns a tuple with the ResolutionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetResolutionTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ResolutionTime) {
		return nil, false
	}
	return o.ResolutionTime, true
}

// HasResolutionTime returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasResolutionTime() bool {
	if o != nil && !utils.IsNil(o.ResolutionTime) {
		return true
	}

	return false
}

// SetResolutionTime gets a reference to the given int32 and assigns it to the ResolutionTime field.
func (o *DnsServerTestResult) SetResolutionTime(v int32) {
	o.ResolutionTime = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetErrorDetails() string {
	if o == nil || utils.IsNil(o.ErrorDetails) {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetErrorDetailsOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasErrorDetails() bool {
	if o != nil && !utils.IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *DnsServerTestResult) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *DnsServerTestResult) GetMappings() string {
	if o == nil || utils.IsNil(o.Mappings) {
		var ret string
		return ret
	}
	return *o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsServerTestResult) GetMappingsOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Mappings) {
		return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *DnsServerTestResult) HasMappings() bool {
	if o != nil && !utils.IsNil(o.Mappings) {
		return true
	}

	return false
}

// SetMappings gets a reference to the given string and assigns it to the Mappings field.
func (o *DnsServerTestResult) SetMappings(v string) {
	o.Mappings = &v
}

func (o DnsServerTestResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsServerTestResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !utils.IsNil(o.RoundId) {
		toSerialize["roundId"] = o.RoundId
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !utils.IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !utils.IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !utils.IsNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	if !utils.IsNil(o.ServerId) {
		toSerialize["serverId"] = o.ServerId
	}
	if !utils.IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !utils.IsNil(o.ResolutionTime) {
		toSerialize["resolutionTime"] = o.ResolutionTime
	}
	if !utils.IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !utils.IsNil(o.Mappings) {
		toSerialize["mappings"] = o.Mappings
	}
	return toSerialize, nil
}

type NullableDnsServerTestResult struct {
	value *DnsServerTestResult
	isSet bool
}

func (v NullableDnsServerTestResult) Get() *DnsServerTestResult {
	return v.value
}

func (v *NullableDnsServerTestResult) Set(val *DnsServerTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsServerTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsServerTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsServerTestResult(val *DnsServerTestResult) *NullableDnsServerTestResult {
	return &NullableDnsServerTestResult{value: val, isSet: true}
}

func (v NullableDnsServerTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsServerTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


