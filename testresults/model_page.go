/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the Page type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Page{}

// Page struct for Page
type Page struct {
	// Page index
	PageNum *int32 `json:"pageNum,omitempty"`
	// Meta title value for page visited
	PageName *string `json:"pageName,omitempty"`
	// Number of components on target page
	ComponentCount *int32 `json:"componentCount,omitempty"`
	// Number of errors encountered during page load
	ErrorCount *int32 `json:"errorCount,omitempty"`
	// Time spent on page in milliseconds
	Duration *float32 `json:"duration,omitempty"`
}

// NewPage instantiates a new Page object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPage() *Page {
	this := Page{}
	return &this
}

// NewPageWithDefaults instantiates a new Page object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageWithDefaults() *Page {
	this := Page{}
	return &this
}

// GetPageNum returns the PageNum field value if set, zero value otherwise.
func (o *Page) GetPageNum() int32 {
	if o == nil || utils.IsNil(o.PageNum) {
		var ret int32
		return ret
	}
	return *o.PageNum
}

// GetPageNumOk returns a tuple with the PageNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetPageNumOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PageNum) {
		return nil, false
	}
	return o.PageNum, true
}

// HasPageNum returns a boolean if a field has been set.
func (o *Page) HasPageNum() bool {
	if o != nil && !utils.IsNil(o.PageNum) {
		return true
	}

	return false
}

// SetPageNum gets a reference to the given int32 and assigns it to the PageNum field.
func (o *Page) SetPageNum(v int32) {
	o.PageNum = &v
}

// GetPageName returns the PageName field value if set, zero value otherwise.
func (o *Page) GetPageName() string {
	if o == nil || utils.IsNil(o.PageName) {
		var ret string
		return ret
	}
	return *o.PageName
}

// GetPageNameOk returns a tuple with the PageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetPageNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PageName) {
		return nil, false
	}
	return o.PageName, true
}

// HasPageName returns a boolean if a field has been set.
func (o *Page) HasPageName() bool {
	if o != nil && !utils.IsNil(o.PageName) {
		return true
	}

	return false
}

// SetPageName gets a reference to the given string and assigns it to the PageName field.
func (o *Page) SetPageName(v string) {
	o.PageName = &v
}

// GetComponentCount returns the ComponentCount field value if set, zero value otherwise.
func (o *Page) GetComponentCount() int32 {
	if o == nil || utils.IsNil(o.ComponentCount) {
		var ret int32
		return ret
	}
	return *o.ComponentCount
}

// GetComponentCountOk returns a tuple with the ComponentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetComponentCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ComponentCount) {
		return nil, false
	}
	return o.ComponentCount, true
}

// HasComponentCount returns a boolean if a field has been set.
func (o *Page) HasComponentCount() bool {
	if o != nil && !utils.IsNil(o.ComponentCount) {
		return true
	}

	return false
}

// SetComponentCount gets a reference to the given int32 and assigns it to the ComponentCount field.
func (o *Page) SetComponentCount(v int32) {
	o.ComponentCount = &v
}

// GetErrorCount returns the ErrorCount field value if set, zero value otherwise.
func (o *Page) GetErrorCount() int32 {
	if o == nil || utils.IsNil(o.ErrorCount) {
		var ret int32
		return ret
	}
	return *o.ErrorCount
}

// GetErrorCountOk returns a tuple with the ErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetErrorCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ErrorCount) {
		return nil, false
	}
	return o.ErrorCount, true
}

// HasErrorCount returns a boolean if a field has been set.
func (o *Page) HasErrorCount() bool {
	if o != nil && !utils.IsNil(o.ErrorCount) {
		return true
	}

	return false
}

// SetErrorCount gets a reference to the given int32 and assigns it to the ErrorCount field.
func (o *Page) SetErrorCount(v int32) {
	o.ErrorCount = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *Page) GetDuration() float32 {
	if o == nil || utils.IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Page) GetDurationOk() (*float32, bool) {
	if o == nil || utils.IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *Page) HasDuration() bool {
	if o != nil && !utils.IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *Page) SetDuration(v float32) {
	o.Duration = &v
}

func (o Page) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Page) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PageNum) {
		toSerialize["pageNum"] = o.PageNum
	}
	if !utils.IsNil(o.PageName) {
		toSerialize["pageName"] = o.PageName
	}
	if !utils.IsNil(o.ComponentCount) {
		toSerialize["componentCount"] = o.ComponentCount
	}
	if !utils.IsNil(o.ErrorCount) {
		toSerialize["errorCount"] = o.ErrorCount
	}
	if !utils.IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	return toSerialize, nil
}

type NullablePage struct {
	value *Page
	isSet bool
}

func (v NullablePage) Get() *Page {
	return v.value
}

func (v *NullablePage) Set(val *Page) {
	v.value = val
	v.isSet = true
}

func (v NullablePage) IsSet() bool {
	return v.isSet
}

func (v *NullablePage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePage(val *Page) *NullablePage {
	return &NullablePage{value: val, isSet: true}
}

func (v NullablePage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


