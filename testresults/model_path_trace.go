/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the PathTrace type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PathTrace{}

// PathTrace struct for PathTrace
type PathTrace struct {
	// IP address of the hop
	IpAddress *string `json:"ipAddress,omitempty"`
	// Maximum segment size in bytes
	Mss *int32 `json:"mss,omitempty"`
	// Number of hops for path trace to destination
	NumberOfHops *int32 `json:"numberOfHops,omitempty"`
	// Unique ID of path trace
	PathId *string `json:"pathId,omitempty"`
	// MTU sizes on network from agents to the target
	PathMtu *int32 `json:"pathMtu,omitempty"`
	// RTT of the path trace to the destination in milliseconds
	ResponseTime *int32 `json:"responseTime,omitempty"`
}

// NewPathTrace instantiates a new PathTrace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPathTrace() *PathTrace {
	this := PathTrace{}
	return &this
}

// NewPathTraceWithDefaults instantiates a new PathTrace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPathTraceWithDefaults() *PathTrace {
	this := PathTrace{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *PathTrace) GetIpAddress() string {
	if o == nil || utils.IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathTrace) GetIpAddressOk() (*string, bool) {
	if o == nil || utils.IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *PathTrace) HasIpAddress() bool {
	if o != nil && !utils.IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *PathTrace) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetMss returns the Mss field value if set, zero value otherwise.
func (o *PathTrace) GetMss() int32 {
	if o == nil || utils.IsNil(o.Mss) {
		var ret int32
		return ret
	}
	return *o.Mss
}

// GetMssOk returns a tuple with the Mss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathTrace) GetMssOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Mss) {
		return nil, false
	}
	return o.Mss, true
}

// HasMss returns a boolean if a field has been set.
func (o *PathTrace) HasMss() bool {
	if o != nil && !utils.IsNil(o.Mss) {
		return true
	}

	return false
}

// SetMss gets a reference to the given int32 and assigns it to the Mss field.
func (o *PathTrace) SetMss(v int32) {
	o.Mss = &v
}

// GetNumberOfHops returns the NumberOfHops field value if set, zero value otherwise.
func (o *PathTrace) GetNumberOfHops() int32 {
	if o == nil || utils.IsNil(o.NumberOfHops) {
		var ret int32
		return ret
	}
	return *o.NumberOfHops
}

// GetNumberOfHopsOk returns a tuple with the NumberOfHops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathTrace) GetNumberOfHopsOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.NumberOfHops) {
		return nil, false
	}
	return o.NumberOfHops, true
}

// HasNumberOfHops returns a boolean if a field has been set.
func (o *PathTrace) HasNumberOfHops() bool {
	if o != nil && !utils.IsNil(o.NumberOfHops) {
		return true
	}

	return false
}

// SetNumberOfHops gets a reference to the given int32 and assigns it to the NumberOfHops field.
func (o *PathTrace) SetNumberOfHops(v int32) {
	o.NumberOfHops = &v
}

// GetPathId returns the PathId field value if set, zero value otherwise.
func (o *PathTrace) GetPathId() string {
	if o == nil || utils.IsNil(o.PathId) {
		var ret string
		return ret
	}
	return *o.PathId
}

// GetPathIdOk returns a tuple with the PathId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathTrace) GetPathIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PathId) {
		return nil, false
	}
	return o.PathId, true
}

// HasPathId returns a boolean if a field has been set.
func (o *PathTrace) HasPathId() bool {
	if o != nil && !utils.IsNil(o.PathId) {
		return true
	}

	return false
}

// SetPathId gets a reference to the given string and assigns it to the PathId field.
func (o *PathTrace) SetPathId(v string) {
	o.PathId = &v
}

// GetPathMtu returns the PathMtu field value if set, zero value otherwise.
func (o *PathTrace) GetPathMtu() int32 {
	if o == nil || utils.IsNil(o.PathMtu) {
		var ret int32
		return ret
	}
	return *o.PathMtu
}

// GetPathMtuOk returns a tuple with the PathMtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathTrace) GetPathMtuOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.PathMtu) {
		return nil, false
	}
	return o.PathMtu, true
}

// HasPathMtu returns a boolean if a field has been set.
func (o *PathTrace) HasPathMtu() bool {
	if o != nil && !utils.IsNil(o.PathMtu) {
		return true
	}

	return false
}

// SetPathMtu gets a reference to the given int32 and assigns it to the PathMtu field.
func (o *PathTrace) SetPathMtu(v int32) {
	o.PathMtu = &v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *PathTrace) GetResponseTime() int32 {
	if o == nil || utils.IsNil(o.ResponseTime) {
		var ret int32
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PathTrace) GetResponseTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.ResponseTime) {
		return nil, false
	}
	return o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *PathTrace) HasResponseTime() bool {
	if o != nil && !utils.IsNil(o.ResponseTime) {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given int32 and assigns it to the ResponseTime field.
func (o *PathTrace) SetResponseTime(v int32) {
	o.ResponseTime = &v
}

func (o PathTrace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PathTrace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !utils.IsNil(o.Mss) {
		toSerialize["mss"] = o.Mss
	}
	if !utils.IsNil(o.NumberOfHops) {
		toSerialize["numberOfHops"] = o.NumberOfHops
	}
	if !utils.IsNil(o.PathId) {
		toSerialize["pathId"] = o.PathId
	}
	if !utils.IsNil(o.PathMtu) {
		toSerialize["pathMtu"] = o.PathMtu
	}
	if !utils.IsNil(o.ResponseTime) {
		toSerialize["responseTime"] = o.ResponseTime
	}
	return toSerialize, nil
}

type NullablePathTrace struct {
	value *PathTrace
	isSet bool
}

func (v NullablePathTrace) Get() *PathTrace {
	return v.value
}

func (v *NullablePathTrace) Set(val *PathTrace) {
	v.value = val
	v.isSet = true
}

func (v NullablePathTrace) IsSet() bool {
	return v.isSet
}

func (v *NullablePathTrace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePathTrace(val *PathTrace) *NullablePathTrace {
	return &NullablePathTrace{value: val, isSet: true}
}

func (v NullablePathTrace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePathTrace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


