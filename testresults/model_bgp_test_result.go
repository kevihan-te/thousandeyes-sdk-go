/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.37
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
	"time"
)

// checks if the BgpTestResult type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &BgpTestResult{}

// BgpTestResult struct for BgpTestResult
type BgpTestResult struct {
	// Data point date UTC (ISO date-time format).
	Date *time.Time `json:"date,omitempty"`
	// Epoch time (seconds) indicating the start time of the round
	RoundId *int32 `json:"roundId,omitempty"`
	Links *TestResultAppLinks `json:"_links,omitempty"`
	Monitor *TestResultMonitor `json:"monitor,omitempty"`
	// Internally tracked prefix ID.
	PrefixId *string `json:"prefixId,omitempty"`
	// Prefix being tracked.
	Prefix *string `json:"prefix,omitempty"`
	// Epoch time (seconds) indicating the start time of the round
	StartTime *int32 `json:"startTime,omitempty"`
	// Epoch time (seconds) indicating the end time of the round
	EndTime *int32 `json:"endTime,omitempty"`
	// Number of updates tracked against this prefix by this monitor.
	Updates *float64 `json:"updates,omitempty"`
	// Number of path changes tracked against this prefix by this monitor.
	PathChanges *float64 `json:"pathChanges,omitempty"`
	// Percentage reachability
	Reachability *float64 `json:"reachability,omitempty"`
}

// NewBgpTestResult instantiates a new BgpTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpTestResult() *BgpTestResult {
	this := BgpTestResult{}
	return &this
}

// NewBgpTestResultWithDefaults instantiates a new BgpTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpTestResultWithDefaults() *BgpTestResult {
	this := BgpTestResult{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *BgpTestResult) GetDate() time.Time {
	if o == nil || utils.IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetDateOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *BgpTestResult) HasDate() bool {
	if o != nil && !utils.IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *BgpTestResult) SetDate(v time.Time) {
	o.Date = &v
}

// GetRoundId returns the RoundId field value if set, zero value otherwise.
func (o *BgpTestResult) GetRoundId() int32 {
	if o == nil || utils.IsNil(o.RoundId) {
		var ret int32
		return ret
	}
	return *o.RoundId
}

// GetRoundIdOk returns a tuple with the RoundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetRoundIdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.RoundId) {
		return nil, false
	}
	return o.RoundId, true
}

// HasRoundId returns a boolean if a field has been set.
func (o *BgpTestResult) HasRoundId() bool {
	if o != nil && !utils.IsNil(o.RoundId) {
		return true
	}

	return false
}

// SetRoundId gets a reference to the given int32 and assigns it to the RoundId field.
func (o *BgpTestResult) SetRoundId(v int32) {
	o.RoundId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BgpTestResult) GetLinks() TestResultAppLinks {
	if o == nil || utils.IsNil(o.Links) {
		var ret TestResultAppLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetLinksOk() (*TestResultAppLinks, bool) {
	if o == nil || utils.IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BgpTestResult) HasLinks() bool {
	if o != nil && !utils.IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given TestResultAppLinks and assigns it to the Links field.
func (o *BgpTestResult) SetLinks(v TestResultAppLinks) {
	o.Links = &v
}

// GetMonitor returns the Monitor field value if set, zero value otherwise.
func (o *BgpTestResult) GetMonitor() TestResultMonitor {
	if o == nil || utils.IsNil(o.Monitor) {
		var ret TestResultMonitor
		return ret
	}
	return *o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetMonitorOk() (*TestResultMonitor, bool) {
	if o == nil || utils.IsNil(o.Monitor) {
		return nil, false
	}
	return o.Monitor, true
}

// HasMonitor returns a boolean if a field has been set.
func (o *BgpTestResult) HasMonitor() bool {
	if o != nil && !utils.IsNil(o.Monitor) {
		return true
	}

	return false
}

// SetMonitor gets a reference to the given TestResultMonitor and assigns it to the Monitor field.
func (o *BgpTestResult) SetMonitor(v TestResultMonitor) {
	o.Monitor = &v
}

// GetPrefixId returns the PrefixId field value if set, zero value otherwise.
func (o *BgpTestResult) GetPrefixId() string {
	if o == nil || utils.IsNil(o.PrefixId) {
		var ret string
		return ret
	}
	return *o.PrefixId
}

// GetPrefixIdOk returns a tuple with the PrefixId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetPrefixIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PrefixId) {
		return nil, false
	}
	return o.PrefixId, true
}

// HasPrefixId returns a boolean if a field has been set.
func (o *BgpTestResult) HasPrefixId() bool {
	if o != nil && !utils.IsNil(o.PrefixId) {
		return true
	}

	return false
}

// SetPrefixId gets a reference to the given string and assigns it to the PrefixId field.
func (o *BgpTestResult) SetPrefixId(v string) {
	o.PrefixId = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *BgpTestResult) GetPrefix() string {
	if o == nil || utils.IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetPrefixOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *BgpTestResult) HasPrefix() bool {
	if o != nil && !utils.IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *BgpTestResult) SetPrefix(v string) {
	o.Prefix = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *BgpTestResult) GetStartTime() int32 {
	if o == nil || utils.IsNil(o.StartTime) {
		var ret int32
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetStartTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *BgpTestResult) HasStartTime() bool {
	if o != nil && !utils.IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int32 and assigns it to the StartTime field.
func (o *BgpTestResult) SetStartTime(v int32) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *BgpTestResult) GetEndTime() int32 {
	if o == nil || utils.IsNil(o.EndTime) {
		var ret int32
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetEndTimeOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *BgpTestResult) HasEndTime() bool {
	if o != nil && !utils.IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int32 and assigns it to the EndTime field.
func (o *BgpTestResult) SetEndTime(v int32) {
	o.EndTime = &v
}

// GetUpdates returns the Updates field value if set, zero value otherwise.
func (o *BgpTestResult) GetUpdates() float64 {
	if o == nil || utils.IsNil(o.Updates) {
		var ret float64
		return ret
	}
	return *o.Updates
}

// GetUpdatesOk returns a tuple with the Updates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetUpdatesOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.Updates) {
		return nil, false
	}
	return o.Updates, true
}

// HasUpdates returns a boolean if a field has been set.
func (o *BgpTestResult) HasUpdates() bool {
	if o != nil && !utils.IsNil(o.Updates) {
		return true
	}

	return false
}

// SetUpdates gets a reference to the given float64 and assigns it to the Updates field.
func (o *BgpTestResult) SetUpdates(v float64) {
	o.Updates = &v
}

// GetPathChanges returns the PathChanges field value if set, zero value otherwise.
func (o *BgpTestResult) GetPathChanges() float64 {
	if o == nil || utils.IsNil(o.PathChanges) {
		var ret float64
		return ret
	}
	return *o.PathChanges
}

// GetPathChangesOk returns a tuple with the PathChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetPathChangesOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.PathChanges) {
		return nil, false
	}
	return o.PathChanges, true
}

// HasPathChanges returns a boolean if a field has been set.
func (o *BgpTestResult) HasPathChanges() bool {
	if o != nil && !utils.IsNil(o.PathChanges) {
		return true
	}

	return false
}

// SetPathChanges gets a reference to the given float64 and assigns it to the PathChanges field.
func (o *BgpTestResult) SetPathChanges(v float64) {
	o.PathChanges = &v
}

// GetReachability returns the Reachability field value if set, zero value otherwise.
func (o *BgpTestResult) GetReachability() float64 {
	if o == nil || utils.IsNil(o.Reachability) {
		var ret float64
		return ret
	}
	return *o.Reachability
}

// GetReachabilityOk returns a tuple with the Reachability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTestResult) GetReachabilityOk() (*float64, bool) {
	if o == nil || utils.IsNil(o.Reachability) {
		return nil, false
	}
	return o.Reachability, true
}

// HasReachability returns a boolean if a field has been set.
func (o *BgpTestResult) HasReachability() bool {
	if o != nil && !utils.IsNil(o.Reachability) {
		return true
	}

	return false
}

// SetReachability gets a reference to the given float64 and assigns it to the Reachability field.
func (o *BgpTestResult) SetReachability(v float64) {
	o.Reachability = &v
}

func (o BgpTestResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpTestResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !utils.IsNil(o.RoundId) {
		toSerialize["roundId"] = o.RoundId
	}
	if !utils.IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !utils.IsNil(o.Monitor) {
		toSerialize["monitor"] = o.Monitor
	}
	if !utils.IsNil(o.PrefixId) {
		toSerialize["prefixId"] = o.PrefixId
	}
	if !utils.IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !utils.IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !utils.IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !utils.IsNil(o.Updates) {
		toSerialize["updates"] = o.Updates
	}
	if !utils.IsNil(o.PathChanges) {
		toSerialize["pathChanges"] = o.PathChanges
	}
	if !utils.IsNil(o.Reachability) {
		toSerialize["reachability"] = o.Reachability
	}
	return toSerialize, nil
}

type NullableBgpTestResult struct {
	value *BgpTestResult
	isSet bool
}

func (v NullableBgpTestResult) Get() *BgpTestResult {
	return v.value
}

func (v *NullableBgpTestResult) Set(val *BgpTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpTestResult(val *BgpTestResult) *NullableBgpTestResult {
	return &NullableBgpTestResult{value: val, isSet: true}
}

func (v NullableBgpTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


