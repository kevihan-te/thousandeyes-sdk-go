/*
Test Results API

Get test result metrics for Cloud and Enterprise Agent tests.

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testresults

import (
	"encoding/json"
	"fmt"
)

// ApiRequestStepType The value of `stepType` is \"oauth2\" if the step was generated by Browserbot to fetch an OAuth2 access token.
type ApiRequestStepType string

// List of ApiRequestStepType
const (
	APIREQUESTSTEPTYPE_DEFAULT ApiRequestStepType = "default"
	APIREQUESTSTEPTYPE_OAUTH2 ApiRequestStepType = "oauth2"
)

// All allowed values of ApiRequestStepType enum
var AllowedApiRequestStepTypeEnumValues = []ApiRequestStepType{
	"default",
	"oauth2",
}

func (v *ApiRequestStepType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiRequestStepType(value)
	for _, existing := range AllowedApiRequestStepTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiRequestStepType", value)
}

// NewApiRequestStepTypeFromValue returns a pointer to a valid ApiRequestStepType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiRequestStepTypeFromValue(v string) (*ApiRequestStepType, error) {
	ev := ApiRequestStepType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiRequestStepType: valid values are %v", v, AllowedApiRequestStepTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiRequestStepType) IsValid() bool {
	for _, existing := range AllowedApiRequestStepTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiRequestStepType value
func (v ApiRequestStepType) Ptr() *ApiRequestStepType {
	return &v
}

type NullableApiRequestStepType struct {
	value *ApiRequestStepType
	isSet bool
}

func (v NullableApiRequestStepType) Get() *ApiRequestStepType {
	return v.value
}

func (v *NullableApiRequestStepType) Set(val *ApiRequestStepType) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRequestStepType) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRequestStepType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRequestStepType(val *ApiRequestStepType) *NullableApiRequestStepType {
	return &NullableApiRequestStepType{value: val, isSet: true}
}

func (v NullableApiRequestStepType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRequestStepType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

