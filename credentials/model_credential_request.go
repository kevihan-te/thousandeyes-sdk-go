/*
Credentials API

Manage credentials for transaction tests using the Credentials API.  The following permissions are required to access Credentials API operations:  * `Settings Tests Read` for read operations. * `Settings Tests Update` for write operations. * `View sensitive data in web transaction scripts` to view the encrypted value property of credentials. * `Settings Tests Create Transaction (Tx) Tests` to create credentials.  For more information about credentials, see [Working With Secure Credentials](https://docs.thousandeyes.com/product-documentation/browser-synthetics/transaction-tests/getting-started/working-with-secure-credentials). 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the CredentialRequest type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CredentialRequest{}

// CredentialRequest struct for CredentialRequest
type CredentialRequest struct {
	// The name of the credential.
	Name *string `json:"name,omitempty"`
	// The value of the credential that will be encrypted.
	Value *string `json:"value,omitempty"`
}

// NewCredentialRequest instantiates a new CredentialRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialRequest() *CredentialRequest {
	this := CredentialRequest{}
	return &this
}

// NewCredentialRequestWithDefaults instantiates a new CredentialRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialRequestWithDefaults() *CredentialRequest {
	this := CredentialRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CredentialRequest) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialRequest) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CredentialRequest) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CredentialRequest) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CredentialRequest) GetValue() string {
	if o == nil || utils.IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialRequest) GetValueOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CredentialRequest) HasValue() bool {
	if o != nil && !utils.IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CredentialRequest) SetValue(v string) {
	o.Value = &v
}

func (o CredentialRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCredentialRequest struct {
	value *CredentialRequest
	isSet bool
}

func (v NullableCredentialRequest) Get() *CredentialRequest {
	return v.value
}

func (v *NullableCredentialRequest) Set(val *CredentialRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialRequest(val *CredentialRequest) *NullableCredentialRequest {
	return &NullableCredentialRequest{value: val, isSet: true}
}

func (v NullableCredentialRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


